#LyX 1.4.5.1 created this file. For more info see http://www.lyx.org/
\lyxformat 245
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{graphicx}                              %for PNG images (pdflatex)
%\usepackage{graphics}                              %for EPS images (latex)
\usepackage[linkbordercolor={1.0 1.0 0.0}]{hyperref} %for \url tag
\usepackage{color}                                 %for defining custom colors
\usepackage{framed}                                %for shaded and framed paragraphs
\usepackage{textcomp}                              %for various symbols, e.g. Registered Mark
\usepackage{geometry}                              %for defining page size
\usepackage{longtable}                             %for breaking tables
\usepackage{multirow}
\usepackage{verbatim}
%
\geometry{verbose,a4paper,tmargin=2.5cm,bmargin=2.5cm,lmargin=2.5cm,rmargin=2cm}
\hypersetup{
  pdfauthor = {A.Konstantinov},
  pdftitle = {The NorduGrid Grid Manager and GridFTP Server.},
  pdfsubject = {},
  pdfkeywords = {},
  pdfcreator = {PDFLaTeX with hyperref package},
  pdfproducer = {PDFLaTeX}
}
%
\bibliographystyle{IEEEtran}                       %a nice bibliography style
%
\def\efill{\hfill\nopagebreak}%
\hyphenation{Nordu-Grid}
\setlength{\parindent}{0cm}
\setlength{\FrameRule}{1pt}
\setlength{\FrameSep}{8pt}
\addtolength{\parskip}{5pt}
\renewcommand{\thefootnote}{\fnsymbol{footnote}}
\renewcommand{\arraystretch}{1.3}
\newcommand{\dothis}{\colorbox{shadecolor}}
\newcommand{\globus}{Globus Toolkit\textsuperscript{\textregistered}~2~}
\newcommand{\GT}{Globus Toolkit\textsuperscript{\textregistered}}
\newcommand{\ngdl}{\url{http://ftp.nordugrid.org/download}~}
\definecolor{shadecolor}{rgb}{1,1,0.6}
\definecolor{salmon}{rgb}{1,0.9,1}
\definecolor{bordeaux}{rgb}{0.75,0.,0.}
\definecolor{cyan}{rgb}{0,1,1}
%
\end_preamble
\language english
\inputencoding auto
\fontscheme pslatex
\graphics default
\paperfontsize default
\spacing onehalf
\papersize a4paper
\use_geometry true
\use_amsmath 2
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes true
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
def
\backslash
today{
\backslash
number
\backslash
day/
\backslash
number
\backslash
month/
\backslash
number
\backslash
year}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
begin{titlepage}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
begin{tabular}{rl}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
resizebox*{3cm}{!}{
\backslash
includegraphics{ng-logo}}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

&
\backslash
parbox[b]{2cm}{
\backslash
textbf 
\backslash
it {
\backslash
hspace*{-1.5cm}NORDUGRID
\backslash
vspace*{0.5cm}}}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
end{tabular}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hrulefill
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

{
\backslash
raggedleft NORDUGRID-TECH-14
\backslash
par}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

{
\backslash
raggedleft 
\backslash
today
\backslash
par}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
vspace*{2cm}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center

\shape smallcaps
\size large
The ARC Computational Job Management Component - A-REX
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
vspace*{0.5cm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center

\shape italic
\size large
Description and Administrator's Manual
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
vspace*{1.5cm}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

{
\backslash
centering 
\backslash
large A.Konstantinov
\backslash
footnote{aleks@fys.uio.no} 
\backslash
large 
\backslash
par}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
end{titlepage}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset LatexCommand \tableofcontents{}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
newpage
\end_layout

\end_inset


\end_layout

\begin_layout Section
Introduction
\begin_inset LatexCommand \label{sec:intro}

\end_inset


\end_layout

\begin_layout Standard
A-REX is one of ARC middleware components that implements functions of so
 called 
\emph on
Computing Element
\emph default
 (CE).
 
\end_layout

\begin_layout Standard
It takes care of job pre- and post-processing.
 This comprises the stage-in of files containing input data or program modules
 from wide range of sources and the transfer or storing of output results.
\end_layout

\begin_layout Standard
The A-REX implements a Web Service (WS) interface which provides a way to
 submit and control computational tasks (jobs) to be executed by the A-REX
 and he underlying Local Resource Management System.
\end_layout

\begin_layout Standard

\series bold
You should use this document for advanced configuration purposes and understandi
ng of internals of the aforementioned tools.
 For general installation and configuration of whole system refer to other
 documents available at 
\begin_inset LatexCommand \url{http://www.nordugrid.org/papers.html}

\end_inset

.
 
\end_layout

\begin_layout Section
Main concepts
\begin_inset LatexCommand \label{sec:main concepts}

\end_inset


\end_layout

\begin_layout Standard
On the computing element a job is described as a set of input files (which
 may include executables), a main executable and a set of output files.
 The process of gathering input files, executing a job, and transferring/storing
 output files is called a 
\emph on
session
\emph default
.
\end_layout

\begin_layout Standard
Each job gets a directory on the CE called the 
\emph on
session directory
\emph default
 (SD).
 Input files are gathered in the SD.
 The job is supposed to produce new data files in the SD as well.
 The A-REX does not guarantee the availability of any other places accessible
 by the job other than SD (unless such a place is part of a requested Runtime
 Environment).
 The SD is also the only place which is controlled by the A-REX.
 It is accessible by the user from outside through the HTTP(S) protocol.
 Any file created outside the SD is not controlled by the A-REX.
 Any exchange of data between client and A-REX (including also program modules)
 is performed via HTTP(S).
 An URL for accessing input/output files is  obtained through the WS Local
 Information Description Interface (LIDI) of A-REX.
\end_layout

\begin_layout Standard
Each job gets an identifier (
\shape italic
jobid
\shape default
).
 This is a handle - WS-Addressing 
\begin_inset LatexCommand \cite{ws-addr-soap}

\end_inset

 XML document - which identifies the job in the A-REX and the Information
 Interface.
\end_layout

\begin_layout Standard
Jobs are initiated and controlled through the WS interface.
 Complete job descriptions (JD)are passed to the A-REX through WS in JSDL
\begin_inset LatexCommand \cite{jsdl}

\end_inset

 coded description.
 Input data files and job executables are transferred separately through
 the same interface, as described in the next section.
\end_layout

\begin_layout Section
Input/output data
\begin_inset LatexCommand \label{sec:input/output data}

\end_inset


\end_layout

\begin_layout Standard
One of the most important tasks of the A-REX is to take care of processing
 input and output data (files) of the job.
 Input files are gathered in the SD or associated cache area.
 There are two ways to put a file into the SD:
\end_layout

\begin_layout Itemize
Download is initiated by the A-REX -- This is the case for files defined
 in the JD (with name and source).
 The A-REX alone is responsible to ensure that all required files will be
 available in the SD.
\newline
The supported protocols for sources at the moment are
 (in case of full installation): GridFTP, FTP, HTTP, HTTPS (HTTP over SSLv3).
 Also some less standard sources are supported.
 Those are described below.
 The A-REX fully relies on HED framework 
\begin_inset LatexCommand \cite{hed}

\end_inset

 for data transferring capabilities.
 Hence actual set of supported protocols depends on installed Data Management
 Components of the HED.
\end_layout

\begin_layout Itemize
Upload is initiated by the user directly or through the User Interface (UI).
 Because the SD becomes available immediately at the time of submission
 of JD, UI can (and should) use that to upload data files which are not
 otherwise accessible by the A-REX.
 Examples of such files are the main executable of the job, the job's input
 files, etc.
 These files can (and should) also be specified in the JD.
\end_layout

\begin_layout Standard

\series bold
There is no
\series default
 other reliable way for a job to obtain input data on the CE based on the
 A-REX.
 Access to AFS, NFS, FTP, HTTP and any other remote data transport during
 execution of a job is not guaranteed (at least not by A-REX).
\end_layout

\begin_layout Standard
Jobs should store output files in their SD.
 Like input files, output files belong into two groups:
\end_layout

\begin_layout Itemize
Files which are supposed to be moved to a 
\emph on
Storage Element
\emph default
 (SE) and optionally registered in some 
\emph on
Indexing Service
\emph default
 like the Globus 
\emph on
Replica Location Service
\emph default
 (RLS) -- The A-REX takes care of these files.
 They have to be specified in the JD.
 If the job fails during any stage of processing, no attempt is made to
 transfer those files to their final destination, unless the option 
\emph on
preserve=yes
\emph default
 is specified in their URLs.
\end_layout

\begin_layout Itemize
Files which are supposed to be fetched by the user -- The user has to use
 a tool like the UI to obtain these files.
 They 
\series bold
must
\series default
 also be specified in the JD.
\end_layout

\begin_layout Standard
All files not specified in the JD are deleted after job execution finished.
 If job execution fails for any reason (if exit code of main executable
 is not 0) all files from first group are transferred to second one.
\end_layout

\begin_layout Section
\begin_inset LatexCommand \label{Section: Job Flow}

\end_inset

Job flow
\end_layout

\begin_layout Standard
From the point of view of the A-REX a job passes through various states.
 Picture 
\begin_inset LatexCommand \ref{job states diagram}

\end_inset

 presents a diagram of the possible states of a job.
\begin_inset Float figure
placement tbh
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
includegraphics{pic1}
\end_layout

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{job states diagram}

\end_inset

Job states
\end_layout

\end_inset

A user can examine the state of a job by querying the dedicated Local Informatio
n Description Interface of A-REX using the UI or any other suitable tool
 or through query method of WS interface.
 
\end_layout

\begin_layout Standard
Configuration can put limits on the amount of simultaneous jobs in some
 states.
 If such a limit is reached, a job ready to enter into the state in question
 will stay in it's current state waiting for a free slot.
 This situation is presented by additional state mark 
\series bold
PENDING
\series default
 to the current state name in the job's status description.
\end_layout

\begin_layout Standard
Below is the description of all actions taken by the A-REX at every state:
\end_layout

\begin_layout Itemize

\series bold
Accepted
\series default
 - In this state the job has been submitted to a CE but is not processed
 yet.
 The A-REX will analyze the JD and move to the next stage.
 If the JD can not be processed the job will be canceled and moved to the
 state 
\series bold
Finishing
\series default
.
\end_layout

\begin_layout Itemize

\series bold
Preparing
\series default
 - The input data is being gathered in the SD (stage-in).
 The A-REX is downloading the files specified in the JD and is waiting for
 files which are supposed to be uploaded by the UI.
 If all files are successfully gathered the job moves to the next state.
 If 
\series bold
any
\series default
 file can't be downloaded or it takes the UI too long to upload a file,
 the job moves to 
\series bold
Finishing
\series default
 state.
 It is possible to put a limit on the number of simultaneous 
\series bold
Preparing
\series default
 jobs.
 If this limit is exceeded, jobs ready to enter the 
\series bold
Preparing
\series default
 state  will stay in the 
\series bold
Accepted
\series default
 state, but prefixed with the PENDING: mark.
 Exceptions are jobs which have no files to be downloaded.
 These are processed out of limits.
\end_layout

\begin_layout Itemize

\series bold
Submiting
\series default
 - The job is being passed for execution to the 
\emph on
Local Resource Management System
\emph default
 (LRMS).
 The corresponding backends for many LRMSs are provided with the default
 installation.
 If the local job submission is successful the job moves to the 
\series bold
Executing
\series default
 state.
 Otherwise it moves to 
\series bold
Finishing
\series default
.
 It is possible to limit the aggregate number of jobs in 
\series bold
Submiting
\series default
 and 
\series bold
Executing
\series default
 states.
\end_layout

\begin_layout Itemize

\series bold
Executing
\series default
 - The job is queued or being executed in the LRMS.
 The A-REX takes no actions except waiting until the job finishes.
\end_layout

\begin_layout Itemize

\series bold
Killing
\series default
 - Necessary action to cancel the job in the LRMS is being taken.
\end_layout

\begin_layout Itemize

\series bold
Finishing
\series default
 - The output data is being processed (stage-out).
 Specified data files are moved to the specified SEs and are optionally
 registered at an Indexing Service.
 The user can download data files from the SD by using the UI or other adequate
 tool.
 All the files not specified as output files are removed from the SD at
 very beginning of this state.
 It is possible to limit number of simultaneous jobs in this state.
\end_layout

\begin_layout Itemize

\series bold
Finished
\series default
 - No more processing is performed by the A-REX.
 The user can continue to download data files from the SD.
 The SD is kept available for some time (default is 1 week).
 After that the job is moved to the state 
\series bold
Deleted
\series default
.
 The 'deletion' time can be obtained by querying the Information Interface
 of the A-REX.
 If a job was moved to 
\series bold
Finished
\series default
 because of failure, it may be restarted on request of a client.
 When restarted, a job is moved to the state previous to the one in which
 it failed and is assigned mark PENDING.
 This is needed in order to not break the configuration limits.
 Exception is a job failed in 
\series bold
Executing
\series default
 state and lacking input files specified in JD.
 Such a job is treated like failed in 
\series bold
Preparing
\series default
 state.
\end_layout

\begin_layout Itemize

\series bold
Deleted
\series default
 - The job is moved to this state if the user have not requested job to
 be cleaned before the SD's lifetime expires.
 Only minimal subset of information about such job is kept.
 The SD is not available anymore.
\end_layout

\begin_layout Standard
In case of a failure special processing is applied to output files.
 All specified output files are treated as 
\series bold
downloadable by the user
\series default
.
 No files will be moved to their destination SE.
\end_layout

\begin_layout Section
URLs
\end_layout

\begin_layout Standard
In full installation the A-REX and it's components support the following
 data transfer protocols and corresponding URLs: 
\emph on
ftp, gsiftp, http, https, lfc
\emph default
 and 
\emph on
rls.

\emph default
 For more information please see 
\begin_inset Quotes eld
\end_inset

The Hosting Environment of the Advanced Resource Connector middleware
\begin_inset Quotes erd
\end_inset

 document 
\begin_inset LatexCommand \cite{hed}

\end_inset

.
\end_layout

\begin_layout Section
\begin_inset LatexCommand \label{section: internals}

\end_inset

Internals
\end_layout

\begin_layout Subsection
Internal Files of the A-REX
\end_layout

\begin_layout Standard
For each local UNIX user listed in the A-REX configuration - including a
 generic one which covers all local user identities - a 
\shape italic
control directory
\shape default
 exists.
 In this directory the A-REX stores information about jobs belonging to
 that user.
 Multiple users can share the same 
\shape italic
control directory
\shape default
.
 In most common configuration case A-REX serves all users defined by Operating
 System and stores their control file in same directory.
 To make it easier to recover in case of failure, the A-REX stores most
 information in files rather than in memory.
 All files belonging to the same job have names starting with 
\series bold
job.ID.,
\series default
 where ID is the job identifier.
\end_layout

\begin_layout Standard
The files in the control directory and their formats are described below:
\end_layout

\begin_layout Itemize

\shape italic
job.ID.status
\shape default
 - current state of the job.
 This is a plain text file containing a single word representing the internal
 name of current state of the job.
 Possible values and corresponding external job states are :
\end_layout

\begin_deeper
\begin_layout Itemize
ACCEPTED/
\series bold
Accepted
\end_layout

\begin_layout Itemize
PREPARING/
\series bold
Preparing
\end_layout

\begin_layout Itemize
SUBMITTING/
\series bold
Submiting
\end_layout

\begin_layout Itemize
INLRMS/
\series bold
Executing
\end_layout

\begin_layout Itemize
FINISHING/
\series bold
Finishing
\end_layout

\begin_layout Itemize
FINISHED/
\series bold
Finished
\end_layout

\begin_layout Itemize
CANCELING/
\series bold
Killing
\end_layout

\begin_layout Itemize
DELETED/
\series bold
Deleted
\end_layout

\end_deeper
\begin_layout Standard
See section 
\begin_inset LatexCommand \ref{Section: Job Flow}

\end_inset

 for a description of the various states.
 Additionally each value can be prepended the prefix 
\begin_inset Quotes eld
\end_inset

PENDING:
\begin_inset Quotes erd
\end_inset

 (like PENDING:ACCEPTED, see section 
\begin_inset LatexCommand \ref{Section: Job Flow}

\end_inset

).
 This is used to show that a job is 
\emph on
ready
\emph default
 to be moved to the next state but it has to stay in it's current state
 
\emph on
only
\emph default
 because otherwise some limits set in the configuration would be exceeded.
\end_layout

\begin_layout Itemize

\shape italic
job.ID.description
\shape default
 - contains the description of the job (JD).
\end_layout

\begin_layout Itemize

\shape italic
job.ID.local
\shape default
 - information about the job used by the A-REX.
 It consists of lines of format 
\shape italic

\begin_inset Quotes eld
\end_inset

name = value
\begin_inset Quotes erd
\end_inset


\shape default
.
 Not all of them are always available.
 The following names are defined:
\end_layout

\begin_deeper
\begin_layout Itemize

\shape italic
subject
\shape default
 - user certificate's subject, also known as the distinguished name (DN)
\end_layout

\begin_layout Itemize

\shape italic
starttime
\shape default
 - GMT time when the job was accepted represented in the Generalized Time
 format of LDAP 
\end_layout

\begin_layout Itemize

\shape italic
lifetime
\shape default
 - time period to preserve the SD after the job has finished in seconds
\end_layout

\begin_layout Itemize

\shape italic
cleanuptime
\shape default
 - GMT time when the job should be removed from the cluster and it's SD
 deleted in Generalized Time format
\end_layout

\begin_layout Itemize

\shape italic
notify
\shape default
 - email addresses and flags to send mail to about the job specified status
 changes
\end_layout

\begin_layout Itemize

\shape italic
processtime
\shape default
 - GMT time when to start processing the job in Generalized Time format
\end_layout

\begin_layout Itemize

\shape italic
exectime
\shape default
 - GMT time when to start job execution in Generalized Time format
\end_layout

\begin_layout Itemize

\shape italic
expiretime
\shape default
 - GMT time when the credentials delegated to the job expire in Generalized
 Time format
\end_layout

\begin_layout Itemize

\shape italic
rerun
\shape default
 - number of retries left to rerun the job
\end_layout

\begin_layout Itemize

\shape italic
jobname
\shape default
 - name of the job as supplied by the user
\end_layout

\begin_layout Itemize

\shape italic
lrms
\shape default
 - name of the LRMS backend to be used for local submission
\end_layout

\begin_layout Itemize

\shape italic
queue
\shape default
 - name of the queue to run the job at
\end_layout

\begin_layout Itemize

\shape italic
localid
\shape default
 - job id in LRMS (appears only after the job has reached state 
\series bold
InLRMS
\series default
)
\end_layout

\begin_layout Itemize

\shape italic
args
\shape default
 - executable name followed by a list of command-line arguments
\end_layout

\begin_layout Itemize

\shape italic
downloads
\shape default
 - number of files to download into the SD before execution
\end_layout

\begin_layout Itemize

\shape italic
uploads
\shape default
 - number of files to upload from the SD after execution
\end_layout

\begin_layout Itemize

\shape italic
gmlog
\shape default
 - directory name which holds files containing information about the job
 when accessed through GridFTP interface
\end_layout

\begin_layout Itemize

\shape italic
clientname
\shape default
 - name (as provided by the user interface) and IP address:port of the submittin
g client machine
\end_layout

\begin_layout Itemize

\shape italic
clientsoftware
\shape default
 - version of software used to submit the job
\end_layout

\begin_layout Itemize

\shape italic
sessiondir
\shape default
 - the job's SD
\end_layout

\begin_layout Itemize

\shape italic
failedstate
\shape default
 - state in which job failed (available only if it is possible to restart
 the job)
\end_layout

\begin_layout Itemize

\shape italic
jobreport
\shape default
 - URL of a user requested 
\emph on
logger service
\emph default
.
 The A-REX will also send job records to this service in addition to the
 default logger service configured in the configuration (This feature does
 not work in current implementation).
\end_layout

\end_deeper
\begin_layout Standard
This file is filled partially during job submission and fully when the job
 moves from the 
\series bold
Accepted
\series default
 to the 
\series bold
Preparing
\series default
 state.
\end_layout

\begin_layout Itemize

\shape italic
job.ID.input
\shape default
 - list of input files.
 Each line contains 2 values separated by a space.
 First value contains name of the file relative to the SD.
 Second value is an URL or a file description.
 Example:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{1cm}
\end_layout

\end_inset


\shape italic
input.dat gsiftp://grid.domain.org/dir/input_12378.dat
\end_layout

\begin_layout Standard

\emph on
URL
\emph default
 represents location from which file can be downloaded.
 Each URL can contain additional options.
\end_layout

\begin_layout Standard

\shape italic
file description
\shape default
 - [size][.checksum].
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{1cm}
\end_layout

\end_inset


\shape italic
size
\shape default
 - size of the file in bytes.
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{1cm}
\end_layout

\end_inset


\shape italic
checksum
\shape default
 - checksum of the file identical to the one produced by 
\series bold
\shape italic
cksum
\series default
\shape default
 (1).
\end_layout

\begin_layout Standard
Both size and checksum can be left out.
 Special kind of file description *.* is used to specify files which are
 
\series bold
not
\series default
 required to exist.
\end_layout

\end_deeper
\begin_layout Standard
This file is used by the '
\series bold
\shape italic
downloader
\series default
\shape default
' utility.
 Files with 
\emph on
URL
\emph default
 will be downloaded to the SD and files with 'file description' will simply
 be checked to exist.
 Each time a new 
\series bold
valid
\series default
 file appears in the SD it is removed from the list and 
\shape italic
job.ID.input
\shape default
 is updated.
 Any external tool can thus track the process of collecting input files
 by checking 
\shape italic
job.ID.input.
\end_layout

\begin_layout Itemize

\shape italic
job.ID.output
\shape default
 - list of output files.
 Each line contains 1 or 2 values separated by a space.
 First value is the name of the file relative to the SD.
 The second value, if present, is a URL.
 Supported URLs are the same as those supported by job.ID.input.
\end_layout

\begin_layout Standard
This file is used by the '
\series bold
\shape italic
uploader
\series default
\shape default
' utility.
 Files with 
\shape italic
URL
\shape default
 will be uploaded to SE and remaining files will be left in the SD.
 Each time a file is uploaded it is removed from the list and 
\shape italic
job.ID.output
\shape default
 is updated.
 Files not mentioned as output files are removed from the SD at the the
 beginning of the 
\series bold
Finishing
\series default
 state.
\end_layout

\begin_layout Itemize

\shape italic
job.ID.failed
\shape default
 - the existence of this file marks the failure of the job.
 It can also contain one or more lines of text describing the reason of
 failure.
 Failure includes the return code different from zero of the job itself.
\end_layout

\begin_layout Itemize

\shape italic
job.ID.errors
\shape default
 - this file contains the output produced by external utilities like 
\series bold
\shape italic
downloader
\series default
\shape default
, 
\series bold
\shape italic
uploader
\series default
\shape default
, script for job submission to LRMS, etc on their stderr handle.
 Those are not necessarily errors, but can be just useful information about
 actions taken during the job processing.
 In case of problem include content of that file while asking for help.
\end_layout

\begin_layout Itemize

\shape italic
job.ID.diag
\shape default
 - information about resources used during execution of job and other informatio
n suitable for diagnostics and statistics.
 It's format is similar to that of 
\shape italic
job.ID.local
\shape default
.
 The following names are at least defined:
\end_layout

\begin_deeper
\begin_layout Itemize

\shape italic
nodename
\shape default
 - name of computing node which was used to execute job,
\end_layout

\begin_layout Itemize

\shape italic
runtimeenvironments
\shape default
 - used runtime environments separated by ';',
\end_layout

\begin_layout Itemize

\shape italic
exitcode
\shape default
 - numerical exit code of job,
\end_layout

\begin_layout Itemize

\shape italic
frontend_distribution
\shape default
 - name and version of operating system distribution on frontend computer,
\end_layout

\begin_layout Itemize

\shape italic
frontend_system
\shape default
 - name of operating on frontend computer,
\end_layout

\begin_layout Itemize

\shape italic
frontend_subject
\shape default
 - subject (DN) of certificate representing frontend computer,
\end_layout

\begin_layout Itemize

\shape italic
frontend_ca
\shape default
 - subject (DN) of issuer of certificate representing frontend computer,
\end_layout

\begin_layout Standard
and other information provided by GNU 
\emph on
time
\emph default
 utility.
 Note that some implementation of 
\emph on
time
\emph default
 insert unrequested information in their output.
 Hence some lines can have broken format.
\end_layout

\end_deeper
\begin_layout Itemize

\shape italic
job.ID.proxy
\shape default
 -delegated X509 credentials.
\end_layout

\begin_layout Itemize

\shape italic
job.ID.proxy.tmp
\shape default
 - temporary X509 credentials with different UNIX ownership used by processes
 run with effective 
\emph on
user id
\emph default
 different form job owner's 
\emph on
id
\emph default
.
\end_layout

\begin_layout Standard
There are other files with names like job.ID.* which are created and used
 by different parts of the A-REX.
 Their presence in the 
\shape italic
control directory
\shape default
 can not be guaranteed and can change depending on changes in the A-REX
 code.
\end_layout

\begin_layout Subsection
Web Service Interface
\end_layout

\begin_layout Standard
A-REX Web Service Interface provides means to submit a description of a
 computational job to a computing resource, to stage-in additional data,
 to monitor and control processing of jobs, and obtain data produced during
 the execution of a job.
 The WS Interface is built and deployed inside the Hosting Environment Daemon
 (HED) infrastructure
\begin_inset LatexCommand \cite{hed}

\end_inset

.
\end_layout

\begin_layout Subsubsection
Basic Execution Service Interface
\end_layout

\begin_layout Standard
The job submission and control interface is based on a document produced
 by the OGF OGSA Basic Execution Services (BES) Working Group
\begin_inset LatexCommand \cite{ogsa-bes}

\end_inset

.
\end_layout

\begin_layout Standard
The exchange of SOAP messages is performed via HTTP(S).
 The BES interface is represented by two port-types - BES-Management and
 BES-Factory.
 The former is made to control the A-REX service itself and thus defines
 operations to start and stop the functionality of the BES service.
 The A-REX does not implement remote control of service functionality.
 Hence the BES-Management port-type is not functional.
 The BES-Factory port-type provides operations to submit new jobs (to create
 an activity in terms of BES) and to monitor its state.
 It also has an ability to provide information about the service.
 A-REX fully implements the functionality of this port-type.
\end_layout

\begin_layout Standard
For job descriptions A-REX accepts the Job Submission Description Language
 (JSDL)
\begin_inset LatexCommand \cite{jsdl}

\end_inset

 documents as defined by the OGF Job Submission Description Language Working
 Group.
 Supported elements and extensions are described below.
\end_layout

\begin_layout Subsubsection
Extensions to OGSA BES interface
\end_layout

\begin_layout Standard
A-REX introduces a new operation in addition to those provided by BES.
 It does that by defining its own port-type with the single operation 
\emph on
ChangeActivityStatus
\emph default
 (see Appendix C).
 This operation provides a way to request simple transfers between states
 of jobs and corresponding actions.
\end_layout

\begin_layout Itemize

\emph on
ChangeActivityStatus
\end_layout

\begin_deeper
\begin_layout Itemize
Input
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
ActivityStatusType OldStatus
\emph default
: Description of the state the job is supposed to be in during execution
 of this request.
 If the current state of the job is different from the one having been given,
 the operation is aborted and a fault is returned.
 This parameter is optional.
\end_layout

\begin_layout Itemize

\emph on
ActivityStatusType NewStatus
\emph default
: Description of the state the job is to be put into.
\end_layout

\end_deeper
\begin_layout Itemize
Output
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
ActivityStatusType NewStatus
\emph default
: Description of the current state of the job.
\end_layout

\end_deeper
\begin_layout Itemize
Fault(s)
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
NotAuthorizedFault
\emph default
: Indicates that the client is not allowed to do this operation.
\end_layout

\begin_layout Itemize

\emph on
InvalidActivityIdentifierFault
\emph default
: There is no such job/activity.
\end_layout

\begin_layout Itemize

\emph on
CantApplyOperationToCurrentStateFault
\emph default
: The requested transition is not possible.
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
On result of this command, the job should be put into the requested state.
 If such a procedure cannot be performed immediately then the corresponding
 sequence is initiated and fault OperationWillBeAppliedEventuallyFault will
 be returned.
\end_layout

\begin_layout Standard
Since BES allows implementations to extend their initial activity states
 with additional sub-states, A-REX defines a set of sub-states of activity
 processing in addition to those defined by the BES, as listed in Table
 
\begin_inset LatexCommand \ref{tab:Job-states-definitions}

\end_inset

.
 Their meaning is described in section 
\begin_inset LatexCommand \ref{Section: Job Flow}

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Caption
\begin_inset LatexCommand \label{tab:Job-states-definitions}

\end_inset

Job states definitions and mappings
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="16" columns="3">
<features headTopDL="true">
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="left" valignment="top" leftline="true" rightline="true" width="10cm">
<row topline="true" bottomline="true" endhead="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Applicable BES State
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
ARC Sub-state
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Description
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
renewcommand{
\backslash
multirowsetup}{
\backslash
centering}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
multirow{2}{2cm}{
\end_layout

\end_inset

Pending
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Accepting
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" width="10cm">
\begin_inset Text

\begin_layout Standard
Job is in the process of being submitted
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell multicolumn="1" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Accepted
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Job was submitted
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
renewcommand{
\backslash
multirowsetup}{
\backslash
centering}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
multirow{7}{2cm}{
\end_layout

\end_inset

Running
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Preparing
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Stage-in process is going on
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell multicolumn="1" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Prepared
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Stage-in process has finished
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell multicolumn="1" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Submiting
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Communication with local batch system is in process
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell multicolumn="1" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Executing
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Job is being executed in local batch system
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell multicolumn="1" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Killing
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Communication with local batch system to terminate execution is in process
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell multicolumn="1" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Executed
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Job execution in local batch system has finished
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell multicolumn="1" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Finishing
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Stage-out process is going on
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Cancelled
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Finished
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
There was a failure during execution
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Finished
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Finished
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Job finished successfully
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Finished
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Deleted
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Job finished and was left in A-REX too long
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
All
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Pending
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Job is prevented from going to the next state due to some internal limits;
 this sub-state appears in parallel with other sub-states
\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
All
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Held
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Job processing is suspended on client request; this sub-state appears in
 parallel with other sub-states.
 This state is reserved for future and i snot implemented yet.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Delegation Interface
\end_layout

\begin_layout Standard
The A-REX also supports the Delegation Interface (see Appendix D).
 This is a common purpose interface to be used by ARC services which accepts
 delegated credentials from clients.
 The Delegation Interface implements two operations: initialization of credentia
ls delegation (DelegateCredentialsInit) and update/renewal of credentials
 (UpdateCredentials).
\end_layout

\begin_layout Itemize

\emph on
DelegateCredentialsInit
\emph default
 operation - this operation performs the first half of the credentials delegatio
n sequence.
\end_layout

\begin_deeper
\begin_layout Itemize
Input
\end_layout

\begin_deeper
\begin_layout Itemize
None.
 On this request the service generates a pair of 
\emph on
public
\emph default
 and private keys.
 The public key is then sent to the client in response.
\end_layout

\end_deeper
\begin_layout Itemize
Output(s)
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
TokenRequestType TokenRequest
\emph default
: Contains the public key generated by the service as a Value element.
 It also provides an identifier in the Id element which should be used to
 refer to the corresponding private key.
\end_layout

\end_deeper
\begin_layout Itemize
Fault(s)
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
UnsupportedFault
\emph default
: Indicates that the service does not support this operation despite supporting
 the port-type.
\end_layout

\begin_layout Itemize

\emph on
ProcessingFault
\emph default
: Internal problems during generation of the token.
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize

\emph on
UpdateCredentials
\emph default
 operation - this operation makes it possible to update the content of delegated
 credentials (like in the case of credentials being renewed) unrelated to
 other operations of the service.
\end_layout

\begin_deeper
\begin_layout Itemize
Input
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
DelegatedTokenType DelegatedToken
\emph default
: Contains an X509 proxy certificate based on the public key from the DelegateCr
edentialsInit signed by the user's proxy certificate.
 Also includes the Id element which identifies the private key stored at
 the service side associated with these credentials.
 The reference element refers to the object to which these credentials should
 be applied in a way specific to the service.
 The same element must also be used for delegating credentials as part of
 other operations on service.
\end_layout

\end_deeper
\begin_layout Itemize
Output(s)
\end_layout

\begin_deeper
\begin_layout Itemize
None.
\end_layout

\end_deeper
\begin_layout Itemize
Fault(s)
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
UnsupportedFault
\emph default
: Indicates that service does not support this operation despite supporting
 the port-type.
\end_layout

\begin_layout Itemize

\emph on
ProcessingFault
\emph default
: Internal problems during generation of the token.
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
Additionally, A-REX Web Service Interface allows delegation to be performed
 as part of the 
\emph on
CreateActivity
\emph default
 operation of the BES-Factory port-type.
 For this it accepts the element 
\emph on
DelegatedCredentials
\emph default
 inside the 
\emph on
CreateActivity
\emph default
 element.
 The 
\emph on
Id
\emph default
 element of 
\emph on
DelegatedCredentials
\emph default
 must contain an identifier obtained in response to the previous 
\emph on
DelegateCredentialsInit
\emph default
 operation.
 For more information about delegations and delegation interface refer to
 
\begin_inset LatexCommand \cite{wsrf-rp}

\end_inset

.
\end_layout

\begin_layout Subsubsection
Local Information Description Interface
\end_layout

\begin_layout Standard
The A-REX implements the Local Information Description Interface (LIDI)
 interface common for all ARC services.
 This interface is based on OASIS Web Services Resource Properties specification
\begin_inset LatexCommand \cite{wsrf-rp}

\end_inset

.
 Information about resources and maintained activities/jobs are represented
 in a 
\emph on
WS-Resource Properties
\emph default
 informational XML document.
 The document type is defined in the A-REX WSDL as a 
\emph on
ResourceInformationDocumentType
\emph default
.
 It contains the following elements/resources:
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
nordugrid
\emph default
 - description of computing resource that uses NorudGrid LDAP schema 
\begin_inset LatexCommand \cite{is}

\end_inset

 converted to XML document.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
Domains -
\emph default
 description of a computation resource that uses Glue2 schema.
\end_layout

\begin_layout Standard
All information can be accessed either through requests on particular resources
 or through XPath queries using WS-Resource Properties operations.
\end_layout

\begin_layout Subsubsection
Supported JSDL elements
\end_layout

\begin_layout Standard
A-REX supports the following elements from the JSDL version 1.0 specification
\begin_inset LatexCommand \cite{jsdl}

\end_inset

 including POSIX Applications extension and JSDL HPC Profile Application
 Extension 
\begin_inset LatexCommand \cite{jsdl-hpc}

\end_inset

:
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
JobName -
\emph default
 name of the job as assigned by the user.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
Executable
\emph default
\InsetSpace \space{}
(POSIX,HPC) - name of the executable file.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
Argument
\emph default
\InsetSpace \space{}
(POSIX,HPC) - arguments the executable will be launched with.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
DataStaging
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
Filename - name of the data file on the executing node.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
Source
\emph default
 - source where the file will be taken from before execution.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
Target -
\emph default
 destination the file will be delivered to after execution.
\end_layout

\end_deeper
\begin_layout List
\labelwidthstring 00.00.0000

\emph on
Input
\emph default
\InsetSpace \space{}
(POSIX,HPC) - file to be used as standard input for the executable.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
Output
\emph default
\InsetSpace \space{}
(POSIX,HPC) - file to be used as standard output for the executable.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
Error
\emph default
\InsetSpace \space{}
(POSIX,HPC) - file to be used as standard error for the executable.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
MemoryLimit
\emph default
\InsetSpace \space{}
(POSIX) - amount of physical memory needed for execution.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
TotalPhysicalMemory
\emph default
 - same as MemoryLimit.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
IndividualPhysicalMemory
\emph default
 - same as MemoryLimit.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
CPUTimeLimit
\emph default
\InsetSpace \space{}
(POSIX) - maximal amount of CPU time needed for execution.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
TotalCPUTime
\emph default
 - same as CPUTimeLimit.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
IndividualCPUTime
\emph default
 - same as CPUTimeLimit.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
WallTimeLimit
\emph default
\InsetSpace \space{}
(POSIX) - amount of clock time needed for execution.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
TotalCPUCount -
\emph default
 number of CPUs needed for execution.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
IndividualCPUCount
\emph default
 - same as 
\emph on
TotalCPUCount
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard

%Environment(POSIX) - environment variable.
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
ARC-specific JSDL Extensions
\end_layout

\begin_layout Standard
A-REX accepts JSDL documents having the following additional elements (see
 Appendix E):
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
IsExecutable -
\emph default
 marks file to become executable after being delivered to the computing
 resource.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
RunTimeEnvironment
\emph default
 - specifies the name of the Runtime Environment needed for job execution.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
Middleware
\emph default
 - request for specific middleware on the computing resource frontend.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
RemoteLogging -
\emph default
 destination for the usage record report of the executed job.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
LocalLogging
\emph default
 - name for the virtual directory available through job interface and containing
 various debug information about job execution.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
AccessControl
\emph default
 - ACL expression which describes the identities of those clients who are
 allowed to perform operations on this job.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
Notify
\emph default
 - Email destination for notification of job state changes.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
SessionLifeTime
\emph default
 - duration for the directory containing job-related files to exist after
 the job finished executing.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
JoinOutputs
\emph default
 - specifies if standard output and standard error channels must be merged.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
Reruns -
\emph default
 defines how many times a job is allowed to rerun in case of failure.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
CredentialServer -
\emph default
 URL of MyProxy service which may be used for renewing the expired delegated
 job credentials.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
CandidateTarget -
\emph default
 specifies host name and queue of a computing resource.
\end_layout

\begin_layout Section
Cache
\begin_inset LatexCommand \label{sec:cache}

\end_inset


\end_layout

\begin_layout Standard
The A-REX can cache input files.
 Caching is enabled if corresponding command is present in configuration
 file.
 The A-REX does not cache files marked as executable in job.
 Caching can also be explicitly turned off by user for each file by using
 
\shape italic
cache=no
\shape default
 option in URL (for URL options read 
\begin_inset Quotes eld
\end_inset

Protocols, Uniform Resource Locators (URL) and extensions supported in ARC
\begin_inset Quotes erd
\end_inset

 
\begin_inset LatexCommand \cite{urls}

\end_inset

).
 The disc space occupied by cache is controlled by removing unused files.
 For more information look in section 
\begin_inset LatexCommand \ref{SubSection: ConfigFile}

\end_inset

.
\end_layout

\begin_layout Standard

\emph on
NOTE: The caching algorithm used by A-REX and described above is currently
 being replaced by a better one which is no robust and provides better scalabili
ty.
\end_layout

\begin_layout Subsection
Structure
\end_layout

\begin_layout Standard
Cache directory contains plain files.
 Those are
\end_layout

\begin_layout Itemize

\shape italic
list
\shape default
 - stores names of the files (8 digit numbers) and corresponding URLs delimited
 by blank space.
 Each pair is delimited by some amount of 
\backslash
0 codes.
 Also creation and expiration times are stored if available
\end_layout

\begin_layout Itemize

\shape italic
old
\shape default
 - stores URLs which have been removed from cache.
 Records are delimited by some amount of 
\backslash
0 codes and are meant to be removed by some external routine.
\end_layout

\begin_layout Itemize

\shape italic
new
\shape default
 - stores URLs which have been added to cache.
 Records are delimited by some amount of 
\backslash
0 codes and are removed when corresponding files are removed from cache.
 They can also be handled by some external routines.
 Every time record is added to 
\emph on
old
\emph default
 it is removed from 
\emph on
new
\emph default
.
\end_layout

\begin_layout Itemize

\shape italic
statistics
\shape default
 - consists of strings containing 
\emph on
name=value
\emph default
 pairs.
 Following names are defined:
\end_layout

\begin_deeper
\begin_layout Itemize

\shape italic
hardsize
\shape default
 -size of file system for storing cached data
\end_layout

\begin_layout Itemize

\shape italic
hardfree
\shape default
 - amount of disc space available on that file system
\end_layout

\begin_layout Itemize

\shape italic
softsize
\shape default
 - if cache exceeds this size files are started being removed 
\end_layout

\begin_layout Itemize

\shape italic
softfree
\shape default
 - space left till softsize (can be negative)
\end_layout

\begin_layout Itemize

\shape italic
claimed
\shape default
 - space used by files claimed by running jobs
\end_layout

\begin_layout Itemize

\shape italic
unclaimed
\shape default
 - space used by files not being currently used by any job
\end_layout

\end_deeper
\begin_layout Itemize

\shape italic
########.info
\shape default
 - stores state of file (
\shape italic
########
\shape default
 stands for 8 digits).
 State is represented by one character:
\newline

\shape italic
c
\shape default
 - just created, content is empty.
\newline

\shape italic
f
\shape default
 - failed to download (treated same as 'c').
\newline

\shape italic
r
\shape default
 - ready to be used, content is valid.
\newline

\shape italic
d
\shape default
 - being downloaded.
 'd' is followed by identifier of application/job downloading that file.
 During content's download this file has write lock set.
\end_layout

\begin_layout Itemize

\shape italic
########.claim
\shape default
 - stores list of identifiers of applications/jobs using this file.
 Identifiers are stored one per line.
\end_layout

\begin_layout Itemize

\shape italic
########
\shape default
 - files storing content of corresponding URL.
 These can be stored in separate directory.
\end_layout

\begin_layout Standard
Files 
\shape italic
list, old , new
\shape default
 and 
\shape italic
########.info
\shape default
 has to be stored on file system which has support for files' locking.
\end_layout

\begin_layout Subsection
How it works
\end_layout

\begin_layout Standard
If a job requests an input file which is subject for caching, it is stored
 in the cache directory instead of the SD.
 The file is made available to the job by either soft-linking it in the
 SD or copying it to the SD.
 The latter option is more secure and hence advised.
\end_layout

\begin_layout Standard
Before downloading a file the A-REX tries to determine it's size and then
 tries to preallocate space in the cache directory by writing an empty file
 of the same size.
 If this fails (possibly because the file system has no more space), it
 tries to the remove oldest cached files which are not being used by any
 job.
 This means that 
\series bold
the real hard limit of cache size is the space available in the file-system
\series default
.
 In case cache gets full and it is impossible to free enough space, the
 download fails and then is retried without using cache.
\end_layout

\begin_layout Standard
Before giving access to an already cached file, the A-REX contacts the original
 file source to check if the user has sufficient access rights to the file.
 Not all protocols make this check possible.
 Also, file creation or validity times are checked to make sure the cached
 file is fresh.
 If it is impossible to obtain creation and invalidation times, the file
 is invalidated 24 hours after it was downloaded.
\end_layout

\begin_layout Standard
The A-REX checks the cache periodically.
 If the space used by cache exceeds the high water-mark given in the configurati
on file (
\emph on
softsize
\emph default
), it tries to remove the oldest unused files until cache size drops below
 the low water-mark.
 This sets the soft limit of cache size.
\end_layout

\begin_layout Standard
There are two kinds of caches supported.
 Files in 
\shape italic
private
\shape default
 cache are owned by the Unix user to which a Grid user is mapped.
 Those files are readable only by that particular Unix user.
 Another kind of cache is 
\shape italic
shared
\shape default
.
 Files in the shared cache are owned by the Unix user who started A-REX
 and are readable by everyone.
\end_layout

\begin_layout Section
Files and directories
\begin_inset LatexCommand \label{sec:files and directories}

\end_inset


\end_layout

\begin_layout Subsection
Modules
\end_layout

\begin_layout Standard
The A-REX consists of several separate modules.
 These are:
\end_layout

\begin_layout Itemize

\shape italic
libarex.so
\shape default
 - The main module providing main functionality and web interface.
 It is implemented as HTTP and SOAP service inside HED.
 It is responsible for processing jobs, moving them through states and running
 other modules.
\end_layout

\begin_layout Itemize

\shape italic
downloader
\shape default
 - This is a module responsible for gathering input files in the SD.
 It processes the 
\shape italic
job.ID.input
\shape default
 file and updates it.
\end_layout

\begin_layout Itemize

\shape italic
uploader
\shape default
 - This module is responsible for delivering output files to the specified
 SEs and registration at an Indexing Service (like RLS) as needed.
 It processes and updates the 
\shape italic
job.ID.output
\shape default
 file.
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard

%cache-register - Utility to register cached data into an Indexing Service.
 It reads and modifies cache informational files old and new (as described
 in section ).
 Configuration is read directly from the A-REX's configuration file (see
 section ).
 It is run by the A-REX every 5 minutes.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard

%frontend-info-collector - Utility to gather information about the frontend.
 It puts collected information into the job.ID.diag file.
\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\emph on
gm-kick
\emph default
 - Sends a signal to the A-REX though a FIFO file to wake it up.
 It's used to increase responsiveness of A-REX.
\end_layout

\begin_layout Itemize

\emph on
cluster+qju.pl
\emph default
 - Collects and generates information about computing resource as XML document
 in NorduGrid and Glue 2 format.
\end_layout

\begin_layout Standard
The following modules are always run under the Unix account to which a Grid
 user is mapped.
\end_layout

\begin_layout Itemize

\shape italic
smtp-send.sh
\shape default
 and 
\shape italic
smtp-send
\shape default
 - These are the modules responsible for sending e-mail notifications to
 the user.
 The format of the mail messages can be easily changed by editing the simple
 shell script 
\shape italic
smtp-send.sh
\shape default
.
 
\end_layout

\begin_layout Itemize

\shape italic
submit-*-job
\shape default
 - Here * stands for the name of the LRMS.
 Currently supported LRMS are PBS/Torque, Condor and SGE.
 Also 
\emph on
fork
\emph default
 pseudo-LRMS is supported for testing purposes.
 This module is responsible for job submission to the LRMS.
\end_layout

\begin_layout Itemize

\shape italic
cancel-*-job
\shape default
 - This script is for canceling jobs which have been already submitted to
 the LRMS.
\end_layout

\begin_layout Itemize

\shape italic
scan-*-job
\shape default
 -This shell script is responsible for notifying the A-REX about completion
 of jobs.
 It's implementation for PBS uses server logs to extract information about
 jobs.
 If logs are not available it uses the less reliable 
\emph on
qstat
\emph default
 command for that.
 Other backends use different techniques.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
begin{comment}
\end_layout

\end_inset

In addition, there is also an administration utility:
\end_layout

\begin_layout Itemize

\shape italic
gm-jobs
\shape default
 - prints a list of jobs available on the cluster and the number of jobs
 in each state.
\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{0.5cm}
\end_layout

\end_inset

gm-jobs [-h] [-l] [-u uid] [-U name]
\newline

\begin_inset ERT
status open

\begin_layout Standard


\backslash
hspace*{0.5cm}
\end_layout

\end_inset

-l -- print more information about each job,
\newline

\begin_inset ERT
status open

\begin_layout Standard


\backslash
hspace*{0.5cm}
\end_layout

\end_inset

-u -- pretend utility is run by user with id 
\emph on
uid
\emph default
,
\newline

\begin_inset ERT
status open

\begin_layout Standard


\backslash
hspace*{0.5cm}
\end_layout

\end_inset

-U -- pretend utility is run by user with name 
\emph on
name
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
end{comment}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Directories
\end_layout

\begin_layout Standard
The A-REX is installed into a single installation point referred as $ARC_LOCATIO
N and the following sub-directories are used:
\end_layout

\begin_layout Standard
\leftindent 1cm
$ARC_LOCATION/bin -- tools
\end_layout

\begin_layout Standard
\leftindent 1cm
$ARC_LOCATION/libexec -- program modules used by A-REX
\end_layout

\begin_layout Standard
\leftindent 1cm
/etc -- central configuration file - location used by default
\end_layout

\begin_layout Standard
\leftindent 1cm
$ARC_LOCATION/lib/arc -- service module
\end_layout

\begin_layout Standard
The A-REX also uses following directories:
\end_layout

\begin_layout Itemize

\shape italic
session root directory
\shape default
 - This is the directory in which a user's SDs are created.
 It's location is configurable per UNIX user.
 Several (or even all) users may share the same session root directory.
\newline
The
 A-REX need to have permission to create new files and directories in the
 session root directory.
 If A-REX is run under a dedicated user account, that account needs full
 permissions in the 
\shape italic
session root directory
\shape default
.
\newline
If A-REX is run under the 
\emph on
root
\emph default
 account, make sure 
\shape italic
session root directory
\shape default
 resides on a file system which does not limit the capabilities of the 
\emph on
root
\emph default
 user (as does for example NFS with 
\emph on
root_squash
\emph default
 option).
\newline
If there is a need to run A-REX under the 
\emph on
root
\emph default
 account (to be able to run jobs in LRMS under different users' accounts,
 for example) but there is no way to provide a suitable 
\shape italic
session root directory,
\shape default
 use the 
\emph on
norootpower
\emph default
 command in configuration file.
 In that case A-REX will use the identity of the local user to which a Grid
 identity is mapped to access the 
\shape italic
session root directory
\shape default
.
 Hence those users will need full access there.
\newline
The A-REX creates SDs with
 proper ownership and permissions for the local identity used to run a job.
 Some file systems require users to have 
\emph on
execute
\emph default
 permission on the 
\shape italic
session root directory
\shape default
 in order to access any file or subdirectory there.
\newline
In order for jobs to access
 their input files, session root directories should be shared across cluster
 nodes.
 Otherwise, LRMS-specific methods must be used to transfer files to execution
 nodes.
 For more information see section 
\begin_inset LatexCommand \ref{sub:LRMS}

\end_inset

.
\end_layout

\begin_layout Itemize

\shape italic
control directory
\shape default
 - In this directory A-REX stores an information about accepted jobs.
 It must have full permissions there.
\newline
A subdirectory called 
\shape italic
log
\shape default
 is created there.
 It is used to accumulate information about started and finished jobs.
 This information is periodically sent to the desired 
\emph on
logger service
\emph default
(s).
 For each job start and stop event, and for each logger service where that
 event must be sent, a separate file is written.
 Once an event is sent, the corresponding file is deleted.
\end_layout

\begin_layout Section
Configuration
\end_layout

\begin_layout Subsection
\begin_inset LatexCommand \label{SubSection: ConfigFile}

\end_inset

Configuration of the A-REX
\end_layout

\begin_layout Standard
Due to historical reasons configuration of the A-REX is split into 2 parts.
 The small part is located inside HED configuration (see appendix B) for
 schema and description of supported elements.
 It refers to file containing main part of configuration.
 The default location of main configuration file is 
\shape italic
/etc/arc.conf .
\end_layout

\begin_layout Standard
The configuration file can contain empty lines and comments in lines starting
 from #.
 It is separated into sections.
 Each sections starts from string containing pattern
\end_layout

\begin_layout Itemize

\emph on
[section name/subsection name/subsubsection name]
\emph default
.
 
\end_layout

\begin_layout Standard
Each section continues till next section or end of file.
 One configuration file can have commands for multiple services/modules/programs.
 Each service get it's own section named after it.
 The A-REX uses section 
\emph on
[grid-manager]
\emph default
.
 Some services can make use of multiple subsections to reflect their internal
 modular structure.
 Commands in section 
\emph on
[common]
\emph default
 apply to all services.
 Command lines have format 
\end_layout

\begin_layout Itemize

\emph on
name=
\begin_inset Quotes erd
\end_inset

arguments string
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
Following commands are defined:
\end_layout

\begin_layout Itemize

\series bold
\shape italic
joblog
\series default
=[path]
\shape default
 - specifies where to store log file containing information about started
 and finished jobs.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
jobreport
\series default
=[URL ...
 number]
\shape default
 - specifies that A-REX has to report information about jobs being processed
 (started, finished) to centralized service running at given 
\shape italic
URL
\shape default
.
 Multiple entries and multiple URLs are allowed.
 
\shape italic
number
\shape default
 specifies how long old records have to be kept if failed to be reported.
 That value is specified in days.
 Last specified value becomes effective.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
securetransfer
\series default
=yes|no
\shape default
 - specifies whether to use encryption while transferring data.
 Currently works for GridFTP only.
 Default is 
\emph on
no
\emph default
.
 It is overridden by value specified in URL options.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
localtransfer
\series default
=yes|no
\shape default
 - specifies whether to pass file downloading/uploading task to computing
 node.
 If set to yes the A-REX won't initiate download/upload files.
 Instead it composes script submitted to LRMS in way to make it do that.
 This requires installation of A-REX and all related software to be accessible
 from computing nodes and environment variable ARC_LOCATION to be set accordingl
y.
 Default is 
\emph on
no
\emph default
.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
maxjobs
\series default
=[max_processed_jobs [max_running_jobs]]
\shape default
 - specifies maximum number of jobs being processed by the A-REX at different
 stages:
\newline

\shape italic
max_processed_jobs
\shape default
 - maximal amount of jobs being processed by A-REX.
 This does not limit amount of jobs, which can be submitted to A-REX
\newline

\shape italic
max_running jobs
\shape default
 - maximal amount of jobs passed to Local Resource Management System
\newline
Missing
 value or -1 means no limit.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
maxlod
\series default
=[max_frontend_jobs [emergency_frontend_jobs [max_transferred_files]]]
\shape default
 - specifies maximum load caused by jobs being processed on frontend:
\newline

\shape italic
max_frontend_jobs
\shape default
 - maximal amount of jobs heavily using resources of frontend (applied before
 moving job to PREPARING and FINISHING states)
\shape italic

\newline
emergency_frontend_jobs
\shape default
 - if limit of 
\shape italic
max_frontend_jobs
\shape default
 is used only by PREPARING or by FINISHING jobs aforementioned number of
 jobs can be moved to another state .This is used to avoid case then jobs
 can't finish due to big amount of recently submitted jobs.
\shape italic

\newline
max_transfered_files
\shape default
 - maximal number of files being transferred in parallel by every job.
 Used to decrease load on not so powerful frontends.
\newline
Missing value or -1 means
 no limit.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
wakeupperiod
\series default
=time
\shape default
 - specifies how often the A-REX checks for job state changes (like new
 arrived job, job finished in LRMS, etc.).
 
\shape italic
time
\shape default
 is a minimal time period specified in seconds.
 Default is 
\emph on
3 minutes
\emph default
.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
cacheregistration
\series default
=yes|no
\shape default
 - enables or disables registration of cache data into Indexing Services
 like RC or RLS.
 The default is 
\emph on
no
\emph default
.
 Only files downloaded through 
\emph on
meta-url
\emph default
 are registered.
 Registration is done to same service used for obtaining information about
 file.
 For this operation credentials of the A-REX (host key and certificate)
 are used.
 If required new files storage location is registered at Indexing Service
 with quasi-url 
\emph on
cache://hostname/
\emph default
 and name 
\emph on
hostname:cache
\emph default
 .
\end_layout

\begin_layout Itemize

\series bold
\shape italic
authplugin
\series default
=state options plugin
\shape default
 - specifies 
\emph on
plugin
\emph default
 (external executable) to be run every time job is going to switch to 
\emph on
state
\emph default
.
 Following states are allowed: ACCEPTED, PREPARING, SUBMIT, FINISHING, FINISHED
 and DELETED.
 If exit code is not 0 job is canceled by default.
 
\shape italic
Options
\shape default
 consist of 
\shape italic
name
\shape default
=
\shape italic
value
\shape default
 pairs separated by a comma.
 Following 
\shape italic
name
\shape default
s are supported:
\newline

\shape italic
timeout
\shape default
 - specifies how long in seconds execution of the plugin allowed to last
 (mandatory, 
\begin_inset Quotes eld
\end_inset


\shape italic
timeout=
\shape default

\begin_inset Quotes eld
\end_inset

 can be skipped for backward compatibility).
\newline

\shape italic
onsuccess
\shape default
, 
\shape italic
onfailure
\shape default
 and 
\shape italic
ontimeout
\shape default
 - defines action taken in each case (
\shape italic
onsuccess
\shape default
 happens if exit code is 0).
 Possible actions are:
\newline

\shape italic
pass
\shape default
 - continue execution,
\newline

\shape italic
log
\shape default
 - write information about result into log file and continue execution,
\newline

\shape italic
fail
\shape default
 - write information about result into log file and cancel job.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
localcred
\series default
=timeout plugin
\shape default
 - specifies 
\emph on
plugin
\emph default
 (external executable or function in shared library) to be run every time
 job has to do something on behalf of local user.
 Execution of 
\emph on
plugin
\emph default
 may not last longer than 
\emph on
timeout
\emph default
 seconds.
 If 
\emph on
plugin
\emph default
 looks like 
\emph on
function@path
\emph default
 then function 
\emph on
int function(char*,char*,char*,...)
\emph default
 from shared library 
\emph on
path
\emph default
 is called (
\emph on
timeout
\emph default
 is not functional in that case).
 If exit code is not 0 current operation will fail.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
norootpower
\series default
=yes/no
\shape default
 - if set to 
\emph on
yes
\emph default
 all processes involved in job management will use local identity of a user
 to which Grid identity is mapped in order to access file system at path
 specified in 
\series bold
\shape italic
session
\series default
\shape default
 command (see below).
 Sometimes this may involve running temporary external process.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
speedcontrol
\series default
=min_speed min_time min_average_speed max_inactivity
\shape default
 - specifies how long/slow data transfer is allowed to take place.
 Transfer is canceled if transfer rate (bytes per second) is lower than
 
\emph on
min_speed
\emph default
 for at least 
\emph on
min_time
\emph default
 seconds, or if average rate is lower than 
\emph on
min_average_speed
\emph default
, or no data is received for longer than 
\shape italic
max_inactivity
\shape default
 seconds.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
copyurl
\series default
=template replacement
\shape default
 - specifies that URLs, starting from template should be accessed in a different
 way (most probably Unix open).
 The 
\shape italic
template
\shape default
 part of the URL will be replaced with 
\shape italic
replacement.

\shape default
 
\shape italic
replacement
\shape default
 can be either URL or local path starting from '/'.
 It is advisable to end template with '/'.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
linkurl
\series default
=template replacement [node_path]
\shape default
 - mostly identical to 
\shape italic
copyurl
\shape default
 but file won't be copied.
 Instead soft-link will be created.
 
\shape italic
replacement
\shape default
 specifies the way to access the file from the frontend, and is used to
 check permissions.
 The 
\shape italic
node_path
\shape default
 specifies how the file can be accessed from computing nodes, and will be
 used for soft-link creation.
 If 
\shape italic
node_path
\shape default
 is missing - 
\shape italic
local_path
\shape default
 will be used instead.
 Both 
\shape italic
node_path
\shape default
 and 
\shape italic
replacement
\shape default
 should not be URLs.
\end_layout

\begin_deeper
\begin_layout Standard
NOTE: URLs which fit into 
\shape italic
copyurl
\shape default
 or 
\shape italic
linkurl
\shape default
 are treated as more easily accessible than other URLs.
 That means if A-REX has to choose between few URLs from which should it
 download input file, these will be tried first.
\end_layout

\end_deeper
\begin_layout Standard
\noindent
Per UNIX user commands:
\end_layout

\begin_layout Itemize

\series bold
\shape italic
mail
\series default
=e-mail_address
\shape default
 - specifies an email address 
\series bold
from
\series default
 which the notification mails are sent.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
defaultttl
\series default
=ttl [ttr]
\shape default
 - specifies the time in seconds for the SD to be available after job finished
 (
\emph on
ttl
\emph default
) and after job was deleted (
\emph on
ttr
\emph default
) due to 
\emph on
ttl
\emph default
.
 Defaults are 7days for 
\emph on
ttl
\emph default
 and 30 days for 
\emph on
ttr
\emph default
.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
lrms
\series default
=default_lrms_name default_queue_name
\shape default
 - specifies names for the LRMS and queue.
 Queue name can also be specified in the JD (currently it is not allowed
 to override LRMS by usingon the JD).
\end_layout

\begin_layout Itemize

\series bold
\shape italic
session
\series default
=path
\shape default
 - specifies path to the directory in which the SD is created.
 If the path is * the default one is used - 
\shape italic
$HOME/.jobs
\shape default
 .
 In new configuration file this command is called 
\series bold
\shape italic
sessiondir
\series default
\shape default
.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
cachedir
\series default
=path [link_path]
\shape default
 - specifies the directory to store cached data.
 Empty 
\emph on
path
\emph default
 disables caching.
 Default is not to cache data.
 Optional 
\shape italic
link_path
\shape default
 specifies the path at which cache is accessible at computing nodes.
 If 
\shape italic
link_path
\shape default
 is set to '.' files are not soft-linked, but copied to session directory.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
privatecache
\series default
=path [link_path]
\shape default
 - same as 
\shape italic
cache
\shape default
 command, but cache belongs (owned) to user.
 For shared caches use 'cache'.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
cachedata
\series default
=path
\shape default
 - allows to specify separate place to store cache files containing data
 itself.
 This can be useful in case of big data storage available only on NFS server
 which does not support file locking.
 If command or 
\shape italic
path
\shape default
 is missing - default is to store data at place specified in 
\shape italic
cache
\shape default
 or 
\shape italic
privatecache
\shape default
 command, together with control files.
 
\end_layout

\begin_layout Itemize

\series bold
\shape italic
cachesize
\series default
=high_mark [low_mark]
\shape default
 - specifies high and low water-mark for space used by cache.
 Values are specified in bytes.
 Both 
\shape italic
high_mark
\shape default
 and 
\shape italic
low_mark
\shape default
 can be negative values.
 In that case corresponding positive value means space left on file system.
 If 
\shape italic
low_mark
\shape default
 is omitted it becomes equal to 
\shape italic
high_mark
\shape default
.
 By default this feature is turned off.
 To turn it off explicitly 
\shape italic
cachesize
\shape default
 without parameters should be specified.
 If turned off cache will grow up till it fills whole file system.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
maxrerun
\series default
=number
\shape default
 - specifies maximal number of times job will be allowed to rerun after
 it failed at any stage.
 Default value is 
\emph on
5
\emph default
.
 This only specifies a upper limit.
 Actual number is provided in job description and defaults to 0.
\end_layout

\begin_layout Standard
All per-user commands should be put before 
\shape italic
control
\shape default
 command which initiates serviced user.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
control
\series default
=path username [username [...]]
\shape default
 - This option initiates UNIX user as being serviced by the A-REX.
 
\shape italic
path
\shape default
 refers to the control directory (see section 
\begin_inset LatexCommand \ref{section: internals}

\end_inset

 for the description of control directory).
 If the path is * the default one is used - $HOME/.jobstatus .
 
\shape italic
username
\shape default
 stands for UNIX name of the local user.
 Multiple names can be specified.
 If the name is * it is substituted by all names found in file /etc/grid-securit
y/grid-mapfile (for the format of this file one should study the Globus
 project 
\begin_inset LatexCommand \cite{globus}

\end_inset

).
\newline
Also the special name '.'(dot) can be used.
 Corresponding control directory will be used for 
\series bold
any
\series default
 user.
 This option should be the last one in the configuration file.
 There is also command 
\series bold
\shape italic
controldir
\series default
=path
\shape default
.
 It uses special username '.' and is always executed last independent of
 placement in file.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
helper
\series default
=username command [argument [argument [...]]]
\shape default
 - associates external program with the local UNIX user.
 This program will be kept running under account of the specified user.
 
\shape italic
username
\shape default
 stands for the name of the user.
 Special names can be used: '*' - all names from /etc/grid-security/grid-mapfile
, '.' - root user.
 The user should be already configured with 
\shape italic
control
\shape default
 option (except root, who is always configured).
 
\shape italic
command
\shape default
 is an executable and 
\shape italic
argument
\shape default
s are passed as arguments to it.
\end_layout

\begin_layout Standard
Following are global commands specific to communication with underlying
 LRMS (PBS in this case).
\end_layout

\begin_layout Itemize

\series bold
\shape italic
pbs_bin_path
\series default
=path
\shape default
 - path to directory which contains PBS commands.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
pbs_log_path
\series default
=path
\shape default
 - path to directory with PBS server's log files.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
gnu_time
\series default
=path
\shape default
 - path to 
\emph on
time
\emph default
 utility.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
tmpdir
\series default
=path
\shape default
 - path to directory for temporary files.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
runtimedir
\series default
=path
\shape default
 - path to directory which contains 
\emph on
runtimenvironment
\emph default
 scripts.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
shared_filesystem
\series default
=yes|no
\shape default
 - if computing nodes have an access to session directory through a shared
 file system like NFS.
 Corresponds to an environment variable RUNTIME_NODE_SEES_FRONTEND (see
 section 
\begin_inset LatexCommand \ref{sub:LRMS}

\end_inset

).
\end_layout

\begin_layout Itemize

\series bold
\shape italic
nodename
\series default
=command
\shape default
 - command to obtain hostname of computing node.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
scratchdir
\series default
=path
\shape default
 - path on computing node where to move session directory before execution.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
shared_scratch
\series default
=path
\shape default
 - path on frontend where 
\series bold
\shape italic
scratchdir
\series default
\shape default
 can be found.
\end_layout

\begin_layout Standard
In the command arguments (paths, executables, ...) following substitutions
 can be used:
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
%R - session root - see command 
\emph on
session
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
%C - control dir - see command 
\emph on
control
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
%U - username
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
%u - userid - numerical
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
%g - groupid - numerical
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
%H - home dir - home specified in /etc/passwd
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
%Q - default queue - look command 'defaultlrms'
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
%L - default lrms - look command 'defaultlrms'
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
%W - installation path - ${ARC_LOCATION}
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
%G - globus path - ${GLOBUS_LOCATION}
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
%c - list of all control directories
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
%I - job's ID (for plugins only, substituted in runtime)
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
%S - job's state (for 
\emph on
authplugin
\emph default
 plugins only, substituted in runtime)
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
%O - reason (for 
\emph on
localcred
\emph default
 plugins only, substituted in runtime).
\newline
Possible reasons are:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
new - new job, new credentials
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
renew - old job, new credentials
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
write - write/delete file, create/delete directory
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
read - read file, directory, etc.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
extern - call external program 
\end_layout

\end_deeper
\begin_layout Subsection
Authorization
\begin_inset LatexCommand \label{sub:Authorization}

\end_inset


\end_layout

\begin_layout Standard
Authorization is performed by generic means provided by HED framework.
 Currently A-REX does not implement any internal authorization techniques
 except those imposed by Access Policy assigned to jobs through AccessControl
 element of assigned JSDL.
\end_layout

\begin_layout Subsection
\begin_inset LatexCommand \label{sub:LRMS}

\end_inset

LRMS support
\end_layout

\begin_layout Standard
The A-REX comes with support for several LRMS.
 And this number is slowly growing.
 Features explained below are for 
\series bold
PBS/Torque
\series default
 backend.
 This support is provided through 
\shape italic
submit-pbs-job
\shape default
, 
\shape italic
cancel-pbs-job
\shape default
, 
\shape italic
scan-pbs-job
\shape default
 scripts.
 
\shape italic
submit-pbs-job
\shape default
 creates job's script and submits it to PBS.
 Created job's script is responsible for moving data between frontend machine
 and cluster node (if required) and execution of actual job.
 Alternatively it can download input files and upload output if 
\emph on

\begin_inset Quotes eld
\end_inset

localtransfer=no
\begin_inset Quotes erd
\end_inset


\emph default
 is specified in the configuration file.
\end_layout

\begin_layout Standard
Behavior of submission script is mostly controlled using environment variables.
 Most of them can be specified on frontend in A-REX's environment and overwritte
n on cluster's node through PBS configuration.
 Some of them may be set in configuration file too.
\end_layout

\begin_layout Standard

\series bold
\shape italic
PBS_BIN_PATH
\series default
\shape default
 - path to PBS executables.
 Like 
\emph on
/usr/local/bin
\emph default
 for example.

\emph on
 
\emph default
Corresponds to 
\emph on
pbs_bin_path
\emph default
 configuration command.
\end_layout

\begin_layout Standard

\series bold
\shape italic
PBS_LOG_PATH
\series default
\shape default
 - path to PBS server logs.
 Corresponds to 
\emph on
pbs_log_path
\emph default
 configuration command.
\end_layout

\begin_layout Standard

\series bold
\shape italic
TMP_DIR
\series default
\shape default
 - path to directory to store temporary files.
 Default value is 
\emph on
/tmp
\emph default
.
 Corresponds to 
\emph on
tmpdir
\emph default
 configuration command.
\end_layout

\begin_layout Standard

\series bold
\shape italic
RUNTIME_CONFIG_DIR
\series default
\shape default
 - path where runtime setup scripts can be found.
 Corresponds to 
\emph on
runtimedir
\emph default
 configuration command.
\end_layout

\begin_layout Standard

\series bold
\shape italic
GNU_TIME
\series default
\shape default
 - path to GNU time utility.
 It is important to provide path to utility compatible with GNU time.
 If such utility is not available, modify 
\shape italic
submit-pbs-job
\shape default
 to either reset this variable or change usage of available utility.
 Corresponds to 
\emph on
gnu_time
\emph default
 configuration command.
\end_layout

\begin_layout Standard

\series bold
\shape italic
NODENAME
\series default
\shape default
 - command to obtain name of cluster's node.
 Default is 
\emph on
/bin/hostname -f
\emph default
.
 Corresponds to 
\emph on
nodename
\emph default
 configuration command.
\end_layout

\begin_layout Standard

\series bold
\shape italic
RUNTIME_LOCAL_SCRATCH_DIR
\series default
\shape default
 - if defined should contain path to the directory on computing node, which
 can be used to store job's files during execution.
 
\emph on
scratchdir
\emph default
 configuration command.
\end_layout

\begin_layout Standard

\series bold
\shape italic
RUNTIME_FRONTEND_SEES_NODE
\series default
\shape default
 - if defined should contain path corresponding to 
\shape italic

\newline
RUNTIME_LOCAL_SCRATCH_DIR
\shape default
 as seen on 
\series bold
frontend
\series default
 machine.
 Corresponds to 
\emph on
shared_scratch
\emph default
 configuration command.
\end_layout

\begin_layout Standard

\series bold
\shape italic
RUNTIME_NODE_SEES_FRONTEND
\series default
\shape default
 - if set to 
\begin_inset Quotes eld
\end_inset


\emph on
no
\emph default

\begin_inset Quotes erd
\end_inset

 means computing node does not share file system with frontend.
 In that case content of the SD is moved to computing node by using means
 provided by the LRMS.
 Results are moved back after job's execution in a same way.
 Corresponds to 
\emph on
shared_filesystem
\emph default
 configuration command.
\end_layout

\begin_layout Standard
Figures 
\begin_inset LatexCommand \ref{fig:no node scratch}

\end_inset

,
\begin_inset LatexCommand \ref{fig:node scratch, not vis on front}

\end_inset

,
\begin_inset LatexCommand \ref{fig:node scratch, vis on front}

\end_inset

 present some possible combinations for RUNTIME_LOCAL_SCRATCH_DIR and 
\newline
RUNTIME_FR
ONTEND_SEES_NODE and explain how data movement is performed.
 Pictures a) correspond to the situation right after all input files have
 been gathered in the session directory and show the actions taken right
 after the job's script starts.
 Pictures b) show the situation while the job is running and the actions
 which are taken right after it has finished.
 Pictures c) illustrate the final situation, when the job's output files
 are ready to be uploaded to an external storage element or be downloaded
 by the user.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement tbh
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
includegraphics{pic2}
\end_layout

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:no node scratch}

\end_inset

Both RUNTIME_LOCAL_SCRATCH_DIR and RUNTIME_FRONTEND_SEES_NODE are undefined.
 It is assumed that session directories are visible from computing nodes.
 The job is executed directly in the session directory prepared by the A-REX
 on the frontend.
\end_layout

\end_inset


\begin_inset Float figure
placement htbp
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
includegraphics{pic3}
\end_layout

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:node scratch, not vis on front}

\end_inset

RUNTIME_LOCAL_SCRATCH_DIR is set to the location of the scratch directory
 on the computing node, RUNTIME_FRONTEND_SEES_NODE is undefined.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
a) After the job script starts all input files are moved to 'scratch directory'
 on the computing node.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
b) The job runs in a separate directory in 'scratch directory'.
 Only the files representing the job's 
\shape italic
stdout
\shape default
 and 
\shape italic
stderr
\shape default
 are placed in the original 'session directory' and soft-linked in 'scratch'.
 After execution all files from 'scratch' are moved back to the original
 'session directory'.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
c) All output files are in 'session directory' and are ready to be uploaded/down
loaded.
\end_layout

\end_inset


\begin_inset Float figure
placement htbp
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
includegraphics{pic4}
\end_layout

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:node scratch, vis on front}

\end_inset

Both RUNTIME_LOCAL_SCRATCH_DIR and RUNTIME_FRONTEND_SEES_NODE are set to
 the location of the scratch directory on the computing node and the location
 where this scratch directory is accessible from the frontend, respectively.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
a) After the job script starts all input files are moved to 'scratch directory'
 on the computing node.
 The original 'session directory' is removed and replaced with a soft-link
 to copy of session directory in 'scratch directory' as seen on the frontend.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
b) The job runs in a separate directory in 'scratch directory'.
 All files are also available on frontend through the soft-link.
 After execution the soft-link is replaced with a directory and all files
 from 'scratch' are moved back to the original 'session directory'.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
c) All output files are in 'session directory' and are ready to be uploaded/down
loaded.
 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Runtime environment
\end_layout

\begin_layout Standard
The A-REX can run specially prepared 
\emph on
BASH
\emph default
 scripts prior creation of job's script, before and after executing job's
 main executable.
 Those scripts are requested by user through 
\emph on
runtimeenvironment
\emph default
 attribute in RSL and are run with only argument set equal to '0', '1' or
 '2' during creation of job's script, before execution of main executable
 and after main executable finished accordingly.
 They all are run through BASH's 'source' command, and hence can manipulate
 shell variables.
 With argument '0' scripts are run by the A-REX on frontend.
 Some environment variables are defined in that case and can be changed
 to influence job's execution later:
\end_layout

\begin_layout Itemize
joboption_directory - session directory.
\end_layout

\begin_layout Itemize
joboption_arg_# - command with arguments to be executed as specified in
 the JD (
\series bold
not
\series default
 bash array).
\end_layout

\begin_layout Itemize
joboption_env_# - array of 'NAME=VALUE' environment variables (
\series bold
not
\series default
 bash array).
\end_layout

\begin_layout Itemize
joboption_runtime_# - array of requested 
\emph on
runtimeenvironment
\emph default
 names (
\series bold
not
\series default
 bash array).
\end_layout

\begin_layout Itemize
joboption_num - 
\emph on
runtimeenvironment
\emph default
 currently beeing processed (number starting from 0).
\end_layout

\begin_layout Itemize
joboption_stdin - name of file to be attached to stdin handle.
\end_layout

\begin_layout Itemize
joboption_stdout - same for stdout.
\end_layout

\begin_layout Itemize
joboption_stderr - same for stderr.
\end_layout

\begin_layout Itemize
joboption_maxcputime - amount of CPU time requested (minutes).
\end_layout

\begin_layout Itemize
joboption_maxmemory - amount of memory requested (megabytes).
\end_layout

\begin_layout Itemize
joboption_count - number of processors requested.
\end_layout

\begin_layout Itemize
joboption_lrms - LRMS to be used to run job.
\end_layout

\begin_layout Itemize
joboption_queue - name of a queue of LRMS to put job into.
\end_layout

\begin_layout Itemize
joboption_nodeproperty_# - array of properties of computing nodes (LRMS
 specific, 
\series bold
not
\series default
 bash array).
\end_layout

\begin_layout Itemize
joboption_jobname - name of the job as given by user.
\end_layout

\begin_layout Itemize
joboption_rsl - whole RSL for very clever submission scripts.
\end_layout

\begin_layout Itemize
joboption_rsl_
\emph on
name
\emph default
 - RSL attributes and values (like joboption_rsl_executable=
\begin_inset Quotes erd
\end_inset

/bin/echo
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Standard
For example 
\emph on
joboption_arg_#
\emph default
 could be changed to wrap main executable.
 Or 
\emph on
joboption_runtime
\emph default
 could be expanded if current one depends on others.
\end_layout

\begin_layout Standard
With argument '1' scripts are run just before main executable is run.
 They are executed on computing node.
 Such script can prepare environment for some third-party software package.
 A current directory in that case is one which would be used for execution
 of job.
 Variable HOME also points to that directory.
\end_layout

\begin_layout Standard
With argument '2' scripts are executed after main executable finished.
 Main purpose is to clean possible changes done by scripts run with '1'
 (like removing temporary files).
 Execution of scripts at that stage also happens on computing node and is
 not reliable.
 If the job is killed by LRMS they most probably won't be executed.
\end_layout

\begin_layout Standard
For publicly available runtime environments please see 
\begin_inset LatexCommand \url[RTE]{http://gridrer.csc.fi/}

\end_inset

 .
\end_layout

\begin_layout Section
Installation
\begin_inset LatexCommand \label{sec:installation}

\end_inset


\end_layout

\begin_layout Standard
The A-REX is installed as part of ARC 1 middleware and is available in NorduGrid
 download area at 
\begin_inset LatexCommand \url[ARC1 Download]{http://download.nordugrid.org/software/nordugrid-arc1/}

\end_inset

 .There are packages available for various Linux distributions.
 The A-REX comes in nordugrid-arc1-arex package.
 Source code ready for compilation is available too.
\end_layout

\begin_layout Subsection
Requirements
\end_layout

\begin_layout Standard
If installed from binary packages all dependencies are handled automatically.
 For compilation from source code please read included README file.
\end_layout

\begin_layout Subsection
Setup of the A-REX
\end_layout

\begin_layout Standard
The A-REX service is a pluggable module of the HED.
 So first You need to setup your HED - see HED documentation.
 
\end_layout

\begin_layout Standard
Then You need to add A-REX to the HED configuration.
 Add new <Name> element inside <Plugins> containing string 
\emph on
arex
\emph default
.
 That will make HED load libarex plugin library.
 
\end_layout

\begin_layout Standard
Then add new <Service> element with attribute name=
\begin_inset Quotes erd
\end_inset

a-rex
\begin_inset Quotes erd
\end_inset

.
 That will instantiate A-REX service.
 Now to make service accessible extend <Plexer> element with new <next>
 referring to an id of the service.
 Write <Service> element carefully - here is an example:
\end_layout

\begin_layout LyX-Code
    <!-- A-Rex service -->
\end_layout

\begin_layout LyX-Code
    <Service name="a-rex" id="a-rex">
\end_layout

\begin_layout LyX-Code
      <!-- Optional endpoint element is advised in case of multiple IP adresses
 -->
\end_layout

\begin_layout LyX-Code
      <arex:endpoint>https://localhost:60000/arex</arex:endpoint>
\end_layout

\begin_layout LyX-Code
      <!-- Use information generated by identity.map plugin or default provided
 below -->
\end_layout

\begin_layout LyX-Code
      <arex:usermap><arex:defaultLocalName>nobody</arex:defaultLocalName></arex:
usermap>
\end_layout

\begin_layout LyX-Code
      <!-- grid-manager part of a-rex requires legacy configuration file.
\end_layout

\begin_layout LyX-Code
           Use arc_arex.conf example or write own.
 -->
\end_layout

\begin_layout LyX-Code
      <arex:gmconfig>/etc/arc_arex.conf</arex:gmconfig>
\end_layout

\begin_layout LyX-Code
    </Service>
\end_layout

\begin_layout Standard
For in-depth information about available elements see Appendix B.
 
\end_layout

\begin_layout Standard
Use a template arc_arex.conf or write own A-REX configuration file.
 For information about format and available configuration commands see Section
 
\begin_inset LatexCommand \ref{SubSection: ConfigFile}

\end_inset

.
\end_layout

\begin_layout Subsection
Usage
\end_layout

\begin_layout Standard
Please read 
\emph on
User Manual [??]
\emph default
 for usage instructions.
\end_layout

\begin_layout Subsection
Running as non-root
\end_layout

\begin_layout Standard
The A-REX is primarily designed to be run by the 
\emph on
root
\emph default
 UNIX account and serve multiple global Grid identities mapped to several
 UNIX accounts.
 Nevertheless it is possible to use 
\emph on
non-root
\emph default
 accounts to run that service at the cost of some functionality loss as
 described below.
\end_layout

\begin_layout Standard
There are no drawbacks of running A-REX under a 
\emph on
non-root
\emph default
 account as long as the only UNIX identity used is that of the user who
 runs the services and all served files and directories are owned by the
 server's account.
 Because A-REX has to impersonate a user's local account while communicating
 with the LRMS, it can serve only the account it is run under (unless it
 is run under the 
\emph on
root
\emph default
 account, of course).
\end_layout

\begin_layout Section
\start_of_appendix
Session directory access through HTTP(S) interface
\end_layout

\begin_layout Standard
In addition to the BES interface A-REX provides access to the SD through
 pure HTTP(S) interface.
 This functionality is used for uploading user-stageable files during job
 submission and for staging out result files produced by job.
 It can also be used to monitor job execution by checking content of application
 dependent files in SD.
\end_layout

\begin_layout Standard
The BES defines job identifier as WS Addressing 
\begin_inset LatexCommand \cite{ws-addr-soap}

\end_inset

 Endpoint Reference (EPR) - XML document.
 The EPR is extendable and the A-REX adds it own element JobSessionDir belonging
 to namespace http://www.nordugrid.org/schemas/a-rex as direct child of ReferenceP
arameters element.
 This new element contains the URL of SD.
\end_layout

\begin_layout Standard
Obtained URL should be extended with file names relative to SD and HTTP
 methods PUT and GET may be used to upload/download content of those files.
 For directories - including SD itself - GET method is supported which returns
 HTML encoded non-recursive list of files and directories.
 The files and subdirectories have their URLs inside HTML element <A>.
\end_layout

\begin_layout Section
Configuration schema of A-REX
\end_layout

\begin_layout LyX-Code
<?xml version="1.0" encoding="UTF-8"?>
\end_layout

\begin_layout LyX-Code
<xsd:schema
\end_layout

\begin_layout LyX-Code
xmlns:xsd="http://www.w3.org/2001/XMLSchema"
\end_layout

\begin_layout LyX-Code
xmlns="http://www.nordugrid.org/schemas/ArcConfig/2007/arex"
\end_layout

\begin_layout LyX-Code
xmlns:arc="http://www.nordugrid.org/schemas/ArcConfig/2007/arex"
\end_layout

\begin_layout LyX-Code
targetNamespace="http://www.nordugrid.org/schemas/ArcConfig/2007/arex"
\end_layout

\begin_layout LyX-Code
elementFormDefault="qualified">
\end_layout

\begin_layout LyX-Code
  <xsd:complexType name="endpoint_Type">
\end_layout

\begin_layout LyX-Code
    <!--
\end_layout

\begin_layout LyX-Code
    This element defines URL of A-REX service as seen from outside.
\end_layout

\begin_layout LyX-Code
    -->
\end_layout

\begin_layout LyX-Code
    <xsd:simpleContent>
\end_layout

\begin_layout LyX-Code
      <xsd:extension base="xsd:string"> 
\end_layout

\begin_layout LyX-Code
      </xsd:extension>
\end_layout

\begin_layout LyX-Code
    </xsd:simpleContent>
\end_layout

\begin_layout LyX-Code
  </xsd:complexType>
\end_layout

\begin_layout LyX-Code
  <xsd:element name="endpoint" type="endpoint_Type"/>
\end_layout

\begin_layout LyX-Code
  <xsd:complexType name="gmconfig_Type">
\end_layout

\begin_layout LyX-Code
    <!--
\end_layout

\begin_layout LyX-Code
    This element defines path to arc0 Grid Manager configuartion file.
\end_layout

\begin_layout LyX-Code
    By default it is /etc/arc.conf.
\end_layout

\begin_layout LyX-Code
    -->
\end_layout

\begin_layout LyX-Code
    <xsd:simpleContent>
\end_layout

\begin_layout LyX-Code
      <xsd:extension base="xsd:string">
\end_layout

\begin_layout LyX-Code
      </xsd:extension>
\end_layout

\begin_layout LyX-Code
    </xsd:simpleContent>
\end_layout

\begin_layout LyX-Code
  </xsd:complexType>
\end_layout

\begin_layout LyX-Code
  <xsd:element name="gmconfig" type="gmconfig_Type"/>
\end_layout

\begin_layout LyX-Code
  <xsd:simpleType name="gmrun_Type">
\end_layout

\begin_layout LyX-Code
    <!--
\end_layout

\begin_layout LyX-Code
    This element defines how grid-manager part of A-Rex is run.
\end_layout

\begin_layout LyX-Code
    * internal - as a thread inside service container.
\end_layout

\begin_layout LyX-Code
    * none - no grid-manager is run.
\end_layout

\begin_layout LyX-Code
    * external - as a separate executable (not supported anymore).
\end_layout

\begin_layout LyX-Code
    Default is 'internal'.
\end_layout

\begin_layout LyX-Code
    -->
\end_layout

\begin_layout LyX-Code
    <xsd:restriction base="xsd:string">
\end_layout

\begin_layout LyX-Code
      <xsd:enumeration value="internal"/>
\end_layout

\begin_layout LyX-Code
      <xsd:enumeration value="external"/>
\end_layout

\begin_layout LyX-Code
      <xsd:enumeration value="none"/>
\end_layout

\begin_layout LyX-Code
    </xsd:restriction>
\end_layout

\begin_layout LyX-Code
  </xsd:simpleType>
\end_layout

\begin_layout LyX-Code
  <xsd:element name="gmrun" type="gmrun_Type"/>
\end_layout

\begin_layout LyX-Code
  <xsd:complexType name="usermap_Type">
\end_layout

\begin_layout LyX-Code
    <xsd:sequence>
\end_layout

\begin_layout LyX-Code
      <xsd:element name="defaultLocalName" type="xsd:string" minOccurs="0"/>
\end_layout

\begin_layout LyX-Code
    </xsd:sequence>
\end_layout

\begin_layout LyX-Code
  </xsd:complexType>
\end_layout

\begin_layout LyX-Code
  <xsd:element name="usermap" type="usermap_Type"/>
\end_layout

\begin_layout LyX-Code
  <!-- CommonName attribute of bes-factory.
 -->
\end_layout

\begin_layout LyX-Code
  <xsd:element name="commonName" type="xsd:string"/>
\end_layout

\begin_layout LyX-Code
  <!-- LongDescription attribute of bes-factory.
 -->
\end_layout

\begin_layout LyX-Code
  <xsd:element name="longDescription" type="xsd:string"/>
\end_layout

\begin_layout LyX-Code
  <!-- Name of Local Resource Management System.
 -->
\end_layout

\begin_layout LyX-Code
  <xsd:element name="LRMSName" type="xsd:string"/>
\end_layout

\begin_layout LyX-Code
  <!--
\end_layout

\begin_layout LyX-Code
  Name of Operating System.
\end_layout

\begin_layout LyX-Code
  The values are based on the OSType field of the CIM_OperatingSystem model:
\end_layout

\begin_layout LyX-Code
  http://www.dmtf.org/standards/cim/cim_schema_v29
\end_layout

\begin_layout LyX-Code
  -->
\end_layout

\begin_layout LyX-Code
  <xsd:element name="OperatingSystem" type="xsd:string"/>
\end_layout

\begin_layout LyX-Code
</xsd:schema>
\end_layout

\begin_layout Section
A-REX WSDL
\end_layout

\begin_layout LyX-Code
<?xml version="1.0" encoding="UTF-8"?>
\end_layout

\begin_layout LyX-Code
<wsdl:definitions targetNamespace="http://www.nordugrid.org/schemas/a-rex"
\end_layout

\begin_layout LyX-Code
 xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"
\end_layout

\begin_layout LyX-Code
 xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/"
\end_layout

\begin_layout LyX-Code
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
\end_layout

\begin_layout LyX-Code
 xmlns:xsd="http://www.w3.org/2001/XMLSchema"
\end_layout

\begin_layout LyX-Code
 xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
\end_layout

\begin_layout LyX-Code
 xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
\end_layout

\begin_layout LyX-Code
 xmlns:wsa="http://www.w3.org/2005/08/addressing"
\end_layout

\begin_layout LyX-Code
 xmlns:bes-factory="http://schemas.ggf.org/bes/2006/08/bes-factory"
\end_layout

\begin_layout LyX-Code
 xmlns:bes-mgmt="http://schemas.ggf.org/bes/2006/08/bes-management"
\end_layout

\begin_layout LyX-Code
 xmlns:deleg="http://www.nordugrid.org/schemas/delegation"
\end_layout

\begin_layout LyX-Code
 xmlns:wsrf-rpw="http://docs.oasis-open.org/wsrf/rpw-2"
\end_layout

\begin_layout LyX-Code
 xmlns:a-rex="http://www.nordugrid.org/schemas/a-rex">
\end_layout

\begin_layout LyX-Code
  <wsdl:import namespase="http://schemas.ggf.org/bes/2006/08/bes-factory"
 location="./bes-factory.wsdl"/>
\end_layout

\begin_layout LyX-Code
  <wsdl:import namespase="http://schemas.ggf.org/bes/2006/08/bes-management"
 location="./bes-management.wsdl"/>
\end_layout

\begin_layout LyX-Code
  <wsdl:import namespase="http://www.nordugrid.org/schemas/delegation" location="../
schemas/delegation.wsdl"/>
\end_layout

\begin_layout LyX-Code
  <wsdl:import namespase="http://docs.oasis-open.org/wsrf/rpw-2" location="http://
docs.oasis-open.org/wsrf/rpw-2.wsdl"/>
\end_layout

\begin_layout LyX-Code
  <wsdl:types>
\end_layout

\begin_layout LyX-Code
    <xsd:schema targetNamespace="http://www.nordugrid.org/schemas/a-rex">
\end_layout

\begin_layout LyX-Code
      <xsd:import namespace="http://www.w3.org/2005/08/addressing" schemaLocation=
"./ws-addr.xsd"/>
\end_layout

\begin_layout LyX-Code
      <xsd:simpleType name="ActivitySubStateType">
\end_layout

\begin_layout LyX-Code
        <xsd:restriction base="xsd:string">
\end_layout

\begin_layout LyX-Code
          <xsd:enumeration value="Accepting"/>
\end_layout

\begin_layout LyX-Code
          <xsd:enumeration value="Accepted"/>
\end_layout

\begin_layout LyX-Code
          <xsd:enumeration value="Preparing"/>
\end_layout

\begin_layout LyX-Code
          <xsd:enumeration value="Prepared"/>
\end_layout

\begin_layout LyX-Code
          <xsd:enumeration value="Submiting"/>
\end_layout

\begin_layout LyX-Code
          <xsd:enumeration value="Executing"/>
\end_layout

\begin_layout LyX-Code
          <xsd:enumeration value="Killing"/>
\end_layout

\begin_layout LyX-Code
          <xsd:enumeration value="Executed"/>
\end_layout

\begin_layout LyX-Code
          <xsd:enumeration value="Finishing"/>
\end_layout

\begin_layout LyX-Code
          <xsd:enumeration value="Finished"/>
\end_layout

\begin_layout LyX-Code
          <xsd:enumeration value="Failed"/>
\end_layout

\begin_layout LyX-Code
          <xsd:enumeration value="Deleted"/>
\end_layout

\begin_layout LyX-Code
          <xsd:enumeration value="Pending"/>
\end_layout

\begin_layout LyX-Code
          <xsd:enumeration value="Held"/>
\end_layout

\begin_layout LyX-Code
        </xsd:restriction>
\end_layout

\begin_layout LyX-Code
      </xsd:simpleType>
\end_layout

\begin_layout LyX-Code
      <xsd:element name="State" type="a-rex:ActivitySubStateType"/>
\end_layout

\begin_layout LyX-Code
      <xsd:complexType name="ResourceInformationDocumentType">
\end_layout

\begin_layout LyX-Code
        <xsd:sequence>
\end_layout

\begin_layout LyX-Code
           <xsd:element name="BESFactory" type="bes-factory:FactoryResourceAttri
butesDocumentType"/>
\end_layout

\begin_layout LyX-Code
          <xsd:complexType name="Glue2Resource" minOccurs='0'>
\end_layout

\begin_layout LyX-Code
            <xsd:sequence>
\end_layout

\begin_layout LyX-Code
              <xsd:any namespace="##other" processContents="lax" minOccurs="0"
 maxOccurs="unbounded"/>
\end_layout

\begin_layout LyX-Code
            </xsd:sequence>
\end_layout

\begin_layout LyX-Code
          </xsd:complexType>
\end_layout

\begin_layout LyX-Code
          <xsd:complexType name="Activities" minOccurs='0'>
\end_layout

\begin_layout LyX-Code
            <xsd:sequence>
\end_layout

\begin_layout LyX-Code
              <xsd:complexType name="Activity" minOccurs='0' maxOccurs='unbounde
d'>
\end_layout

\begin_layout LyX-Code
                <xsd:sequence>
\end_layout

\begin_layout LyX-Code
                  <xsd:element name="ActivityIdentifier" type="wsa:EndpointRefer
enceType"/>
\end_layout

\begin_layout LyX-Code
                  <xsd:element ref="bes-factory:ActivityDocument" minOccurs='0'/
>
\end_layout

\begin_layout LyX-Code
                  <xsd:complexType name="Glue2Job" minOccurs='0'>
\end_layout

\begin_layout LyX-Code
                    <xsd:sequence>
\end_layout

\begin_layout LyX-Code
                      <xsd:any namespace="##other" processContents="lax"
 minOccurs="0" maxOccurs="unbounded"/>
\end_layout

\begin_layout LyX-Code
                    </xsd:sequence>
\end_layout

\begin_layout LyX-Code
                  </xsd:complexType>
\end_layout

\begin_layout LyX-Code
                </xsd:sequence>
\end_layout

\begin_layout LyX-Code
              </xsd:complexType>
\end_layout

\begin_layout LyX-Code
            </xsd:sequence>
\end_layout

\begin_layout LyX-Code
          </xsd:complexType>
\end_layout

\begin_layout LyX-Code
        </xsd:sequence>
\end_layout

\begin_layout LyX-Code
      </xsd:complexType>
\end_layout

\begin_layout LyX-Code
      <xsd:complexType name="ChangeActivityStatusRequestType">
\end_layout

\begin_layout LyX-Code
        <xsd:sequence>
\end_layout

\begin_layout LyX-Code
          <xsd:element name="ActivityIdentifier" type="wsa:EndpointReferenceType
"/>
\end_layout

\begin_layout LyX-Code
          <xsd:element name="OldStatus" type="bes-factory:ActivityStatusType"
 minOccurs="0"/>
\end_layout

\begin_layout LyX-Code
          <xsd:element name="NewStatus" type="bes-factory:ActivityStatusType"/>
\end_layout

\begin_layout LyX-Code
        </xsd:sequence>
\end_layout

\begin_layout LyX-Code
      </xsd:complexType>
\end_layout

\begin_layout LyX-Code
      <xsd:element name="ChangeActivityStatus" type="a-rex:ChangeActivityStatusR
equestType"/>
\end_layout

\begin_layout LyX-Code
      <xsd:complexType name="ChangeActivityStatusResponseType">
\end_layout

\begin_layout LyX-Code
        <xsd:sequence>
\end_layout

\begin_layout LyX-Code
          <xsd:element name="NewStatus" type="bes-factory:ActivityStatusType"/>
\end_layout

\begin_layout LyX-Code
        </xsd:sequence>
\end_layout

\begin_layout LyX-Code
      </xsd:complexType>
\end_layout

\begin_layout LyX-Code
      <xsd:element name="ChangeActivityStatusResponse" type="a-rex:ChangeActivit
yStatusResponseType"/>
\end_layout

\begin_layout LyX-Code
    </xsd:schema>
\end_layout

\begin_layout LyX-Code
  </wsdl:types>
\end_layout

\begin_layout LyX-Code
  <wsdl:message name="ChangeActivityStatusRequest">
\end_layout

\begin_layout LyX-Code
    <wsdl:part name="ChangeActivityStatusRequest" element="a-rex:ChangeActivityS
tatus"/>
\end_layout

\begin_layout LyX-Code
  </wsdl:message>
\end_layout

\begin_layout LyX-Code
  <wsdl:message name="ChangeActivityStatusResponse">
\end_layout

\begin_layout LyX-Code
    <wsdl:part name="ChangeActivityStatusResponse" element="a-rex:ChangeActivity
StatusResponse"/>
\end_layout

\begin_layout LyX-Code
  </wsdl:message>
\end_layout

\begin_layout LyX-Code
  <wsdl:portType name="a-rex">
\end_layout

\begin_layout LyX-Code
    <wsdl:operation name="ChangeActivityStatus">
\end_layout

\begin_layout LyX-Code
      <wsdl:documentation>
\end_layout

\begin_layout LyX-Code
        This operation allows any simple status change request
\end_layout

\begin_layout LyX-Code
        which involves no additional parameters.
 It should be
\end_layout

\begin_layout LyX-Code
        used to modify job/activity execution flow:
\end_layout

\begin_layout LyX-Code
          - To put job on hold
\end_layout

\begin_layout LyX-Code
          - To rerun job in case of failure
\end_layout

\begin_layout LyX-Code
          - To cancel job (same as TerminateActivity of BESFActory)
\end_layout

\begin_layout LyX-Code
          - To remove/release job - as long as non-existence is a state
\end_layout

\begin_layout LyX-Code
          - Any other status change no supported by BES
\end_layout

\begin_layout LyX-Code
      </wsdl:documentation>
\end_layout

\begin_layout LyX-Code
      <wsdl:input name="ChangeActivityStatusRequest"
\end_layout

\begin_layout LyX-Code
        message="a-rex:ChangeActivityStatusRequest"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:output name="ChangeActivityStatusResponse"
\end_layout

\begin_layout LyX-Code
        message="a-rex:ChangeActivityStatusResponse"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="NotAuthorizedFault"
\end_layout

\begin_layout LyX-Code
        message="bes-factory:NotAuthorizedFault"
\end_layout

\begin_layout LyX-Code
        wsa:Action="http://schemas.ggf.org/bes/2006/08/bes-factory/BESFactoryPortT
ype/Fault"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="InvalidActivityIdentifierFault"
\end_layout

\begin_layout LyX-Code
        message="bes-factory:InvalidActivityIdentifierFault"
\end_layout

\begin_layout LyX-Code
        wsa:Action="http://schemas.ggf.org/bes/2006/08/bes-factory/BESFactoryPortT
ype/Fault"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="CantApplyOperationToCurrentStateFault"
\end_layout

\begin_layout LyX-Code
         message="bes-factory:CantApplyOperationToCurrentStateFault"
\end_layout

\begin_layout LyX-Code
         wsa:Action="http://schemas.ggf.org/bes/2006/08/bes-factory/BESFactoryPort
Type/Fault"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="OperationWillBeAppliedEventuallyFault"
\end_layout

\begin_layout LyX-Code
         message="bes-factory:OperationWillBeAppliedEventuallyFault"
\end_layout

\begin_layout LyX-Code
         wsa:Action="http://schemas.ggf.org/bes/2006/08/bes-factory/BESFactoryPort
Type/Fault"/>
\end_layout

\begin_layout LyX-Code
    </wsdl:operation>
\end_layout

\begin_layout LyX-Code
  </wsdl:portType>
\end_layout

\begin_layout LyX-Code
  <wsdl:binding name="a-rex" type="a-rex:a-rex">
\end_layout

\begin_layout LyX-Code
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http
"/>
\end_layout

\begin_layout LyX-Code
    <wsdl:operation name="ChangeActivityStatus">
\end_layout

\begin_layout LyX-Code
      <soap:operation soapAction="ChangeActivityStatus"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:input name="ChangeActivityStatusRequest">
\end_layout

\begin_layout LyX-Code
         <soap:body use="literal"/>
\end_layout

\begin_layout LyX-Code
      </wsdl:input>
\end_layout

\begin_layout LyX-Code
      <wsdl:output name="ChangeActivityStatusResponse">
\end_layout

\begin_layout LyX-Code
         <soap:body use="literal"/>
\end_layout

\begin_layout LyX-Code
      </wsdl:output>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="NotAuthorizedFault">
\end_layout

\begin_layout LyX-Code
        <soap:fault name="NotAuthorizedFault" use="literal" />
\end_layout

\begin_layout LyX-Code
      </wsdl:fault>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="InvalidActivityIdentifierFault">
\end_layout

\begin_layout LyX-Code
        <soap:fault name="InvalidActivityIdentifierFault" use="literal"
 />
\end_layout

\begin_layout LyX-Code
      </wsdl:fault>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="CantApplyOperationToCurrentStateFault">
\end_layout

\begin_layout LyX-Code
        <soap:fault name="CantApplyOperationToCurrentStateFault" use="literal"
 />
\end_layout

\begin_layout LyX-Code
      </wsdl:fault>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="OperationWillBeAppliedEventuallyFault">
\end_layout

\begin_layout LyX-Code
        <soap:fault name="OperationWillBeAppliedEventuallyFault" use="literal"
 />
\end_layout

\begin_layout LyX-Code
      </wsdl:fault>
\end_layout

\begin_layout LyX-Code
    </wsdl:operation>
\end_layout

\begin_layout LyX-Code
  </wsdl:binding>
\end_layout

\begin_layout LyX-Code
  <wsdl:binding name="GetResourcePropertyDocument" type="wsrf-rpw:GetResourcePro
pertyDocument">
\end_layout

\begin_layout LyX-Code
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http
"/>
\end_layout

\begin_layout LyX-Code
    <wsdl:operation name="GetResourcePropertyDocument">
\end_layout

\begin_layout LyX-Code
      <soap:operation soapAction="GetResourcePropertyDocument"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:input name="wsrf-rpw:GetResourcePropertyDocumentRequest">
\end_layout

\begin_layout LyX-Code
        <soap:body use="literal"/>
\end_layout

\begin_layout LyX-Code
      </wsdl:input>
\end_layout

\begin_layout LyX-Code
      <wsdl:output name="wsrf-rpw:GetResourcePropertyDocumentResponse">
\end_layout

\begin_layout LyX-Code
        <soap:body use="literal"/>
\end_layout

\begin_layout LyX-Code
      </wsdl:output>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="ResourceUnknownFault">
\end_layout

\begin_layout LyX-Code
        <soap:fault name="ResourceUnknownFault" use="literal" />
\end_layout

\begin_layout LyX-Code
      </wsdl:fault>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="ResourceUnavailableFault">
\end_layout

\begin_layout LyX-Code
        <soap:fault name="ResourceUnavailabbleFault" use="literal" />
\end_layout

\begin_layout LyX-Code
      </wsdl:fault>
\end_layout

\begin_layout LyX-Code
    </wsdl:operation>
\end_layout

\begin_layout LyX-Code
  </wsdl:binding>
\end_layout

\begin_layout LyX-Code
  <wsdl:binding name="GetResourceProperty" type="wsrf-rpw:GetResourceProperty">
\end_layout

\begin_layout LyX-Code
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http
"/>
\end_layout

\begin_layout LyX-Code
    <wsdl:operation name="GetResourceProperty">
\end_layout

\begin_layout LyX-Code
      <soap:operation soapAction="GetResourceProperty"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:input name="wsrf-rpw:GetResourcePropertyRequest">
\end_layout

\begin_layout LyX-Code
        <soap:body use="literal"/>
\end_layout

\begin_layout LyX-Code
      </wsdl:input>
\end_layout

\begin_layout LyX-Code
      <wsdl:output name="wsrf-rpw:GetResourcePropertyResponse">
\end_layout

\begin_layout LyX-Code
        <soap:body use="literal"/>
\end_layout

\begin_layout LyX-Code
      </wsdl:output>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="ResourceUnknownFault">
\end_layout

\begin_layout LyX-Code
        <soap:fault name="ResourceUnknownFault" use="literal" />
\end_layout

\begin_layout LyX-Code
      </wsdl:fault>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="ResourceUnavailableFault">
\end_layout

\begin_layout LyX-Code
        <soap:fault name="ResourceUnavailabbleFault" use="literal" />
\end_layout

\begin_layout LyX-Code
      </wsdl:fault>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="InvalidResourcePropertyQNameFault">
\end_layout

\begin_layout LyX-Code
        <soap:fault name="InvalidResourcePropertyQNameFault" use="literal"
 />
\end_layout

\begin_layout LyX-Code
      </wsdl:fault>
\end_layout

\begin_layout LyX-Code
    </wsdl:operation>
\end_layout

\begin_layout LyX-Code
  </wsdl:binding>
\end_layout

\begin_layout LyX-Code
  <wsdl:binding name="QueryResourceProperties" type="wsrf:QueryResourcePropertie
s">
\end_layout

\begin_layout LyX-Code
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http
"/>
\end_layout

\begin_layout LyX-Code
    <wsdl:operation name="QueryResourceProperties">
\end_layout

\begin_layout LyX-Code
      <soap:operation soapAction="QueryResourceProperties"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:input name="wsrf-rpw:QueryResourcePropertiesRequest">
\end_layout

\begin_layout LyX-Code
        <soap:body use="literal"/>
\end_layout

\begin_layout LyX-Code
      </wsdl:input>
\end_layout

\begin_layout LyX-Code
      <wsdl:output name="wsrf-rpw:QueryResourcePropertiesResponse">
\end_layout

\begin_layout LyX-Code
        <soap:body use="literal"/>
\end_layout

\begin_layout LyX-Code
      </wsdl:output>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="ResourceUnknownFault">
\end_layout

\begin_layout LyX-Code
        <soap:fault name="ResourceUnknownFault" use="literal" />
\end_layout

\begin_layout LyX-Code
      </wsdl:fault>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="ResourceUnavailableFault">
\end_layout

\begin_layout LyX-Code
        <soap:fault name="ResourceUnavailabbleFault" use="literal" />
\end_layout

\begin_layout LyX-Code
      </wsdl:fault>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="InvalidResourcePropertyQNameFault">
\end_layout

\begin_layout LyX-Code
        <soap:fault name="InvalidResourcePropertyQNameFault" use="literal"
 />
\end_layout

\begin_layout LyX-Code
      </wsdl:fault>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="UnknownQueryExpressionDialectFault">
\end_layout

\begin_layout LyX-Code
        <soap:fault name="UnknownQueryExpressionDialectFault" use="literal"
 />
\end_layout

\begin_layout LyX-Code
      </wsdl:fault>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="InvalidQueryExpressionFault">
\end_layout

\begin_layout LyX-Code
        <soap:fault name="InvalidQueryExpressionFault" use="literal" />
\end_layout

\begin_layout LyX-Code
      </wsdl:fault>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="QueryEvaluationErrorFault">
\end_layout

\begin_layout LyX-Code
        <soap:fault name="QueryEvaluationErrorFault" use="literal" />
\end_layout

\begin_layout LyX-Code
      </wsdl:fault>
\end_layout

\begin_layout LyX-Code
    </wsdl:operation>
\end_layout

\begin_layout LyX-Code
  </wsdl:binding>
\end_layout

\begin_layout LyX-Code
  <wsdl:service name="a-rex">
\end_layout

\begin_layout LyX-Code
    <wsdl:port name="delegation" binding="deleg:DelegationBinding">
\end_layout

\begin_layout LyX-Code
    </wsdl:port>
\end_layout

\begin_layout LyX-Code
    <wsdl:port name="bes-factory" binding="bes-factory:BESFactoryBinding">
\end_layout

\begin_layout LyX-Code
    </wsdl:port>
\end_layout

\begin_layout LyX-Code
    <wsdl:port name="bes-mgmt" binding="bes-mgmt:BESManagementBinding">
\end_layout

\begin_layout LyX-Code
    </wsdl:port>
\end_layout

\begin_layout LyX-Code
    <wsdl:port name="GetResourcePropertyDocument" binding="a-rex:GetResourceProp
ertyDocument">
\end_layout

\begin_layout LyX-Code
    </wsdl:port>
\end_layout

\begin_layout LyX-Code
    <wsdl:port name="GetResourceProperty" binding="a-rex:GetResourceProperty">
\end_layout

\begin_layout LyX-Code
    </wsdl:port>
\end_layout

\begin_layout LyX-Code
    <wsdl:port name="QueryResourceProperties" binding="a-rex:QueryResourceProper
ties">
\end_layout

\begin_layout LyX-Code
    </wsdl:port>
\end_layout

\begin_layout LyX-Code
    <wsdl:port name="a-rex" binding="a-rex:a-rex">
\end_layout

\begin_layout LyX-Code
    </wsdl:port>
\end_layout

\begin_layout LyX-Code
  </wsdl:service>
\end_layout

\begin_layout LyX-Code
</wsdl:definitions>
\end_layout

\begin_layout Section
Delegation WSDL
\end_layout

\begin_layout LyX-Code
<?xml version="1.0" encoding="UTF-8"?>
\end_layout

\begin_layout LyX-Code
<wsdl:definitions targetNamespace="http://www.nordugrid.org/schemas/delegation"
\end_layout

\begin_layout LyX-Code
 xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"
\end_layout

\begin_layout LyX-Code
 xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/"
\end_layout

\begin_layout LyX-Code
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
\end_layout

\begin_layout LyX-Code
 xmlns:xsd="http://www.w3.org/2001/XMLSchema"
\end_layout

\begin_layout LyX-Code
 xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
\end_layout

\begin_layout LyX-Code
 xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
\end_layout

\begin_layout LyX-Code
 xmlns:wsa="http://www.w3.org/2005/08/addressing"
\end_layout

\begin_layout LyX-Code
 xmlns:deleg="http://www.nordugrid.org/schemas/delegation">
\end_layout

\begin_layout LyX-Code
  <wsdl:types>
\end_layout

\begin_layout LyX-Code
    <xsd:schema targetNamespace="http://www.nordugrid.org/schemas/delegation">
\end_layout

\begin_layout LyX-Code
      <!-- Common types -->
\end_layout

\begin_layout LyX-Code
      <xsd:simpleType name="TokenFormatType">
\end_layout

\begin_layout LyX-Code
        <xsd:restriction base="xsd:string">
\end_layout

\begin_layout LyX-Code
          <xsd:enumeration value="x509"/>
\end_layout

\begin_layout LyX-Code
        </xsd:restriction>
\end_layout

\begin_layout LyX-Code
      </xsd:simpleType>
\end_layout

\begin_layout LyX-Code
      <xsd:complexType name="ReferenceType">
\end_layout

\begin_layout LyX-Code
        <xsd:sequence>
\end_layout

\begin_layout LyX-Code
          <xsd:any namespace="##other" processContents="lax" minOccurs="0"
 maxOccurs="unbounded"/>
\end_layout

\begin_layout LyX-Code
        </xsd:sequence>
\end_layout

\begin_layout LyX-Code
      </xsd:complexType>
\end_layout

\begin_layout LyX-Code
      <xsd:complexType name="DelegatedTokenType">
\end_layout

\begin_layout LyX-Code
        <xsd:sequence>
\end_layout

\begin_layout LyX-Code
          <xsd:element name="Id" type="xsd:string"/>
\end_layout

\begin_layout LyX-Code
          <xsd:element name="Value" type="xsd:string"/>
\end_layout

\begin_layout LyX-Code
          <xsd:element name="Reference" type="deleg:ReferenceType" minOccurs="0"
 maxOccurs="unbounded"/>
\end_layout

\begin_layout LyX-Code
        </xsd:sequence>
\end_layout

\begin_layout LyX-Code
        <xsd:attribute name="Format" type="deleg:TokenFormatType" use="required"
/>
\end_layout

\begin_layout LyX-Code
      </xsd:complexType>
\end_layout

\begin_layout LyX-Code
      <xsd:element name="DelegatedToken" type="deleg:DelegatedTokenType"/>
\end_layout

\begin_layout LyX-Code
      <xsd:complexType name="TokenRequestType">
\end_layout

\begin_layout LyX-Code
        <xsd:sequence>
\end_layout

\begin_layout LyX-Code
          <xsd:element name="Id" type="xsd:string"/>
\end_layout

\begin_layout LyX-Code
          <xsd:element name="Value" type="xsd:string"/>
\end_layout

\begin_layout LyX-Code
        </xsd:sequence>
\end_layout

\begin_layout LyX-Code
        <xsd:attribute name="Format" type="deleg:TokenFormatType" use="required"
/>
\end_layout

\begin_layout LyX-Code
      </xsd:complexType>
\end_layout

\begin_layout LyX-Code
      <xsd:element name="TokenRequest" type="deleg:TokenRequestType"/>
\end_layout

\begin_layout LyX-Code
      <!-- Types for messages -->
\end_layout

\begin_layout LyX-Code
      <xsd:complexType name="DelegateCredentialsInitRequestType">
\end_layout

\begin_layout LyX-Code
        <xsd:sequence>
\end_layout

\begin_layout LyX-Code
        </xsd:sequence>
\end_layout

\begin_layout LyX-Code
      </xsd:complexType>
\end_layout

\begin_layout LyX-Code
      <xsd:element name="DelegateCredentialsInit" type="deleg:DelegateCredential
sInitRequestType"/>
\end_layout

\begin_layout LyX-Code
      <xsd:complexType name="DelegateCredentialsInitResponseType">
\end_layout

\begin_layout LyX-Code
        <xsd:sequence>
\end_layout

\begin_layout LyX-Code
          <xsd:element name="TokenRequest" type="deleg:TokenRequestType"/>
\end_layout

\begin_layout LyX-Code
        </xsd:sequence>
\end_layout

\begin_layout LyX-Code
      </xsd:complexType>
\end_layout

\begin_layout LyX-Code
      <xsd:element name="DelegateCredentialsInitResponse" type="deleg:DelegateCr
edentialsInitResponseType"/>
\end_layout

\begin_layout LyX-Code
      <xsd:complexType name="UpdateCredentialsRequestType">
\end_layout

\begin_layout LyX-Code
        <xsd:sequence>
\end_layout

\begin_layout LyX-Code
          <xsd:element name="DelegatedToken" type="deleg:DelegatedTokenType"/>
\end_layout

\begin_layout LyX-Code
        </xsd:sequence>
\end_layout

\begin_layout LyX-Code
      </xsd:complexType>
\end_layout

\begin_layout LyX-Code
      <xsd:element name="UpdateCredentials" type="deleg:UpdateCredentialsRequest
Type"/>
\end_layout

\begin_layout LyX-Code
      <xsd:complexType name="UpdateCredentialsResponseType">
\end_layout

\begin_layout LyX-Code
        <xsd:sequence>
\end_layout

\begin_layout LyX-Code
        </xsd:sequence>
\end_layout

\begin_layout LyX-Code
      </xsd:complexType>
\end_layout

\begin_layout LyX-Code
      <xsd:element name="UpdateCredentialsResponse" type="deleg:UpdateCredential
sResponseType"/>
\end_layout

\begin_layout LyX-Code
      <!-- Faults -->
\end_layout

\begin_layout LyX-Code
      <xsd:complexType name="UnsupportedFaultType">
\end_layout

\begin_layout LyX-Code
        <xsd:sequence>
\end_layout

\begin_layout LyX-Code
          <xsd:element name="Description" type="xsd:string" minOccurs="0"/>
\end_layout

\begin_layout LyX-Code
        </xsd:sequence>
\end_layout

\begin_layout LyX-Code
      </xsd:complexType>
\end_layout

\begin_layout LyX-Code
      <xsd:element name="UnsupportedFault" type="deleg:UnsupportedFaultType"/>
\end_layout

\begin_layout LyX-Code
      <xsd:complexType name="ProcessingFaultType">
\end_layout

\begin_layout LyX-Code
        <xsd:sequence>
\end_layout

\begin_layout LyX-Code
          <xsd:element name="Description" type="xsd:string" minOccurs="0"/>
\end_layout

\begin_layout LyX-Code
        </xsd:sequence>
\end_layout

\begin_layout LyX-Code
      </xsd:complexType>
\end_layout

\begin_layout LyX-Code
      <xsd:element name="ProcessingFault" type="deleg:ProcessingFaultType"/>
\end_layout

\begin_layout LyX-Code
      <xsd:complexType name="WrongReferenceFaultType">
\end_layout

\begin_layout LyX-Code
        <xsd:sequence>
\end_layout

\begin_layout LyX-Code
          <xsd:element name="Description" type="xsd:string" minOccurs="0"/>
\end_layout

\begin_layout LyX-Code
        </xsd:sequence>
\end_layout

\begin_layout LyX-Code
      </xsd:complexType>
\end_layout

\begin_layout LyX-Code
      <xsd:element name="WrongReferenceFault" type="deleg:WrongReferenceFaultTyp
e"/>
\end_layout

\begin_layout LyX-Code
    </xsd:schema>
\end_layout

\begin_layout LyX-Code
  </wsdl:types>
\end_layout

\begin_layout LyX-Code
  <wsdl:message name="DelegateCredentialsInitRequest">
\end_layout

\begin_layout LyX-Code
    <wsdl:part name="DelegateCredentialsInitRequest" element="deleg:DelegateCred
entialsInit"/>
\end_layout

\begin_layout LyX-Code
  </wsdl:message>
\end_layout

\begin_layout LyX-Code
  <wsdl:message name="DelegateCredentialsInitResponse">
\end_layout

\begin_layout LyX-Code
    <wsdl:part name="DelegateCredentialsInitResponse" element="deleg:DelegateCre
dentialsInitResponse"/>
\end_layout

\begin_layout LyX-Code
  </wsdl:message>
\end_layout

\begin_layout LyX-Code
  <wsdl:message name="UpdateCredentialsRequest">
\end_layout

\begin_layout LyX-Code
    <wsdl:part name="UpdateCredentialsRequest" element="deleg:UpdateCredentials"
/>
\end_layout

\begin_layout LyX-Code
  </wsdl:message>
\end_layout

\begin_layout LyX-Code
  <wsdl:message name="UpdateCredentialsResponse">
\end_layout

\begin_layout LyX-Code
    <wsdl:part name="UpdateCredentialsResponse" element="deleg:UpdateCredentials
Response"/>
\end_layout

\begin_layout LyX-Code
  </wsdl:message>
\end_layout

\begin_layout LyX-Code
  <wsdl:message name="UnsupportedFault">
\end_layout

\begin_layout LyX-Code
    <wsdl:part name="Detail" element="deleg:UnsupportedFault"/>
\end_layout

\begin_layout LyX-Code
  </wsdl:message>
\end_layout

\begin_layout LyX-Code
  <wsdl:message name="ProcessingFault">
\end_layout

\begin_layout LyX-Code
    <wsdl:part name="Detail" element="deleg:ProcessingFault"/>
\end_layout

\begin_layout LyX-Code
  </wsdl:message>
\end_layout

\begin_layout LyX-Code
  <wsdl:message name="WrongReferenceFault">
\end_layout

\begin_layout LyX-Code
    <wsdl:part name="Detail" element="deleg:WrongReferenceFault"/>
\end_layout

\begin_layout LyX-Code
  </wsdl:message>
\end_layout

\begin_layout LyX-Code
  <wsdl:portType name="DelegationPortType">
\end_layout

\begin_layout LyX-Code
   <wsdl:operation name="DelegateCredentialsInit">
\end_layout

\begin_layout LyX-Code
      <wsdl:documentation>
\end_layout

\begin_layout LyX-Code
      </wsdl:documentation>
\end_layout

\begin_layout LyX-Code
      <wsdl:input name="DelegateCredentialsInitRequest"
\end_layout

\begin_layout LyX-Code
        message="deleg:DelegateCredentialsInitRequest"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:output name="DelegateCredentialsInitResponse"
\end_layout

\begin_layout LyX-Code
        message="deleg:DelegateCredentialsInitResponse"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="UnsupportedFault"
\end_layout

\begin_layout LyX-Code
        message="deleg:UnsupportedFault"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="ProcessingFault"
\end_layout

\begin_layout LyX-Code
        message="deleg:ProcessingFault"/>
\end_layout

\begin_layout LyX-Code
    </wsdl:operation>
\end_layout

\begin_layout LyX-Code
   <wsdl:operation name="UpdateCredentials">
\end_layout

\begin_layout LyX-Code
      <wsdl:documentation>
\end_layout

\begin_layout LyX-Code
      </wsdl:documentation>
\end_layout

\begin_layout LyX-Code
      <wsdl:input name="UpdateCredentialsRequest"
\end_layout

\begin_layout LyX-Code
        message="deleg:UpdateCredentialsRequest"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:output name="UpdateCredentialsResponse"
\end_layout

\begin_layout LyX-Code
        message="deleg:UpdateCredentialsResponse"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="UnsupportedFault"
\end_layout

\begin_layout LyX-Code
        message="deleg:UnsupportedFault"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="ProcessingFault"
\end_layout

\begin_layout LyX-Code
        message="deleg:ProcessingFault"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="WrongReferenceFault"
\end_layout

\begin_layout LyX-Code
        message="deleg:WrongReferenceFault"/>
\end_layout

\begin_layout LyX-Code
    </wsdl:operation>
\end_layout

\begin_layout LyX-Code
  </wsdl:portType>
\end_layout

\begin_layout LyX-Code
  <wsdl:binding name="DelegationBinding" type="deleg:DelegationPortType">
\end_layout

\begin_layout LyX-Code
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http
"/>
\end_layout

\begin_layout LyX-Code
    <wsdl:operation name="DelegateCredentialsInit">
\end_layout

\begin_layout LyX-Code
      <soap:operation soapAction="DelegateCredentialsInit"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:input name="DelegateCredentialsInitRequest">
\end_layout

\begin_layout LyX-Code
         <soap:body use="literal"/>
\end_layout

\begin_layout LyX-Code
      </wsdl:input>
\end_layout

\begin_layout LyX-Code
      <wsdl:output name="DelegateCredentialsInitResponse">
\end_layout

\begin_layout LyX-Code
         <soap:body use="literal"/>
\end_layout

\begin_layout LyX-Code
      </wsdl:output>
\end_layout

\begin_layout LyX-Code
    </wsdl:operation>
\end_layout

\begin_layout LyX-Code
    <wsdl:operation name="UpdateCredentials">
\end_layout

\begin_layout LyX-Code
      <soap:operation soapAction="UpdateCredentials"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:input name="UpdateCredentialsRequest">
\end_layout

\begin_layout LyX-Code
        <soap:body use="literal"/>
\end_layout

\begin_layout LyX-Code
      </wsdl:input>
\end_layout

\begin_layout LyX-Code
      <wsdl:output name="UpdateCredentialsResponse">
\end_layout

\begin_layout LyX-Code
        <soap:body use="literal"/>
\end_layout

\begin_layout LyX-Code
      </wsdl:output>
\end_layout

\begin_layout LyX-Code
    </wsdl:operation>
\end_layout

\begin_layout LyX-Code
  </wsdl:binding>
\end_layout

\begin_layout LyX-Code
</wsdl:definitions>
\end_layout

\begin_layout Section
ARC extensions for JSDL schema
\end_layout

\begin_layout LyX-Code
<?xml version="1.0" encoding="UTF-8"?>
\end_layout

\begin_layout LyX-Code
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
\end_layout

\begin_layout LyX-Code
            xmlns="http://www.nordugrid.org/ws/schemas/jsdl-arc"
\end_layout

\begin_layout LyX-Code
            xmlns:jsdl-arc="http://www.nordugrid.org/ws/schemas/jsdl-arc"
\end_layout

\begin_layout LyX-Code
            targetNamespace="http://www.nordugrid.org/ws/schemas/jsdl-arc">
\end_layout

\begin_layout LyX-Code
 <xsd:simpleType name="GMState_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:restriction base="xsd:string">
\end_layout

\begin_layout LyX-Code
   <xsd:enumeration value="ACCEPTED"/>
\end_layout

\begin_layout LyX-Code
   <xsd:enumeration value="PREPARING"/>
\end_layout

\begin_layout LyX-Code
   <xsd:enumeration value="SUBMIT"/>
\end_layout

\begin_layout LyX-Code
   <xsd:enumeration value="INLRMS"/>
\end_layout

\begin_layout LyX-Code
   <xsd:enumeration value="FINISHING"/>
\end_layout

\begin_layout LyX-Code
   <xsd:enumeration value="FINISHED"/>
\end_layout

\begin_layout LyX-Code
   <xsd:enumeration value="DELETED"/>
\end_layout

\begin_layout LyX-Code
   <xsd:enumeration value="CANCELING"/>
\end_layout

\begin_layout LyX-Code
  </xsd:restriction>
\end_layout

\begin_layout LyX-Code
 </xsd:simpleType>
\end_layout

\begin_layout LyX-Code
 <xsd:complexType name="Version_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:sequence>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="UpperExclusive" type="xsd:string" minOccurs="0"/>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="LowerExclusive" type="xsd:string" minOccurs="0"/>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="Exact" type="xsd:string" minOccurs="0" maxOccurs="unbounde
d"/>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="Exclusive" type="xsd:boolean" minOccurs="0"/>
\end_layout

\begin_layout LyX-Code
  </xsd:sequence>
\end_layout

\begin_layout LyX-Code
 </xsd:complexType>
\end_layout

\begin_layout LyX-Code
 <xsd:simpleType name="SessionType_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:documentation> For jsdl:Resources_Type </xsd:documentation>
\end_layout

\begin_layout LyX-Code
  <!-- xsd:element ref="SessionType" minOccurs="0"/ -->
\end_layout

\begin_layout LyX-Code
  <xsd:restriction base="xsd:string">
\end_layout

\begin_layout LyX-Code
   <xsd:enumeration value="INTERNAL"/>
\end_layout

\begin_layout LyX-Code
   <xsd:enumeration value="LIMITED"/>
\end_layout

\begin_layout LyX-Code
   <xsd:enumeration value="READONLY"/>
\end_layout

\begin_layout LyX-Code
   <xsd:enumeration value="FULL"/>
\end_layout

\begin_layout LyX-Code
  </xsd:restriction>
\end_layout

\begin_layout LyX-Code
 </xsd:simpleType>
\end_layout

\begin_layout LyX-Code
 <xsd:simpleType name="IsExecutable_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:documentation> For jsdl:DataStaging_Type (default: false) </xsd:documenta
tion>
\end_layout

\begin_layout LyX-Code
  <!-- xsd:element ref="IsExecutable" minOccurs="0"/ -->
\end_layout

\begin_layout LyX-Code
  <xsd:restriction base="xsd:boolean"/>
\end_layout

\begin_layout LyX-Code
 </xsd:simpleType>
\end_layout

\begin_layout LyX-Code
 <xsd:simpleType name="FileParameters_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:documentation> For jsdl:DataStaging_Type </xsd:documentation>
\end_layout

\begin_layout LyX-Code
  <!-- xsd:element ref="IsExecutable" minOccurs="0"/ -->
\end_layout

\begin_layout LyX-Code
  <xsd:restriction base="xsd:string"/>
\end_layout

\begin_layout LyX-Code
 </xsd:simpleType>
\end_layout

\begin_layout LyX-Code
 <xsd:simpleType name="JoinOutputs_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:documentation> For jsdl:JobDescription_Type (default: false) </xsd:docume
ntation>
\end_layout

\begin_layout LyX-Code
  <!-- xsd:element ref="JoinOutputs" minOccurs="0"/ -->
\end_layout

\begin_layout LyX-Code
  <xsd:restriction base="xsd:boolean"/>
\end_layout

\begin_layout LyX-Code
 </xsd:simpleType>
\end_layout

\begin_layout LyX-Code
 <xsd:simpleType name="Reruns_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:documentation> For jsdl:JobDescription_Type (default: false) </xsd:docume
ntation>
\end_layout

\begin_layout LyX-Code
  <!-- xsd:element ref="Reruns" minOccurs="0"// -->
\end_layout

\begin_layout LyX-Code
  <xsd:restriction base="xsd:integer"/>
\end_layout

\begin_layout LyX-Code
 </xsd:simpleType>
\end_layout

\begin_layout LyX-Code
 <xsd:complexType name="RunTimeEnvironment_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:documentation> For jsdl:Resources_Type </xsd:documentation>
\end_layout

\begin_layout LyX-Code
  <!-- xsd:element ref="RunTimeEnvironment" minOccurs="0" maxOccurs="unbounded"/
 -->
\end_layout

\begin_layout LyX-Code
  <xsd:sequence>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="Name" type="xsd:string"/>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="Version" type="Version_Type" minOccurs="0"/>
\end_layout

\begin_layout LyX-Code
  </xsd:sequence>
\end_layout

\begin_layout LyX-Code
 </xsd:complexType>
\end_layout

\begin_layout LyX-Code
 <xsd:complexType name="Middleware_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:documentation> For jsdl:Resources_Type </xsd:documentation>
\end_layout

\begin_layout LyX-Code
  <!-- xsd:element ref="Middleware" minOccurs="0" maxOccurs="unbounded"/
 -->
\end_layout

\begin_layout LyX-Code
  <xsd:sequence>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="Name" type="xsd:string"/>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="Version" type="Version_Type" minOccurs="0"/>
\end_layout

\begin_layout LyX-Code
  </xsd:sequence>
\end_layout

\begin_layout LyX-Code
 </xsd:complexType>
\end_layout

\begin_layout LyX-Code
 <xsd:complexType name="RemoteLogging_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:documentation> For jsdl:JobDescription_Type </xsd:documentation>
\end_layout

\begin_layout LyX-Code
  <!-- xsd:element ref="RemoteLogging" minOccurs="0" maxOccurs="3"/ -->
\end_layout

\begin_layout LyX-Code
  <xsd:sequence>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="URL" minOccurs="1" maxOccurs="1" type="xsd:anyURI"/>
\end_layout

\begin_layout LyX-Code
  </xsd:sequence>
\end_layout

\begin_layout LyX-Code
 </xsd:complexType>
\end_layout

\begin_layout LyX-Code
 <xsd:complexType name="CredentialServer_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:documentation> For jsdl:JobDescription_Type </xsd:documentation>
\end_layout

\begin_layout LyX-Code
  <!-- xsd:element ref="CredentialServer" minOccurs="0"/ -->
\end_layout

\begin_layout LyX-Code
  <xsd:sequence>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="URL" minOccurs="1" maxOccurs="1" type="xsd:anyURI"/>
\end_layout

\begin_layout LyX-Code
  </xsd:sequence>
\end_layout

\begin_layout LyX-Code
 </xsd:complexType>
\end_layout

\begin_layout LyX-Code
 <xsd:complexType name="LocalLogging_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:documentation> For jsdl:JobDescription_Type </xsd:documentation>
\end_layout

\begin_layout LyX-Code
  <!-- xsd:element ref="LocalLogging" minOccurs="0" maxOccurs="1"/ -->
\end_layout

\begin_layout LyX-Code
  <xsd:sequence>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="Directory" minOccurs="1" maxOccurs="1" type="xsd:string"/>
\end_layout

\begin_layout LyX-Code
  </xsd:sequence>
\end_layout

\begin_layout LyX-Code
 </xsd:complexType>
\end_layout

\begin_layout LyX-Code
 <xsd:simpleType name="AccessControlType_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:restriction base="xsd:string">
\end_layout

\begin_layout LyX-Code
   <xsd:enumeration value="GACL"/>
\end_layout

\begin_layout LyX-Code
  </xsd:restriction>
\end_layout

\begin_layout LyX-Code
 </xsd:simpleType>
\end_layout

\begin_layout LyX-Code
 <xsd:complexType name="AccessControl_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:documentation> For jsdl:JobDescription_Type </xsd:documentation>
\end_layout

\begin_layout LyX-Code
  <!-- xsd:element ref="AccessControl" minOccurs="0"/ -->
\end_layout

\begin_layout LyX-Code
  <xsd:sequence>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="OwnerAlwaysAllowed" type="xsd:boolean" minOccurs="0"/>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="Type" type="AccessControlType_Type" minOccurs="0"/>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="Content" minOccurs="0" type="xsd:string"/>
\end_layout

\begin_layout LyX-Code
  </xsd:sequence>
\end_layout

\begin_layout LyX-Code
 </xsd:complexType>
\end_layout

\begin_layout LyX-Code
 <xsd:simpleType name="NotificationType_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:restriction base="xsd:string">
\end_layout

\begin_layout LyX-Code
   <xsd:enumeration value="Email"/>
\end_layout

\begin_layout LyX-Code
  </xsd:restriction>
\end_layout

\begin_layout LyX-Code
 </xsd:simpleType>
\end_layout

\begin_layout LyX-Code
 <xsd:complexType name="Notify_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:documentation> For jsdl:JobDescription_Type </xsd:documentation>
\end_layout

\begin_layout LyX-Code
  <!-- xsd:element ref="Notify" minOccurs="0" maxOccurs="3"/ -->
\end_layout

\begin_layout LyX-Code
  <xsd:sequence>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="Type" type="NotificationType_Type" minOccurs="0"/>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="Endpoint" minOccurs="0" type="xsd:string"/>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="State" minOccurs="1" maxOccurs="unbounded" type="GMState_T
ype"/>
\end_layout

\begin_layout LyX-Code
  </xsd:sequence>
\end_layout

\begin_layout LyX-Code
 </xsd:complexType>
\end_layout

\begin_layout LyX-Code
 <xsd:simpleType name="SessionLifeTime_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:documentation> For jsdl:Resources_Type </xsd:documentation>
\end_layout

\begin_layout LyX-Code
  <!-- xsd:element ref="SessionLifeTime" minOccurs="0" maxOccurs="1"/ -->
\end_layout

\begin_layout LyX-Code
  <xsd:restriction base="xsd:long"/>
\end_layout

\begin_layout LyX-Code
 </xsd:simpleType>
\end_layout

\begin_layout LyX-Code
 <xsd:simpleType name="GridTimeLimit_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:documentation> For jsdl:Resources_Type </xsd:documentation>
\end_layout

\begin_layout LyX-Code
  <!-- xsd:element ref="GridTimeLimit" minOccurs="0" maxOccurs="1"/ -->
\end_layout

\begin_layout LyX-Code
  <xsd:restriction base="xsd:positiveInteger"/>
\end_layout

\begin_layout LyX-Code
 </xsd:simpleType>
\end_layout

\begin_layout LyX-Code
 <xsd:complexType name="CandidateTarget_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:documentation> For jsdl:Resources_Type </xsd:documentation>
\end_layout

\begin_layout LyX-Code
  <!-- xsd:element ref="jsdl-arc:CandidateTarget" minOccurs="0" maxOccurs="1"/
 -->
\end_layout

\begin_layout LyX-Code
  <xsd:sequence>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="HostName" minOccurs="0" type="xsd:string"/>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="QueueName" minOccurs="0" type="xsd:string"/>
\end_layout

\begin_layout LyX-Code
  </xsd:sequence>
\end_layout

\begin_layout LyX-Code
 </xsd:complexType>
\end_layout

\begin_layout LyX-Code
 <xsd:simpleType name="Time_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:documentation> For jsdl:JobDescription_Type </xsd:documentation>
\end_layout

\begin_layout LyX-Code
  <!-- xsd:element ref="ProcessingStartTime" minOccurs="0" maxOccurs="1"/
 -->
\end_layout

\begin_layout LyX-Code
  <xsd:restriction base="xsd:dateTime"/>
\end_layout

\begin_layout LyX-Code
 </xsd:simpleType>
\end_layout

\begin_layout LyX-Code
 <!--=========================================================-->
\end_layout

\begin_layout LyX-Code
 <xsd:element name="IsExecutable" type="IsExecutable_Type"/>
\end_layout

\begin_layout LyX-Code
 <xsd:element name="FileParameters" type="FileParameters_Type"/>
\end_layout

\begin_layout LyX-Code
 <xsd:element name="RunTimeEnvironment" type="RunTimeEnvironment_Type"/>
\end_layout

\begin_layout LyX-Code
 <xsd:element name="Middleware" type="Middleware_Type"/>
\end_layout

\begin_layout LyX-Code
 <xsd:element name="RemoteLogging" type="RemoteLogging_Type"/>
\end_layout

\begin_layout LyX-Code
 <xsd:element name="LocalLogging" type="LocalLogging_Type"/>
\end_layout

\begin_layout LyX-Code
 <xsd:element name="AccessControl" type="AccessControl_Type"/>
\end_layout

\begin_layout LyX-Code
 <xsd:element name="Notify" type="Notify_Type"/>
\end_layout

\begin_layout LyX-Code
 <xsd:element name="SessionLifeTime" type="SessionLifeTime_Type"/>
\end_layout

\begin_layout LyX-Code
 <xsd:element name="SessionType" type="SessionType_Type"/>
\end_layout

\begin_layout LyX-Code
 <xsd:element name="JoinOutputs" type="JoinOutputs_Type"/>
\end_layout

\begin_layout LyX-Code
 <xsd:element name="Reruns" type="Reruns_Type"/>
\end_layout

\begin_layout LyX-Code
 <xsd:element name="CredentialServer" type="CredentialServer_Type"/>
\end_layout

\begin_layout LyX-Code
 <xsd:element name="GridTimeLimit" type="GridTimeLimit_Type"/>
\end_layout

\begin_layout LyX-Code
 <xsd:element name="CandidateTarget" type="CandidateTarget_Type"/>
\end_layout

\begin_layout LyX-Code
 <xsd:element name="ProcessingStartTime" type="Time_Type"/>
\end_layout

\begin_layout LyX-Code
</xsd:schema>
\end_layout

\begin_layout Section
Error messages of A-REX
\end_layout

\begin_layout Standard
If job has not finished successfully the A-REX puts one or more lines into
 
\shape italic
job.ID.failed
\shape default
.
 Possible values include those generated by the A-REX itself:
\newline

\begin_inset Tabular
<lyxtabular version="3" rows="25" columns="2">
<features islongtable="true">
<column alignment="block" valignment="top" leftline="true" width="2.5in">
<column alignment="block" valignment="top" leftline="true" rightline="true" width="4in">
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\emph on
Error string
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\emph on
Reason/description
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Internal error
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Error in internal algorithm
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Internal error: can't read local file
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Error manipulating files in the control directory
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed reading local job information
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-//-
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed reading status of the job
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-//-
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed writing job status
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-//-
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed during processing failure
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-//-
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Serious troubles (problems during processing problems)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-//-
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed initiating job submission to LRMS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Could not run backend executable to pass job to LRMS
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Job submission to LRMS failed
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Backend executable supposed to pass job to LRMS returned non-zero exit code
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed extracting LRMS ID due to some internal error
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output of Backend executable supposed to contain local ID of passed job
 could not be parsed
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed in files upload (post-processing)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed to upload some or all output files
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed in files upload due to expired credentials - try to renew
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed to upload some or all output files most probably due to expired credentia
ls (proxy certificate)
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed to run uploader (post-processing)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Could not run 
\emph on
uploader
\emph default
 executable
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
uploader failed (postprocessing)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Generic error related to 
\emph on
uploader
\emph default
 component
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed in files download (pre-processing)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed to upload some or all input files
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed in files download due to expired credentials - try to renew
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed to download some or all input files most probably due to expired
 credentials (proxy certificate)
\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed to run downloader (pre-processing)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Could not run 
\emph on
downloader
\emph default
 executable
\end_layout

\end_inset
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
downloader failed (preprocessing)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Generic error related to 
\emph on
downloader
\emph default
 component
\end_layout

\end_inset
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
User requested to cancel the job
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A-REX detected external request to cancel this job, most probably issued
 by user
\end_layout

\end_inset
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Could not process RSL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Job description could not be processed to syntax errors or missing elements
\end_layout

\end_inset
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
User requested dryrun.
 Job skiped.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Job description contains request not to process this job
\end_layout

\end_inset
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
LRMS error: (CODE) DESCRIPTION
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
LRMS returned error.
 CODE is replaced with numeric code of LRMS, and DESCRIPTION with textual
 description
\end_layout

\end_inset
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Plugin at state STATE failed: OUTPUT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
External plugin specified in A-REX configuration returned non-zero exit
 code.
 STATE is replcaced by name of state to which job was going to be passed,
 OUTPUT by textual output generated by plugin.
\end_layout

\end_inset
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed running plugin at state STATE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
External plugin specified in A-REX configuration could not be executed.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace medskip
\end_inset

Provided by downloader component (URL is replcaced by source of input file,
 FILE by name of file):
\newline

\begin_inset Tabular
<lyxtabular version="3" rows="28" columns="2">
<features islongtable="true">
<column alignment="block" valignment="top" leftline="true" width="2.5in">
<column alignment="block" valignment="top" leftline="true" rightline="true" width="4in">
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\emph on
Error string
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\emph on
Reason/description
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Internal error in downloader
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Generic error 
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - unknown error
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Generic error 
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - unexpected error
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Generic error 
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - bad source URL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Source URL is either malformed or not supported
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - bad destination URL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Shouldn't happen
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - failed to resolve source locations
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
File either not registred or other problems related to Data Indexing service.
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - failed to resolve destination locations
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Shouldn't happen
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - failed to register new destination file
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Shouldn't happen
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - can't start reading from source
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Problems related to accessing instance of file at Data Storing service.
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - can't read from source
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-//-
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - can't start writing to destination
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Access problems in a session directory
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - can't write to destination
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-//-
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - data transfer was too slow
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Timeouted while trying to download file
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - failed while closing connection to source
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Shouldn't happen
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - failed while closing connection to destination
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Shouldn't happen
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - failed to register new location
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Shouldn't happen
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - can't use local cache
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Problems with A-REX cache 
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - system error
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Operating System returned error code where unexpected
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - delegated credentials expired
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Access to source requires credententials and they are either outdated or
 missing (not delegated).
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
User file: FILENAME - Bad information about file: checksum can't be parsed.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
In job description there is a checksum provided for file uploadable by user
 interface and this record can't be interpreted.
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
User file: FILENAME - Bad information about file: size can't be parsed.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
In job description there is a size provided for file uploadable by user
 interface and this record can't be interpreted.
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
User file: FILENAME - Expected file.
 Directory found.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Instead of file uploadable by user interface A-REX found directory with
 same name in a session directory.
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
User file: FILENAME - Expected ordinary file.
 Special object found.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Instead of file uploadable by user interface A-REX found special object
 with same name in a session directory.
\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
User file: FILENAME - Delivered file is bigger than specified.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The size of file uploadable by user interface is bigger 
\end_layout

\end_inset
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
User file: FILENAME - Delivered file is unreadable.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A-REX can't check user uploadable file due to some internal error.
 Most probably due to improperly configured local permissions.
\end_layout

\end_inset
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
User file: FILENAME - Could not read file to compute checksum.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A-REX can't read user uploadable file due to some internal error.
 Most probably due to improperly configured local permissions.
\end_layout

\end_inset
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
User file: FILENAME - Timeout waiting
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
A-REX waited for user uploadable file too long.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace medskip
\end_inset

Provided by uploader component (URL is replaced by destination of output
 file) :
\newline

\begin_inset Tabular
<lyxtabular version="3" rows="23" columns="2">
<features islongtable="true">
<column alignment="block" valignment="top" leftline="true" width="2.5in">
<column alignment="block" valignment="top" leftline="true" rightline="true" width="4in">
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\emph on
Error string
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\emph on
Reason/description
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Internal error in uploader
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Generic error 
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - unknown error
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Generic error 
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - unexpected error
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Generic error 
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
User requested to store output locally URL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Destination is URL of type 
\emph on
file
\emph default
.
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - bad source URL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Shouldn't happen
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - bad destination URL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Destination URL is either malformed or not supported
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - failed to resolve source locations
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Shouldn't happen
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - failed to resolve destination locations
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Problems related to Data Indexing service.
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - failed to register new destination file
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-//-
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - can't start reading from source
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
User request to store output file, but there is no such file or there are
 problems accessing session directory
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - can't start writing to destination
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Problems with Data Storing services
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - can't read from source
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Problems accessing session directory
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - can't write to destination
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Problems with Data Storing services
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - data transfer was too slow
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Timeout during transfer
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - failed while closing connection to source
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Shouldn't happen
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - failed while closing connection to destination
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Shouldn't happen
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - failed to register new location
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Problems related to Data Indexing service.
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - can't use local cache
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Shouldn't happen
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - system error
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Operating System returned error code where unexpected
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - delegated credentials expired
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Access to destination requires credententials and they are either outdated
 or missing (not delegated).
\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace medskip
\end_inset

Coming from LRMS (PBS) backend:
\newline

\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features islongtable="true">
<column alignment="block" valignment="top" leftline="true" width="2.5in">
<column alignment="block" valignment="top" leftline="true" rightline="true" width="4in">
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\emph on
Error string
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\emph on
Reason/description
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Submission: Configuration error.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Submission: System error.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Submission: Job description error.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Submission: Local submission client behaved unexpectedly.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Submission: Local submission client failed.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
bibliography{grid}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
