#LyX 1.4.5 created this file. For more info see http://www.lyx.org/
\lyxformat 245
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{graphicx}                              %for PNG images (pdflatex)
%\usepackage{graphics}                              %for EPS images (latex)
\usepackage[linkbordercolor={1.0 1.0 0.0}]{hyperref} %for \url tag
\usepackage{color}                                 %for defining custom colors
\usepackage{framed}                                %for shaded and framed paragraphs
\usepackage{textcomp}                              %for various symbols, e.g. Registered Mark
\usepackage{geometry}                              %for defining page size
\usepackage{longtable}                             %for breaking tables
\usepackage{multirow}
%
\geometry{verbose,a4paper,tmargin=2.5cm,bmargin=2.5cm,lmargin=2.5cm,rmargin=2cm}
\hypersetup{
  pdfauthor = {A.Konstantinov},
  pdftitle = {The NorduGrid Grid Manager and GridFTP Server.},
  pdfsubject = {},
  pdfkeywords = {},
  pdfcreator = {PDFLaTeX with hyperref package},
  pdfproducer = {PDFLaTeX}
}
%
\bibliographystyle{IEEEtran}                       %a nice bibliography style
%
\def\efill{\hfill\nopagebreak}%
\hyphenation{Nordu-Grid}
\setlength{\parindent}{0cm}
\setlength{\FrameRule}{1pt}
\setlength{\FrameSep}{8pt}
\addtolength{\parskip}{5pt}
\renewcommand{\thefootnote}{\fnsymbol{footnote}}
\renewcommand{\arraystretch}{1.3}
\newcommand{\dothis}{\colorbox{shadecolor}}
\newcommand{\globus}{Globus Toolkit\textsuperscript{\textregistered}~2~}
\newcommand{\GT}{Globus Toolkit\textsuperscript{\textregistered}}
\newcommand{\ngdl}{\url{http://ftp.nordugrid.org/download}~}
\definecolor{shadecolor}{rgb}{1,1,0.6}
\definecolor{salmon}{rgb}{1,0.9,1}
\definecolor{bordeaux}{rgb}{0.75,0.,0.}
\definecolor{cyan}{rgb}{0,1,1}
%
\end_preamble
\language english
\inputencoding auto
\fontscheme pslatex
\graphics default
\paperfontsize default
\spacing onehalf
\papersize a4paper
\use_geometry true
\use_amsmath 2
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes true
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
def
\backslash
today{
\backslash
number
\backslash
day/
\backslash
number
\backslash
month/
\backslash
number
\backslash
year}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
begin{titlepage}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
begin{tabular}{rl}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
resizebox*{3cm}{!}{
\backslash
includegraphics{ng-logo}}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

&
\backslash
parbox[b]{2cm}{
\backslash
textbf 
\backslash
it {
\backslash
hspace*{-1.5cm}NORDUGRID
\backslash
vspace*{0.5cm}}}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
end{tabular}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hrulefill
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

{
\backslash
raggedleft NORDUGRID-TECH-14
\backslash
par}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

{
\backslash
raggedleft 
\backslash
today
\backslash
par}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
vspace*{2cm}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center

\shape smallcaps
\size large
The ARC Computational Job Management Module - A-Rex
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
vspace*{0.5cm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center

\shape italic
\size large
Description and Administrator's Manual
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
vspace*{1.5cm}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

{
\backslash
centering 
\backslash
large A.Konstantinov
\backslash
footnote{aleks@fys.uio.no} 
\backslash
large 
\backslash
par}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
end{titlepage}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset LatexCommand \tableofcontents{}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
newpage
\end_layout

\end_inset


\end_layout

\begin_layout Section
Introduction
\begin_inset LatexCommand \label{sec:intro}

\end_inset


\end_layout

\begin_layout Standard
A-Rex is one of ARC middleware componets implementing functions of so called
 
\emph on
Computing Element
\emph default
 (CE).
 It's made of few components - A-Rex Web Service (WS) Interface and Grid
 Manager (GM).
 Alternative and currently only stable interface to A-Rex is GridFTP Server
 (GFS).
\end_layout

\begin_layout Standard
The aim of the Grid Manager (GM) is to take care of job pre- and post-processing.
 It provides functionality to stage-in files containing input data and program
 modules from wide range of sources and transfer or store output results.
\end_layout

\begin_layout Standard
Both WS Interface and GridFTP Interface components provide a way to submit
 and control computational tasks (jobs) to be executed by the GM and undelying
 Local Resource Management System.
 While WS interface is currently being developed the GridFTP is considered
 to be stable and prefered one.
\end_layout

\begin_layout Standard

\series bold
You should use this document for advanced configuration purposes and understandi
ng of internals of the aforementioned tools.
 For general instalaltion and configuration refer to other documents avaialble
 at 
\begin_inset LatexCommand \url{http://www.nordugrid.org/papers.html}

\end_inset

.
 
\end_layout

\begin_layout Section
Main concepts
\begin_inset LatexCommand \label{sec:main concepts}

\end_inset


\end_layout

\begin_layout Standard
A job is a set of input files (which may or may not include executables),
 a main executable and a set of output files.
 The process of gathering input files, executing a job, and transferring/storing
 output files is called a 
\emph on
session
\emph default
.
\end_layout

\begin_layout Standard
Each job gets a directory on the CE called the 
\emph on
session directory
\emph default
 (SD).
 Input files are gathered in the SD.
 The job is supposed to produce new data files also in the SD.
 GM does not guarantee the availability of any other places accessible by
 the job other than SD (unless such place is part of requested Runtime Environem
ent).
 The SD is also the only place which is controlled by the GM.
 It is is accessible by the user from outside through HTTPS and GridFTP
 protocols.
 Any file created outside the SD is not controlled by the GM.
 Any exchange of data between client and GM (including also program modules)
 is done through GridFTP 
\begin_inset LatexCommand \cite{gridftp}

\end_inset

 or HTTPS protocols depending on selected interface.
 A URL for accessing input/output files is obtained through the Information
 System or WS Information Interface of A-Rex.
\end_layout

\begin_layout Standard
Each job gets an identifier (
\shape italic
jobid
\shape default
).
 This is a handle which identifies the job in the GM and the Information
 System 
\begin_inset LatexCommand \cite{is}

\end_inset

.
\end_layout

\begin_layout Standard
Each job is initiated and controlled through GFS or WS.
 Complete description of job (not data) is passed to the GM through GFS
 in RSL 
\begin_inset LatexCommand \cite{rsl}

\end_inset

 or through WS in JSDL-coded 
\begin_inset LatexCommand \cite{jsdl}

\end_inset

 description (job description - JD).
\end_layout

\begin_layout Section
Input/output data
\begin_inset LatexCommand \label{sec:input/output data}

\end_inset


\end_layout

\begin_layout Standard
The main task of the GM is to take care of processing input and output data
 (files) of the job.
 Input files are gathered in SD.
 There are 2 ways to put file into the SD:
\end_layout

\begin_layout Itemize
Downloads initiated by the GM.
 Such files (name and source) are defined in the JD.
 It is a sole responsibility of the GM to make sure that a file will be
 available in the SD.
\newline
The supported sources are at the moment: GridFTP, FTP,
 HTTP, HTTPS (HTTP over SSLv3) and HTTPg (HTTP over GSI).
 Also some nonstandard sources are supported.
 Those are described below.
\end_layout

\begin_layout Itemize
Upload initiated by the user directly or through the User Interface (UI).
 Because the SD becomes available immediately at the time of submission
 of JD, UI can (and should) use that to upload data files which are not
 otherwise accessible by the GM.
 An example of such files can be the main executable of the job, files containin
g job's options/parameters, etc.
 These files can (and should) also be specified in the JD.
\end_layout

\begin_layout Standard

\series bold
There is no
\series default
 other reliable way for a job to obtain input data on the CE belonging to
 NorduGrid.
 Access to AFS, NFS, FTP, HTTP and any other remote data transport during
 execution of the job is not guaranteed (at least not by GM).
\end_layout

\begin_layout Standard
Job stores output files in the SD.
 Those files also belong to 2 groups:
\end_layout

\begin_layout Itemize
Files which are supposed to be moved to a 
\emph on
Storage Element
\emph default
 (SE) and optionally registered in some 
\emph on
Indexing Service
\emph default
 like 
\emph on
Replica Catalog
\emph default
 (RC).
 The GM takes care of those files.
 They have to be specified in the JD.
 If job fails during any stage of processing no attept is taken to transfer
 those files to their final destination, unless there is option 
\emph on
preserve=yes
\emph default
 specified in their URLs.
\end_layout

\begin_layout Itemize
Files which are supposed to be fetched by the user.
 The user runs UI to obtain those files.
 They 
\series bold
must
\series default
 also be specified in the JD.
\end_layout

\begin_layout Section
\begin_inset LatexCommand \label{Section: Job Flow}

\end_inset

Job flow
\end_layout

\begin_layout Standard
From the point of view of the GM a job passes through various states.
 Picture 
\begin_inset LatexCommand \ref{job states diagram}

\end_inset

 presents a diagram of the possible states of a job.
\begin_inset Float figure
placement tbh
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
includegraphics{pic1}
\end_layout

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{job states diagram}

\end_inset

Job states
\end_layout

\end_inset

A user can examine the state of a job by querying the NorduGrid Information
 System (IS) using the UI or any other tool.
 Please remember that IS can manipulate with state names to make them more
 user friendly and to combine them with states introduced by other parts
 of whole setup.
 Another way is to access virtual informational files through GridFTP interface
 or to use query metod of JCS.
 
\end_layout

\begin_layout Standard
Configuration can put limits on amout of simultaneous jobs at some states.
 If such limit is reached job stays in it's current state waiting for free
 slot.
 This situation is presented by prepending current state name with 
\series bold
PENDING:
\series default
 status mark.
 
\end_layout

\begin_layout Standard
Below is description of all actions taken by the GM at every state:
\end_layout

\begin_layout Itemize

\series bold
Accepted
\series default
 - At this state the job has been submitted to a CE but not processed yet.
 The GM will analyze the JD and move to the next stage.
 If JD can not be processed the job will be canceled and moved to the state
 
\series bold
Finishing
\series default
.
\end_layout

\begin_layout Itemize

\series bold
Preparing
\series default
 - The input data is being gathered in the SD.
 The GM is downloading files specified in the JD and waiting for files which
 are supposed to be downloaded by the UI.
 If all files are successfully gathered the job moves to the next state.
 If 
\series bold
any
\series default
 file can't be downloaded or it takes UI too long to upload a file - the
 job moves to 
\series bold
Finishing
\series default
 state.
 It is possible to put limit on number of simultaneous 
\series bold
Preparing
\series default
 jobs.
 Those jobs out of limit will stay in previous
\series bold
 Accepted
\series default
 state with PENDING mark.
 Exceptions are jobs which has no files to be downloaded.
 Those are processed out of limits.
\end_layout

\begin_layout Itemize

\series bold
Submitting
\series default
 - This is a point of interaction with 
\emph on
Local Resource Management System
\emph default
 (LRMS).
 At the moment PBS is supported best and correspoding backends are provided
 with default installation.
 The job is being submitted for execution.
 If the local job submission is successful the job moves to the next state.
 Otherwise it moves to 
\series bold
Finishing
\series default
.
 It is possible to limit number of jobs in 
\series bold
Submitting
\series default
 and following 
\series bold
InLRMS
\series default
 states.
\end_layout

\begin_layout Itemize

\series bold
InLRMS
\series default
 - The job is queued or being executed in the LRMS.
 The GM takes no actions except waiting until job finishes.
\end_layout

\begin_layout Itemize

\series bold
Cancelling
\series default
 - Necessary action to cancel job in the LRMS is being taken.
\end_layout

\begin_layout Itemize

\series bold
Finishing
\series default
 - The output data is being processed.
 Specified data files are moved to the specified SEs and are optionally
 registered at RC.
 The user can download data files from the SD by using UI or any other tool.
 All the files not specified as output files are removed from the SD at
 very beginning of this state.
 It is possible to limit number of simultaneous jobs in this state.
\end_layout

\begin_layout Itemize

\series bold
Finished
\series default
 - No more processing is performed by the GM.
 The user can continue to download data files from the SD.
 The SD is kept available for some time (default is 1 week).
 After that it is moved to the state 
\series bold
Deleted
\series default
.
 The 'deletion' time can be queried at NorduGrid Information System as attribute
 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
texttt{nordugrid-pbs-job-sessiondirerasetime}
\end_layout

\end_inset

 of 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
texttt{nordugrid-pbs-job}
\end_layout

\end_inset

.
 If job was moved to 
\series bold
Finished
\series default
 because of failure, it may be restarted on request of client.
 Job is moved to a state previous to one which failed and is assigned mark
 PENDING.
 This is needed in order to not break the configuration limits.
 Exception is a job failed in 
\series bold
InLRMS
\series default
 state and lacking input files specified in JD.
 Such job is treated like failed in 
\series bold
Preparing
\series default
 state.
\end_layout

\begin_layout Itemize

\series bold
Deleted
\series default
 - Job is moved to this state if user does not request job to be cleaned.
 Only minimal subset of information about such job is kept.
\end_layout

\begin_layout Standard
In the case of the failure special processing is applied to output files.
 All specified output files are treated as 
\series bold
downloadable by user
\series default
.
 No files will be moved to the SE.
\end_layout

\begin_layout Section
URLs
\end_layout

\begin_layout Standard
The GM and it's components support following data transfer protocols and
 corresponding URLs: 
\emph on
ftp, gsiftp, http, httpg, https, se, rc
\emph default
 and 
\emph on
rls.
 
\emph default
For more information please see 
\begin_inset Quotes eld
\end_inset

Protocols, Uniform Resource Locators (URL) and extensions supported in ARC
\begin_inset Quotes erd
\end_inset

 document 
\begin_inset LatexCommand \cite{urls}

\end_inset

.
\end_layout

\begin_layout Section
\begin_inset LatexCommand \label{section: internals}

\end_inset

Internals
\end_layout

\begin_layout Subsection
Internal Files of the Grid Manager
\end_layout

\begin_layout Standard
For each local UNIX user listed in the GM configuration a 
\shape italic
control directory
\shape default
 exists.
 In this directory the GM stores information about jobs belonging to that
 user.
 Multiple users can share the same 
\shape italic
control directory
\shape default
.
 To make it easier to recover in the case of failure, the GM stores most
 information in files rather than in memory.
 All files belonging to same job have names starting with 
\series bold
job.ID.

\series default
 here ID is the job identifier.
\end_layout

\begin_layout Standard
The files in the control directory and their formats are described below:
\end_layout

\begin_layout Itemize

\shape italic
job.ID.status
\shape default
 - current state of the job.
 It contains one word of text representing the current state of the job.
 Possible values are :
\end_layout

\begin_deeper
\begin_layout Itemize
ACCEPTED
\end_layout

\begin_layout Itemize
PREPARING
\end_layout

\begin_layout Itemize
SUBMITTING
\end_layout

\begin_layout Itemize
INLRMS
\end_layout

\begin_layout Itemize
FINISHING
\end_layout

\begin_layout Itemize
FINISHED
\end_layout

\begin_layout Itemize
CANCELING
\end_layout

\begin_layout Itemize
DELETED
\end_layout

\end_deeper
\begin_layout Standard
See section 
\begin_inset LatexCommand \ref{Section: Job Flow}

\end_inset

 for a description of the various states.
 Additionally each value can be prepended with a prefix 
\begin_inset Quotes eld
\end_inset

PENDING:
\begin_inset Quotes erd
\end_inset

 (like PENDING:ACCEPTED, see section 
\begin_inset LatexCommand \ref{Section: Job Flow}

\end_inset

).
 That is used to show that the job is 
\emph on
ready
\emph default
 to be moved to a next state and it stays in a current state 
\emph on
only
\emph default
 because some limits set in configuration are exceeded.
\end_layout

\begin_layout Itemize

\shape italic
job.ID.description
\shape default
 - contains the RSL description of the job.
\end_layout

\begin_layout Itemize

\shape italic
job.ID.local
\shape default
 - information about job used by the GM.
 It consists of lines of format 
\shape italic

\begin_inset Quotes eld
\end_inset

name = value
\begin_inset Quotes erd
\end_inset


\shape default
 .
 Not all of them are always available.
 The following names are defined:
\end_layout

\begin_deeper
\begin_layout Itemize

\shape italic
subject
\shape default
 - user subject also known as the distinguished name (DN)
\end_layout

\begin_layout Itemize

\shape italic
starttime
\shape default
 - the GMT time when the job was accepted represented in Generalized Time
 format of LDAP 
\end_layout

\begin_layout Itemize

\shape italic
lifetime
\shape default
 - time period to live for the SD after job finished in seconds
\end_layout

\begin_layout Itemize

\shape italic
cleanuptime
\shape default
 - the GMT time when job to be removed from cluster and SD deleted in Generalize
d Time format
\end_layout

\begin_layout Itemize

\shape italic
notify
\shape default
 - email addresses and flags to send mail to about job specified status
 changes
\end_layout

\begin_layout Itemize

\shape italic
processtime
\shape default
 - the GMT time when to start processing the job in Generalized Time format
\end_layout

\begin_layout Itemize

\shape italic
exectime
\shape default
 - the GMT time when to start job execution in Generalized Time format
\end_layout

\begin_layout Itemize

\shape italic
expiretime
\shape default
 - the GMT time when credentials delegated to job expire in Generalized
 Time format
\end_layout

\begin_layout Itemize

\shape italic
rerun
\shape default
 - number of retries left to run the job
\end_layout

\begin_layout Itemize

\shape italic
jobname
\shape default
 - name of the job as supplied by the user
\end_layout

\begin_layout Itemize

\shape italic
lrms
\shape default
 - name of LRMS to run the job at
\end_layout

\begin_layout Itemize

\shape italic
queue
\shape default
 - name of the queue to run the job at
\end_layout

\begin_layout Itemize

\shape italic
localid
\shape default
 - job id in LRMS (appears only then the job is at state 
\series bold
InLRMS
\series default
)
\end_layout

\begin_layout Itemize

\shape italic
args
\shape default
 - list of command-line arguments including the executable
\end_layout

\begin_layout Itemize

\shape italic
downloads
\shape default
 - number of files to download into SD before execution
\end_layout

\begin_layout Itemize

\shape italic
uploads
\shape default
 - number of files to upload from SD after execution
\end_layout

\begin_layout Itemize

\shape italic
gmlog
\shape default
 - directory name which holds files containing information about job when
 accessed through GridFTP interface
\end_layout

\begin_layout Itemize

\shape italic
clientname
\shape default
 - name and ip address:port of client machine (name is provided by user
 interface)
\end_layout

\begin_layout Itemize

\shape italic
clientsoftware
\shape default
 - version of software used to submit job
\end_layout

\begin_layout Itemize

\shape italic
sessiondir
\shape default
 - SD of job
\end_layout

\begin_layout Itemize

\shape italic
failedstate
\shape default
 - state at which job failed (available only if it is possible to restart
 job)
\end_layout

\begin_layout Itemize

\shape italic
jobreport
\shape default
 - URL of 
\emph on
logger service
\emph default
 used to keep track of executed jobs (one requested by user)
\end_layout

\end_deeper
\begin_layout Standard
This file is filled partially during job submission and fully when the job
 moves from the 
\series bold
Accepted
\series default
 to the 
\series bold
Preparing
\series default
 state.
\end_layout

\begin_layout Itemize

\shape italic
job.ID.input
\shape default
 - list of input files.
 Each line contains 2 values separated by a space.
 First value contains name of the file relative to the SD.
 Second value is an URL or a file description.
 Example:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{1cm}
\end_layout

\end_inset


\shape italic
input.dat gsiftp://grid.domain.org/dir/input_12378.dat
\end_layout

\begin_layout Standard

\shape italic
url
\shape default
 - ordinary URL for gsiftp, ftp, http, https or httpg protocols with the
 addition of '
\series bold
replica catalog url
\series default
' (RC URL) and '
\series bold
replica location service url
\series default
' (RLS URL).
\newline
Each URL can contain additional options.
\end_layout

\begin_layout Standard

\shape italic
file description
\shape default
 - [size][.checksum].
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{1cm}
\end_layout

\end_inset


\shape italic
size
\shape default
 - size of the file in bytes.
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{1cm}
\end_layout

\end_inset


\shape italic
checksum
\shape default
 - checksum of the file identical to the one produced by 
\series bold
\shape italic
cksum
\series default
\shape default
 (1).
\end_layout

\begin_layout Standard
Both size and checksum can be left out.
 Special kind of file description *.* is used to specify files which are
 
\series bold
not
\series default
 required to exist.
\end_layout

\end_deeper
\begin_layout Standard
This file is used by the '
\series bold
\shape italic
downloader
\series default
\shape default
' utility.
 Files with 'url' will be downloaded to the SD and files with 'file description'
 will simply be checked to exist.
 Each time a new 
\series bold
valid
\series default
 file appears in the SD it is removed from the list and 
\shape italic
job.ID.input
\shape default
 is updated.
 Any external tool can thus track the process of collecting input files
 by checking 
\shape italic
job.ID.input.
\end_layout

\begin_layout Itemize

\shape italic
job.ID.output
\shape default
 - list of output files.
 Each line contains 1 or 2 values separated by a space.
 First value is the name of the file relative to the SD.
 The second value, if present, is a URL.
 Supported URLs are the same as those supported by job.ID.input.
\end_layout

\begin_layout Standard
This file is used by the '
\series bold
\shape italic
uploader
\series default
\shape default
' utility.
 Files with 
\shape italic
url
\shape default
 will be uploaded to SE and remaining files will be left in the SD.
 Each time a file is uploaded it is removed from the list and 
\shape italic
job.ID.output
\shape default
 is updated.
 Files not mentioned as output files are removed from the SD at the the
 beginning of the 
\series bold
Finishing
\series default
 state.
\end_layout

\begin_layout Itemize

\shape italic
job.ID.failed
\shape default
 - the existence of this file marks the failure of the job.
 It can also contain one or more lines of text describing the reason of
 failure.
 Failure includes the return code different from zero of the job itself.
\end_layout

\begin_layout Itemize

\shape italic
job.ID.errors
\shape default
 - this file contains the output produced by external utilities like 
\series bold
\shape italic
downloader
\series default
\shape default
, 
\series bold
\shape italic
uploader
\series default
\shape default
, script for job submission to LRMS, etc on their stderr handle.
 Those are not necessarily errors, but can be just useful information about
 actions taken during the job processing.
 In case of problem include content of that file while asking for help.
\end_layout

\begin_layout Itemize

\shape italic
job.ID.diag
\shape default
 - information about resources used during execution of job and other informatio
n suitable for diagnostics and statistics.
 It's format is similar to that of 
\shape italic
job.ID.local
\shape default
.
 The following names are at least defined:
\end_layout

\begin_deeper
\begin_layout Itemize

\shape italic
nodename
\shape default
 - name of computing node which was used to execute job,
\end_layout

\begin_layout Itemize

\shape italic
runtimeenvironments
\shape default
 - used runtime environments separated by ';',
\end_layout

\begin_layout Itemize

\shape italic
exitcode
\shape default
 - numerical exit code of job,
\end_layout

\begin_layout Itemize

\shape italic
frontend_distribution
\shape default
 - name and version of operating system distribution on frontend computer,
\end_layout

\begin_layout Itemize

\shape italic
frontend_system
\shape default
 - name of operating on frontend computer,
\end_layout

\begin_layout Itemize

\shape italic
frontend_subject
\shape default
 - subject (DN) of certificate representing frontend computer,
\end_layout

\begin_layout Itemize

\shape italic
frontend_ca
\shape default
 - subject (DN) of issuer of certificate representing frontend computer,
\end_layout

\begin_layout Standard
and other information provided by GNU 
\emph on
time
\emph default
 utility.
 Note that some implementation of 
\emph on
time
\emph default
 insert unrequested information in their output.
 Hence some lines can have broken format.
\end_layout

\end_deeper
\begin_layout Itemize

\shape italic
job.ID.proxy
\shape default
 -delegated GSI proxy.
\end_layout

\begin_layout Itemize

\shape italic
job.ID.proxy.tmp
\shape default
 - temporary GSI proxy with different unx ownership used by processes run
 with effective 
\emph on
user id
\emph default
 different form job owner's 
\emph on
id
\emph default
.
\end_layout

\begin_layout Standard
There are other files with names like job.ID.* which are created and used
 by different parts of the GM.
 Their presence in the 
\shape italic
control directory
\shape default
 can not be guaranteed and can change depending on changes in the GM code.
\end_layout

\begin_layout Subsection
GridFTP Interface
\end_layout

\begin_layout Standard
The GridFTP Interface to job management is implemented through GridFTP server.
 The GFS is made of layer implementing GridFTP protocol and plugins for
 accessing actual data.
 Local file access in the GFS is implemented through plugins (shared libraries).
 There are 3 plugins provided with the GFS: 
\shape italic
fileplugin.so, gaclplugin.so
\shape default
 and 
\shape italic
jobplugin.so
\shape default
 .
 
\end_layout

\begin_layout Standard
The 
\shape italic
fileplugin.so
\shape default
 is intended to be uses for plain file access with the configuration senitive
 to user subject and is not needed for job management interface.
 
\end_layout

\begin_layout Standard
The 
\shape italic
gaclplugin.so
\shape default
 uses GACL (
\begin_inset LatexCommand \url{http://www.gridpp.ac.uk/authz/gacl/}

\end_inset

) to control access to local file system instead of Unix user identity.
 It's also not needed for job management.
\end_layout

\begin_layout Standard
The 
\shape italic
jobplugin.so
\shape default
 is using information about jobs being controlled by GM and provides access
 to session directories of the jobs owned by user.
 It also provides an interface (virtual directory and virtual operations)
 to submit, cancel, clean, renew credentials and obtain information about
 the job.
\end_layout

\begin_layout Subsection
Web Service Interface
\end_layout

\begin_layout Standard
A-REX Web Service Interface provides means to submit a description of a
 computational job to a computing resource, to stage-in additional data,
 to monitor and control processing of jobs, and obtain data produced during
 the execution of a job.
 The WS Interface is built and deployed inside Hosting Envirnoment Daemon
 [HED] infrastructure
\begin_inset LatexCommand \cite{hed}

\end_inset

.
\end_layout

\begin_layout Subsubsection
Basic Execution Service Interface
\end_layout

\begin_layout Standard
The job submission and control interface is based on document produced by
 OGF OGSA Basic Execution Services (BES) Working Group
\begin_inset LatexCommand \cite{bes}

\end_inset

.
 The exchange of SOAP messages is performed over HTTPS protocol.
 The BES interface is represented by two port-types - BES-Management and
 BES-Factory.
 The former is made to control the A-REX service itself and thus defines
 operations to start and stop the functionality of the BES service.
 A-REX does not implement remote control of service functionality.
 Hence the BES-Management port-type is not implemented.
 The BES-Factory port-type provides operations to submit new jobs (to create
 an activity in terms of BES) and to monitor its state.
 It also has an ability to provide information about the service.
 A-REX fully implements the functionality of this port-type.
\end_layout

\begin_layout Standard
For job descriptions A-REX accepts the Job Submission Description Language
 (JSDL)
\begin_inset LatexCommand \cite{jsdl}

\end_inset

 as defined by the OGF Job Submission Description Language Working Group.
 Supported elements and extensions are described below.
\end_layout

\begin_layout Subsubsection
Extensions to OGSA BES interface
\end_layout

\begin_layout Standard
A-REX introduces a new operation in addition to those provided by BES.
 It does that by defining its own port-type A-REX with the single operation
 
\emph on
ChangeActivityStatus
\emph default
 (see Appendix D).
 This operation provides a way to request simple transfers between states
 of jobs being processed and corresponding actions.
\end_layout

\begin_layout Itemize

\emph on
ChangeActivityStatus
\end_layout

\begin_deeper
\begin_layout Itemize
Input
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
ActivityStatusType OldStatus
\emph default
: Description of the state the job is supposed to be in during execution
 of this request.
 If the current state of the job is different from the one having been given,
 the operation is aborted and a fault is returned.
 This parameter is optional.
\end_layout

\begin_layout Itemize

\emph on
ActivityStatusType NewStatus
\emph default
: Description of the state the job is to be put into.
\end_layout

\end_deeper
\begin_layout Itemize
Output
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
ActivityStatusType NewStatus
\emph default
: Description of the current state of the job.
\end_layout

\end_deeper
\begin_layout Itemize
Fault(s)
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
NotAuthorizedFault
\emph default
: Indicates that client is not allowed to do this operation.
\end_layout

\begin_layout Itemize

\emph on
InvalidActivityIdentifierFault
\emph default
: There is no such job/activity.
\end_layout

\begin_layout Itemize

\emph on
CantApplyOperationToCurrentStateFault
\emph default
: Requested transition is not possible.
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
On result of this command, the job should be put into the requested state.
 If such a procedure cannot be performed immediately then the corresponding
 sequence is initiated and fault OperationWillBeAppliedEventuallyFault will
 be returned.
\end_layout

\begin_layout Standard
Since BES allows implementators to extend their initial activity states
 with additional sub-states, A-REX defines a set of sub-states of activity
 processing in addition to those defined by the BES, as listed in Table
 
\begin_inset LatexCommand \ref{tab:Job-states-definitions}

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Caption
\begin_inset LatexCommand \label{tab:Job-states-definitions}

\end_inset

Job states definitions and mappings
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="3">
<features headTopDL="true">
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="left" valignment="top" leftline="true" rightline="true" width="10cm">
<row topline="true" bottomline="true" endhead="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Applicable BES State
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
ARC Sub-state
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Description
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
renewcommand{
\backslash
multirowsetup}{
\backslash
centering}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
multirow{2}{2cm}{
\end_layout

\end_inset

Pending
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Accepting
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" width="10cm">
\begin_inset Text

\begin_layout Standard
Job is in the process of being submitted
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell multicolumn="1" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Accepted
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Job was submitted
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
renewcommand{
\backslash
multirowsetup}{
\backslash
centering}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
multirow{7}{2cm}{
\end_layout

\end_inset

Running
\begin_inset ERT
status collapsed

\begin_layout Standard

}
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Preparing
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Stage-in process is going on
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell multicolumn="1" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Prepared
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Stage-in process has finished
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell multicolumn="1" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Submitting
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Communication with local batch system is in process
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell multicolumn="1" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Executing
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Job is being executed in local batch system
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell multicolumn="1" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Killing
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Communication with local batch system to terminate execution is in process
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell multicolumn="1" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Executed
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Job execution in local batch system has finished
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell multicolumn="1" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Finishing
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Stage-out process is going on
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Cancelled
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
There was a failure during execution
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="left" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
All
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Pending
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Job is prevented from going to the next state due to some internal limits;
 this sub-state appears in parallel with other sub-states
\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
All
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Held
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Job processing is suspended on client request; this sub-state appears in
 parallel with other sub-states
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Delegation Interface
\end_layout

\begin_layout Standard
ARC service interfaces optionally offer a sub-interface, called the Delegation
 Interface (see Appendix E).
 This is a common purpose interface to be used by ARC services which accept
 delegated credentials from clients.
 The Delegation Interface implements two operations: initiatialization of
 credentials delegation (DelegateCredentialsInit) and update/renewal of
 credentials (UpdateCredentials).
\end_layout

\begin_layout Itemize

\emph on
DelegateCredentialsInit
\emph default
 operation - this operation performs the first half of the credentials delegatio
n sequence.
\end_layout

\begin_deeper
\begin_layout Itemize
Input
\end_layout

\begin_deeper
\begin_layout Itemize
None.
 On this request the service generates a pair of 
\emph on
public
\emph default
 and private keys.
 The public key is then sent to the client in response.
\end_layout

\end_deeper
\begin_layout Itemize
Output(s)
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
TokenRequestType TokenRequest
\emph default
: Contains the public key generated by the service as a Value element.
 It also provides an identifier in the Id element which should be used to
 refer to the corresponding private key.
\end_layout

\end_deeper
\begin_layout Itemize
Fault(s)
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
UnsupportedFault
\emph default
: Indicates that the service does not support this operation despite supporting
 the port-type.
\end_layout

\begin_layout Itemize

\emph on
ProcessingFault
\emph default
: Internal problems during generation of the token.
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize

\emph on
UpdateCredentials
\emph default
 operation - this operation makes it possible to update the content of delegated
 credentials (like in the case of credentials being renewed) unrelated to
 other operations of the service.
\end_layout

\begin_deeper
\begin_layout Itemize
Input
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
DelegatedTokenType DelegatedToken
\emph default
: Contains an X509 proxy certificate based on the public key from the DelegateCr
edentialsInit signed by the user's proxy certificate.
 Also includes the Id element which identifies the private key stored at
 the service side associated with these credentials.
 The reference element refers to the object which these credentials should
 be applied to in a way specific to the service.
 The same element must also be used for delegating credentials as part of
 other operations on service.
\end_layout

\end_deeper
\begin_layout Itemize
Output(s)
\end_layout

\begin_deeper
\begin_layout Itemize
None.
\end_layout

\end_deeper
\begin_layout Itemize
Fault(s)
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
UnsupportedFault
\emph default
: Indicates that service does not support this operation despite supporting
 the port-type.
\end_layout

\begin_layout Itemize

\emph on
ProcessingFault
\emph default
: Internal problems during generation of the token.
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
Additionally, A-Rex Web Service Interface allows delegation to be performed
 as part of the 
\emph on
CreateActivity
\emph default
 operation of the BES-Factory port-type.
 For this it accepts the element
\emph on
 DelegatedCredentials
\emph default
 inside the 
\emph on
CreateActivity
\emph default
 element.
 The 
\emph on
Id
\emph default
 element of 
\emph on
DelegatedCredentials
\emph default
 must contain an identifier obtained in response to the previous 
\emph on
DelegateCredentialsInit
\emph default
 operation.
\end_layout

\begin_layout Subsubsection
Local Information Description Interface
\end_layout

\begin_layout Standard
The A-REX implements the Local Information Description Interface (LIDI)
 interface being common for all ARC services.
 This interface is based on OASIS Web Services Resource Properties specification
\begin_inset LatexCommand \cite{wsrf-rp}

\end_inset

.
 Information about resources and maintained activities/jobs are represented
 in a 
\emph on
WS-Resource Properties
\emph default
 informational XML document.
 The document type is defined in the A-Rex WSDL as a 
\emph on
ResourceInformationDocumentType
\emph default
.
 It contains the following elements/resources:
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
BESFactory
\emph default
 - collection of BES Factory attributes as defined in the BES specifications.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
Glue2Resource -
\emph default
 description of a computation resource that uses Glue2 schema.
 This one is going to be specified after the Glue2 XML bindings will be
 available.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
Activities -
\emph default
 list of maintained activities.
 Each activity contains an identifier (
\emph on
ActivityIdentifier
\emph default
), BES (
\emph on
ActivityDocument
\emph default
) and Glue2 (
\emph on
Glue2Job
\emph default
) descriptions of the activity.
\end_layout

\begin_layout Standard
All information can be accessed either through requests on particular resources
 or through XPath queries using WS-Resource Properties operations.
\end_layout

\begin_layout Subsubsection
Supported JSDL elements
\end_layout

\begin_layout Standard
A-REX supports the following elements from the JSDL version 1.0 specification
\begin_inset LatexCommand \cite{jsdl}

\end_inset

 including POSIX Applications extension:
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
JobName -
\emph default
 name of the job as assigned by the user.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
Executable
\emph default
\InsetSpace \space{}
(POSIX) - name of the executable file.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
Argument
\emph default
\InsetSpace \space{}
(POSIX) - arguments the executable will be launched with.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
DataStaging
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
Filename - name of the data file on the executing node.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
Source
\emph default
 - source where the file will be taken from before execution.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
Target -
\emph default
 destination the file will be delivered to after execution.
\end_layout

\end_deeper
\begin_layout List
\labelwidthstring 00.00.0000

\emph on
Input
\emph default
\InsetSpace \thinspace{}
\InsetSpace \space{}
(POSIX) - file to be used as standard input for the executable.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
Output
\emph default
\InsetSpace \space{}
(POSIX) - file to be used as standard output for the executable.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
Error
\emph default
\InsetSpace \space{}
(POSIX) - file to be used as standard error for the executable.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
MemoryLimit
\emph default
\InsetSpace \space{}
(POSIX) - amount of physical memory needed for execution.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
TotalPhysicalMemory
\emph default
 - same as MemoryLimit.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
IndividualPhysicalMemory
\emph default
 - same as MemoryLimit.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
CPUTimeLimit
\emph default
\InsetSpace \space{}
(POSIX) - maximal amount of CPU time needed for execution.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
TotalCPUTime
\emph default
 - same as CPUTimeLimit.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
IndividualCPUTime
\emph default
 - same as CPUTimeLimit.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
WallTimeLimit
\emph default
\InsetSpace \space{}
(POSIX) - amount of clock time needed for execution.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
TotalCPUCount -
\emph default
 number of CPUs needed for execution.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
IndividualCPUCount
\emph default
 - same as TotalCPUCount.
\end_layout

\begin_layout Subsubsection
ARC-specific JSDL Extensions
\end_layout

\begin_layout Standard
A-REX accepts JSDL documents having the following additional elements (see
 Appendix F):
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
IsExecutable -
\emph default
 marks file to become executable after being delivered to the computing
 resource.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
RunTimeEnvironment
\emph default
 - specifies the name of the Runtime Environment needed for job execution.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
Middleware
\emph default
 - request for specific middleware on the computing resource frontend.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
RemoteLogging -
\emph default
 destination for the usage record report of the executed job.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
LocalLogging
\emph default
 - name for the virtual directory available through job interface and containing
 various debug information about job execution.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
AccessControl
\emph default
 - ACL expression which describes the identities of those clients who are
 allowed to perform operations on this job.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
Notify
\emph default
 - Email destination for notification of job state changes.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
SessionLifeTime
\emph default
 - duration for the directory containing job-related files to exist after
 the job finished executing.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
JoinOutputs
\emph default
 - specifies if standard output and standard error channels must be merged.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
Reruns -
\emph default
 defines how many times a job is allowed to rerun in case of failure.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
CredentialServer -
\emph default
 URL of MyProxy service which may be used for renewing the expired delegated
 job credentials.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
CandidateTarget -
\emph default
 specifies host name and queue of a computing resource.
\end_layout

\begin_layout Section
Cache
\begin_inset LatexCommand \label{sec:cache}

\end_inset


\end_layout

\begin_layout Standard
The GM can cache input files.
 Caching is enabled if corresponding command is present in configuration
 file.
 The GM does not cache files marked as executable in job.
 Caching can also be explicitly turned off by user for each file by using
 
\shape italic
cache=no
\shape default
 option in URL (for URL options read 
\begin_inset Quotes eld
\end_inset

Protocols, Uniform Resource Locators (URL) and extensions supported in ARC
\begin_inset Quotes erd
\end_inset

 
\begin_inset LatexCommand \cite{urls}

\end_inset

).
 The disc space occupied by cache is controlled by removing unused files.
 For more information look in section 
\begin_inset LatexCommand \ref{SubSection: ConfigFile}

\end_inset

.
\end_layout

\begin_layout Subsection
Structure
\end_layout

\begin_layout Standard
Cache directory contains plain files.
 Those are
\end_layout

\begin_layout Itemize

\shape italic
list
\shape default
 - stores names of the files (8 digit numbers) and corresponding URLs delimited
 by blank space.
 Each pair is delimited by some amount of 
\backslash
0 codes.
 Also creation and expiration times are stored if available
\end_layout

\begin_layout Itemize

\shape italic
old
\shape default
 - stores URLs which have been removed from cache.
 Records are delimited by some amount of 
\backslash
0 codes and are meant to be removed by some external routine.
\end_layout

\begin_layout Itemize

\shape italic
new
\shape default
 - stores URLs which have been added to cache.
 Records are delimited by some amount of 
\backslash
0 codes and are removed when corresponding files are removed from cache.
 They can also be handled by some external routines.
 Every time record is added to 
\emph on
old
\emph default
 it is removed from 
\emph on
new
\emph default
.
\end_layout

\begin_layout Itemize

\shape italic
statistics
\shape default
 - consists of strings containing 
\emph on
name=value
\emph default
 .
 Following names are defined:
\end_layout

\begin_deeper
\begin_layout Itemize

\shape italic
hardsize
\shape default
 -size of file system for storing cached data
\end_layout

\begin_layout Itemize

\shape italic
hardfree
\shape default
 - amount of disc space available on that file system
\end_layout

\begin_layout Itemize

\shape italic
softsize
\shape default
 - if cache exceeds this size files are started being removed 
\end_layout

\begin_layout Itemize

\shape italic
softfree
\shape default
 - space left till softsize (can be negative)
\end_layout

\begin_layout Itemize

\shape italic
claimed
\shape default
 - space used by files claimed by running jobs
\end_layout

\begin_layout Itemize

\shape italic
unclaimed
\shape default
 - space used by files not being currently used by any job
\end_layout

\end_deeper
\begin_layout Itemize

\shape italic
########.info
\shape default
 - stores state of file (
\shape italic
########
\shape default
 stands for 8 digits).
 State is represented by one character:
\newline

\shape italic
c
\shape default
 - just created, content is empty.
\newline

\shape italic
f
\shape default
 - failed to download (treated same as 'c').
\newline

\shape italic
r
\shape default
 - ready to be used, content is valid.
\newline

\shape italic
d
\shape default
 - being downloaded.
 'd' is followed by identifier of application/job downloading that file.
 During content's download this file has write lock set.
\end_layout

\begin_layout Itemize

\shape italic
########.claim
\shape default
 - stores list of identifiers of applications/jobs using this file.
 Identifiers are stored one per line.
\end_layout

\begin_layout Itemize

\shape italic
########
\shape default
 - files storing content of corresponding URL.
 These can be stored in separate directory.
\end_layout

\begin_layout Standard
Files 
\shape italic
list, old , new
\shape default
 and 
\shape italic
########.info
\shape default
 has to be stored on filesystem which has support for files' locking.
\end_layout

\begin_layout Subsection
How it works
\end_layout

\begin_layout Standard
If job requests input file, which can/allowed to be cached, it is stored
 in cache directory instead and soft-link is created in the SD, pointing
 to that file.
 Or file can be stored in cache and then copied to the SD.
 Last option is more secure and hence advised.
\end_layout

\begin_layout Standard
Before downloading file the GM tries to determine it's size and to preallocate
 space in cache directory, by writing file of same size.
 If that fails (file system has no more space), it tries to remove oldest
 cache files, which are not being used by any job.
 That means 
\series bold
hard limit of cache size is space available at file-system
\series default
.
 In case cache gets full and it is impossible to free any space, download
 fails and is retried without using cache.
\end_layout

\begin_layout Standard
Before giving access to already cached file the GM contacts initial file
 source to check if user is allowed to do that if protocols allows to do
 that.
\end_layout

\begin_layout Standard
Also file creation or validity times are checked to make sure cached file
 is fresh enough.
 If it is impossible to obtain creation and invalidation times for file
 it is invalidated 24 hours after downloaded.
\end_layout

\begin_layout Standard
Also the GM checks cache periodically.
 If used space exceeds high water-mark given in configuration file (
\emph on
softsize
\emph default
) it tries to remove oldest unused files to reduce size to low water-mark.
 This sets soft limit of cache size.
\end_layout

\begin_layout Standard
There are 2 kinds of caches supported.
 Files in 
\shape italic
private
\shape default
 cache are owned by Unix user to which grid user is mapped.
 Those files are readable only by that particular Unix user.
 Another kind of cache is 
\shape italic
shared
\shape default
.
 Files are owned by Unix user who started GM and are readable by everyone.
\end_layout

\begin_layout Section
Files and directories
\begin_inset LatexCommand \label{sec:files and directories}

\end_inset


\end_layout

\begin_layout Subsection
Modules
\end_layout

\begin_layout Standard
The GM consists of few separate executable modules.
 Those are:
\end_layout

\begin_layout Itemize

\shape italic
grid-manager
\shape default
 - Main module.
 It is responsible for processing the job, moving it through states, running
 other modules.
\end_layout

\begin_layout Itemize

\shape italic
downloader
\shape default
 - This is a module responsible for gathering input files in the SD.
 It processes the 
\shape italic
job.ID.input
\shape default
 file and updates it.
\end_layout

\begin_layout Itemize

\shape italic
uploader
\shape default
 - This module is responsible for delivering output files to the specified
 SEs and registration at the RC.
 It processes and updates the 
\shape italic
job.ID.output
\shape default
 file.
\end_layout

\begin_layout Itemize

\emph on
cache-register
\emph default
 - Utility to register cached data into Indexing Services like RC and RLS.
 It reads and modifies cache informational files 
\emph on
old
\emph default
 and 
\emph on
new
\emph default
 
\begin_inset LatexCommand \ref{sec:cache}

\end_inset

.
 Configuration is read directly from the GM's configuration file 
\begin_inset LatexCommand \ref{SubSection: ConfigFile}

\end_inset

.
 It is run by the GM every 5 minutes.
\end_layout

\begin_layout Itemize

\emph on
frontend-info-collector
\emph default
 - Utility to gather information about frontend and to put it into 
\emph on
job.ID.diag
\emph default
 file.
\end_layout

\begin_layout Itemize

\emph on
gm-kick
\emph default
 - Sends signal to the GM though FIFO file to wake it up.
 It's used to increase responsiveness of GM.
\end_layout

\begin_layout Standard
Following modules are always run under Unix account to which user is mapped.
\end_layout

\begin_layout Itemize

\shape italic
smtp-send.sh
\shape default
 and 
\shape italic
smtp-send
\shape default
 - These are the modules responsible for sending e-mail notifications to
 the user.
 The format of the mail messages can be easily changed by editing the simple
 shell script 
\shape italic
smtp-send.sh
\shape default
.
 
\end_layout

\begin_layout Itemize

\shape italic
submit-*-job
\shape default
 - Here * stands for the name of the LRMS.
 Curently supported LRMS are PBS/Torque, Condor and SGE.
 Also 
\emph on
fork
\emph default
 pseudo-LRMS is supported for testing purposes.
 This module is responsible for the job submission to the LRMS.
\end_layout

\begin_layout Itemize

\shape italic
cancel-*-job
\shape default
 - This one is for canceling the job, which was submitted to LRMS.
\end_layout

\begin_layout Itemize

\shape italic
scan-*-job
\shape default
 -This shell script is responsible for notifying the GM about completion
 of the job.
 It's implementation for PBS system uses server logs to extract information
 about jobs.
 If logs are not available it uses less reliable 
\emph on
qstat
\emph default
 command for that.
 other backends use different techniques.
\end_layout

\begin_layout Standard
Also there is administrator utility:
\end_layout

\begin_layout Itemize

\shape italic
gm-jobs
\shape default
 - prints list of jobs available on cluster and amount of jobs in every
 state.
\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{0.5cm}
\end_layout

\end_inset

gm-jobs [-h] [-l] [-u uid] [-U name]
\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{0.5cm}-l
\end_layout

\end_inset

-l - print more information about each job,
\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{0.5cm}-l
\end_layout

\end_inset

-u - pretend utility is run by user with id 
\emph on
uid
\emph default
,
\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{0.5cm}-l
\end_layout

\end_inset

-l - pretend utility is run by user with name 
\emph on
name
\emph default
.
\end_layout

\begin_layout Standard
GM comes with plugins useable for various authorization purposes (see for
 example description of 
\emph on
authplugin
\emph default
 command below):
\end_layout

\begin_layout Itemize

\shape italic
inputcheck
\shape default
 - checks if all input files specified in job description are downloadable.
\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{0.5cm}
\end_layout

\end_inset

inputcheck [-h] [-d debug_level] RSL_fle [proxy_file]
\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{0.5cm}-l
\end_layout

\end_inset

RSL_file -file with job description,
\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{0.5cm}-l
\end_layout

\end_inset

proxy_file - credentials proxy.
\end_layout

\begin_layout Itemize

\shape italic
lcas
\shape default
 - executes LCAS plugins on credentials and returns 0 if authorization passed.
\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{0.5cm}
\end_layout

\end_inset

 lcas credentials description [library [db [directory]]]
\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{0.5cm}-l
\end_layout

\end_inset

credentials - path to file with credentials to authorize,
\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{0.5cm}-l
\end_layout

\end_inset

description - path to file with job description,
\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{0.5cm}-l
\end_layout

\end_inset

library - path to LCAS library (full or relative to LCAS directory),
\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{0.5cm}-l
\end_layout

\end_inset

db - path to LCAS DB file (full or relative to LCAS directory),
\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{0.5cm}-l
\end_layout

\end_inset

directory - LCAS directory.
\end_layout

\begin_layout Subsection
Directories
\end_layout

\begin_layout Standard
The GM is installed into a single installation point referred as $NORDUGRID_LOCA
TION and following sub-directories are used:
\end_layout

\begin_layout Standard
\leftindent 1cm
$NORDUGRID_LOCATION/bin - tools
\end_layout

\begin_layout Standard
\leftindent 1cm
$NORDUGRID_LOCATION/libexec - program modules used by GM
\end_layout

\begin_layout Standard
\leftindent 1cm
$NORDUGRID_LOCATION/etc - configuration files, deprecated, central configuration
 file is used by deault
\end_layout

\begin_layout Standard
\leftindent 1cm
$NORDUGRID_LOCATION/sbin - daemons
\end_layout

\begin_layout Standard
\leftindent 1cm
$NORDUGRID_LOCATION/lib - gridftp server's plugins and API libraries
\end_layout

\begin_layout Standard
\leftindent 1cm
The GM also uses following directories:
\end_layout

\begin_layout Itemize

\shape italic
session root directory
\shape default
 - In this directory the SD is created.
 It can be multiple directories for the various users specified in the configura
tion file.
\newline
There are 2 processes which need to have a permissions to create
 new files and directories in it.
 Those are GM and GFS.
 
\newline
If any of those processes processes are run under dedicated user account,
 that account need full permissions in the 
\shape italic
session root directory
\shape default
.
\newline
If those processes are run under 
\emph on
root
\emph default
 account make sure 
\shape italic
session root directory
\shape default
 is not on filesystem which limits capabilities of 
\emph on
root
\emph default
 user.
 For example NFS with 
\emph on
root_squash
\emph default
 option.
\newline
If there is need to run processes under 
\emph on
root
\emph default
 account (to run jobs in LRMS under different users' accounts) but there
 is no way to provide suitable 
\shape italic
session root directory
\shape default
 use 
\emph on
norootpower
\emph default
 command in configuration of the GM.
 In that case GM and GFS will use identity of local user to which Grid identity
 is mapped to access 
\shape italic
session root directory
\shape default
.
 Hence those users will need full access there.
\newline
The GM creates SD with proper
 ownership and permissions for local identity used to run job.
 Some filesystems require 
\emph on
executable
\emph default
 permissions on 
\shape italic
session root directory
\shape default
 to be set for local identity in order to access any file or subdirectory
 there.
\newline
This directory should also be shared among cluster nodes in order
 for job to access input files.
 Or internal means of LRMS must be used to transfer files to executing node.
 For more see section 
\begin_inset LatexCommand \ref{sub:LRMS}

\end_inset

.
\end_layout

\begin_layout Itemize

\shape italic
control directory
\shape default
 - In this directory the SD stores an information about the accepted jobs.
 Both GM and GFS processes must have full permissions there.
\newline
Also subdirectory
 called 
\shape italic
log
\shape default
 is created there.
 It is used to accumulate information about started and finished jobs.
 This information is periodically sent to the 
\emph on
logger service
\emph default
.
\end_layout

\begin_layout Section
Configuration
\end_layout

\begin_layout Subsection
\begin_inset LatexCommand \label{SubSection: ConfigFile}

\end_inset

Configuration of the Grid Manager
\end_layout

\begin_layout Standard
The GM configuration is done through single configuration file.
 Historically GM supports 2 kinds of configuration files.
 For old one it looks at following places:
\end_layout

\begin_layout Itemize

\shape italic
$NORDUGRID_LOCATION/etc/grid-manager.conf
\end_layout

\begin_layout Itemize

\shape italic
/etc/grid-manager.conf
\end_layout

\begin_layout Standard
And for new one in 
\end_layout

\begin_layout Itemize

\shape italic
/etc/arc.conf
\end_layout

\begin_layout Standard
The old configuration file consists of empty lines, lines containing comment
 (line starts from #) or configuration commands.
 Blank spaces in arguments must be escaped using '
\backslash
' or arguments must be enclosed in '"'.
 Command line starts from command followed by arguments separated from command
 and between them by spaces.
\end_layout

\begin_layout Standard
The new configuration file can also contain empty lines and comments starting
 from #.
 It is separated into sections.
 Each sections starts from string containing
\emph on
 
\end_layout

\begin_layout Itemize

\emph on
[section name/subsection name/subsubsection name]
\emph default
.
 
\end_layout

\begin_layout Standard
Each section continues till next section of end of file.
 One configuration file can have commands for multiple services/modules/programs.
 Each service get it's own section named after it.
 The GM uses section 
\emph on
[grid-manager]
\emph default
.
 Some services can make use of multiple subsections to reflect their internal
 modular structure.
 Commands in section 
\emph on
[common]
\emph default
 apply to all services.
 Command lines have format 
\end_layout

\begin_layout Itemize

\emph on
name=
\begin_inset Quotes erd
\end_inset

arguments string
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
Names are same as in old configuration file.
 The 
\emph on
argument string
\emph default
 consists of same arguments as in old format.
 And they must obey same rules.
\end_layout

\begin_layout Standard
Both files support almost same commands.
 Following commands are defined (examples are given for new format):
\end_layout

\begin_layout Standard
\noindent
Global commads (those which affect global parameters of the GM and affect
 all serviced users, also described in 
\begin_inset LatexCommand \cite{config}

\end_inset

):
\end_layout

\begin_layout Itemize

\series bold
\shape italic
daemon
\series default
=yes|no
\shape default
 - specifies whether the GM should go to background after started.
 Defaults to 
\emph on
yes
\emph default
.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
logfile
\series default
=[path]
\shape default
 - specifies name of file for logging debug/informational output.
 Defaults to 
\emph on
/dev/null
\emph default
 for daemon mode and 
\emph on
stderr
\emph default
 for foreground mode.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
user
\series default
=[uid[:gid]]
\shape default
 - specifies user id (and optionally group id) to which the GM must switch
 after reading configuration.
 Defaults to 
\emph on
not switch
\emph default
.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
pidfile
\series default
=[path]
\shape default
 - specifies file where id if GM process will be stored.
 Defaults to 
\emph on
not write
\emph default
.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
debug
\series default
=number
\shape default
 - specifies level of debug information.
 More information is printed for higher levels.
 Currently highest effective number is 3 and lowest 0.
 Defaults to 2.
\end_layout

\begin_layout Standard
All commands above are generic for every daemon-enabled server in ARC NorduGrid
 toolkit (like GFS and HTTPSD).
\end_layout

\begin_layout Itemize

\series bold
\shape italic
joblog
\series default
=[path]
\shape default
 - specifies where to store log file containing information about started
 and finished jobs.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
jobreport
\series default
=[URL ...
 number]
\shape default
 - specifies that GM has to report information about jobs being processed
 (started, finished) to centralized service running at given 
\shape italic
URL
\shape default
.
 Multiple entries and multiple URLs are allowed.
 
\shape italic
number
\shape default
 specifies how long old records have to be kept if failed to be reported.
 That time is in days.
 Last specified value becomes effective.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
securetransfer
\series default
=yes|no
\shape default
 - specifies whether to use encryption while transferring data.
 Currently works for GridFTP only.
 Default is no.
 It is overridden by value specified in URL options.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
localtransfer
\series default
=yes|no
\shape default
 - specifies whether to pass file downloading/uploading task to computing
 node.
 If set to yes the GM won't download/upload files.
 Instead it composes script submitted to LRMS in way to make it do that.
 This requires installation of GM and Globus to be accessible from computing
 nodes and environment variables GLOBUS_LOCATION and NORDUGRID_LOCATION
 to be set accordingly.
 Default is no.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
maxjobs
\series default
=[max_processed_jobs [max_running_jobs]]
\shape default
 - specifies maximum number of jobs being processed by the GM at different
 stages:
\newline

\shape italic
max_processed_jobs
\shape default
 - maximal amount of jobs being processed by GM.
 This does not limit amount of jobs, which can be suNOTE:bmitted to cluster
\newline

\shape italic
max_running jobs
\shape default
 - maximal amount of jobs passed to Local Resource Management System
\newline
Missing
 value or -1 means no limit.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
maxlod
\series default
=[max_frontend_jobs [emergency_frontend_jobs [max_transferred_files]]]
\shape default
 - specifies maximum load caused by jobs being processed on frontend:
\newline

\shape italic
max_frontend_jobs
\shape default
 - maximal amount of jobs heavily using resources of frontend (applied before
 moving job to PREPARING and FINISHING states)
\shape italic

\newline
emergency_frontend_jobs
\shape default
 - if limit of 
\shape italic
max_frontend_jobs
\shape default
 is used only by PREPARING or by FINISHING jobs aforementioned number of
 jobs can be moved to another state .This is used to avoid case then jobs
 can't finish due to big amount of recently submitted jobs.
\shape italic

\newline
max_transfered_files
\shape default
 - maximal number of files being transfered in parallel by every job.
 Used to decrease load on not so powerful frontends.
\newline
Missing value or -1 means
 no limit.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
wakeupperiod
\series default
=time
\shape default
 - specifies how often for external changes are performed (like new arrived
 job, job finished in LRMS, etc.).
 
\shape italic
time
\shape default
 is a minimal time period specified in seconds.
 Default is 3 minutes.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
cacheregistration
\series default
=yes|no
\shape default
 - enables or disables registration of cache data into Indexing Services
 like RC or RLS.
 The default is 
\emph on
no
\emph default
.
 Only files dowmloaded through 
\emph on
meta-url
\emph default
 are registred.
 Registration is done to same service used for obtaining information about
 file.
 For this opeartion credentials of the GM (host key and certificate) are
 used.
 If required new files storage location is registered at Indexing Service
 with quasi-url 
\emph on
cache://hostname/
\emph default
 and name 
\emph on
hostname:cache
\emph default
 .
\end_layout

\begin_layout Itemize

\series bold
\shape italic
authplugin
\series default
=state options plugin
\shape default
 - specifies 
\emph on
plugin
\emph default
 (external executable) to be run every time job is going to switch to 
\emph on
state
\emph default
.
 Following states are allowed: ACCEPTED, PREPARING, SUBMIT, FINISHING, FINISHED
 and DELETED.
 If exit code is not 0 job is canceled by default.
 
\shape italic
Options
\shape default
 consist of 
\shape italic
name
\shape default
=
\shape italic
value
\shape default
 pairs separated by a comma.
 Following 
\shape italic
name
\shape default
s are supported:
\newline

\shape italic
timeout
\shape default
 - specifies how long in seconds execution of the plugin allowed to last
 (mandatory, 
\begin_inset Quotes eld
\end_inset


\shape italic
timeout=
\shape default

\begin_inset Quotes eld
\end_inset

 can be skipped for backward compatibility).
\newline

\shape italic
onsuccess
\shape default
, 
\shape italic
onfailure
\shape default
 and 
\shape italic
ontimeout
\shape default
 - defines action taken in each case (
\shape italic
onsuccess
\shape default
 happens if exit code is 0).
 Possible actions are:
\newline

\shape italic
pass
\shape default
 - continue execution,
\newline

\shape italic
log
\shape default
 - write information about result into logfile and continue execution,
\newline

\shape italic
fail
\shape default
 - write information about result into logfile and cancel job.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
localcred
\series default
=timeout plugin
\shape default
 - specifies 
\emph on
plugin
\emph default
 (external executable or function in shared library) to be run every time
 job has to do something on behalf of local user.
 Execution of 
\emph on
plugin
\emph default
 may not last longer than 
\emph on
timeout
\emph default
 seconds.
 If 
\emph on
plugin
\emph default
 looks like 
\emph on
function@path
\emph default
 then function 
\emph on
int function(char*,char*,char*,...)
\emph default
 from shared library 
\emph on
path
\emph default
 is called (
\emph on
timeout
\emph default
 is not functional in that case).
 If exit code is not 0 current operation will fail.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
norootpower
\series default
=yes/no
\shape default
 - if set to yes all processes involved in job management will use local
 identity of a user to which Grid identity is mapped in order to access
 filesystem at path specified in 
\series bold
\shape italic
session
\series default
\shape default
 command (see below).
 Sometimes this may involve running temporary external process.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
allowsubmit
\series default
=[group ...]
\shape default
 - list of authorization groups of users allowed to submit new jobs while
 "allownew=no" is active in 
\emph on
jobplugin.so
\emph default
 configuration (see below in section 
\begin_inset LatexCommand \ref{subsec: configfile of the gfs}

\end_inset

).
 Multiple commands are allowed.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
speedcontrol
\series default
=min_speed min_time min_average_speed max_inactivity
\shape default
 - specifies how long/slow data fransfer is allowed to take place.
 Transfer is canceled if transfer rate (bytes per second) is lower than
 
\emph on
min_speed
\emph default
 for at least 
\emph on
min_time
\emph default
 seconds, or if average rate is lower than 
\emph on
min_average_speed
\emph default
, or no data is receved for longer than 
\shape italic
max_inactivity
\shape default
 seconds.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
copyurl
\series default
=template replacement
\shape default
 - specifies that URLs, starting from template should be accessed in a different
 way (most probably Unix open).
 The 
\shape italic
template
\shape default
 part of the URL will be replaced with 
\shape italic
replacement.

\shape default
 
\shape italic
replacement
\shape default
 can be either URL or local path starting from '/'.
 It is advisable to end template with '/'.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
linkurl
\series default
=template replacement [node_path]
\shape default
 - mostly identical to 
\shape italic
copyurl
\shape default
 but file won't be copied.
 Instead soft-link will be created.
 
\shape italic
replacement
\shape default
 specifies the way to access the file from the frontend, and is used to
 check permissions.
 The 
\shape italic
node_path
\shape default
 specifies how the file can be accessed from computing nodes, and will be
 used for soft-link creation.
 If 
\shape italic
node_path
\shape default
 is missing - 
\shape italic
local_path
\shape default
 will be used instead.
 Both 
\shape italic
node_path
\shape default
 and 
\shape italic
replacement
\shape default
 should not be URLs.
\end_layout

\begin_deeper
\begin_layout Standard
NOTE: URLs which fit into 
\shape italic
copyurl
\shape default
 or 
\shape italic
linkurl
\shape default
 are treated as more easily accessible than other URLs.
 That means if GM has to choose between few URLs from which should it download
 input file, these will be tried first.
\end_layout

\end_deeper
\begin_layout Standard
\noindent
Per UNIX user commands:
\end_layout

\begin_layout Itemize

\series bold
\shape italic
mail
\series default
=e-mail_address
\shape default
 - specifies an email address 
\series bold
from
\series default
 which the notification mails are sent.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
defaultttl
\series default
=ttl [ttr]
\shape default
 - specifies the time in seconds for the SD to be available after job finished
 (
\emph on
ttl
\emph default
) and after job was deleted (
\emph on
ttr
\emph default
) due to 
\emph on
ttl
\emph default
.
 Defaults are 7days for 
\emph on
ttl
\emph default
 and 30 days for 
\emph on
ttr
\emph default
.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
defaultlrms
\series default
=default_lrms_name default_queue_name
\shape default
 - specifies names for the LRMS and queue.
 Queue name can also be specified in the JD (currently it is not allowed
 to override used LRMS by using JD).
 In new configuration file this command is called 
\series bold
\shape italic
lrms
\series default
\shape default
.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
session
\series default
=path
\shape default
 - specifies path to the directory in which the SD is created.
 If the path is * the default one is used - 
\shape italic
$HOME/.jobs
\shape default
 .
 In new configuration file this command is called 
\series bold
\shape italic
sessiondir
\series default
\shape default
.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
cache
\series default
dir=path [link_path]
\shape default
 - specifies the directory to store cached data.
 Empty 
\emph on
path
\emph default
 disables caching.
 Default is not to cache data.
 Optional 
\shape italic
link_path
\shape default
 specifies the path at which cache is accessible at computing nodes.
 If 
\shape italic
link_path
\shape default
 is set to '.' files are not soft-linked, but copied to session directory.
 In old configuration file this command is called 
\series bold
\shape italic
cache
\series default
\shape default
.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
privatecache
\series default
=path [link_path]
\shape default
 - same as 
\shape italic
cache
\shape default
 command, but cache belongs (owned) to user.
 For shared caches use 'cache'.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
cachedata
\series default
=path
\shape default
 - allows to specify separate place to store cache files containing data
 itself.
 This can be useful in case of big data storage available only on NSF server
 which does not support file locking.
 If command or 
\shape italic
path
\shape default
 is missing - default is to store data at place specified in 
\shape italic
cache
\shape default
 or 
\shape italic
privatecache
\shape default
 command, together with control files.
 
\end_layout

\begin_layout Itemize

\series bold
\shape italic
cachesize
\series default
=high_mark [low_mark]
\shape default
 - specifies high and low water-mark for space used by cache.
 Values are specified in bytes.
 Both 
\shape italic
high_mark
\shape default
 and 
\shape italic
low_mark
\shape default
 can be negative values.
 In that case corresponding positive value means space left on filesystem.
 If 
\shape italic
low_mark
\shape default
 is omitted it becomes equal to 
\shape italic
high_mark
\shape default
.
 By default this feature is turned off.
 To turn it off explicitly 
\shape italic
cachesize
\shape default
 without parameters should be specified.
 If turned off cache will grow up till it fills whole file system.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
maxrerun
\series default
=number
\shape default
 - specifies maximal number of times job will be allowed to rerun after
 it failed in LRMS.
 Default value is 2.
 This only specifies a upper limit.
 Actual number is provided in job description and defaults to 0.
\end_layout

\begin_layout Standard
All per-user commands should be put before 
\shape italic
control
\shape default
 command which initiates serviced user.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
control
\series default
=path username [username [...]]
\shape default
 - This option initiates UNIX user as being serviced by the GM.
 
\shape italic
path
\shape default
 refers to the control directory (see section 
\begin_inset LatexCommand \ref{section: internals}

\end_inset

 for the description of control directory).
 If the path is * the default one is used - $HOME/.jobstatus .
 
\shape italic
username
\shape default
 stands for UNIX name of the local user.
 Multiple names can be specified.
 If the name is * it is substituted by all names found in file /etc/grid-securit
y/grid-mapfile (for the format of this file one should study the Globus
 project 
\begin_inset LatexCommand \cite{globus}

\end_inset

).
\newline
Also the special name '.'(dot) can be used.
 Corresponding control directory will be used for 
\series bold
any
\series default
 user.
 This option should be the last one in the configuration file.
 In new configuration file command 
\series bold
\shape italic
controldir
\series default
=path
\shape default
 is also available.
 It uses special username '.' and is always executed last independent of
 placement in file.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
helper
\series default
=username command [argument [argument [...]]]
\shape default
 - associates external program with the local UNIX user.
 This program will be kept running under account of the specified user.
 
\shape italic
username
\shape default
 stands for the name of the user.
 Special names can be used: '*' - all names from /etc/grid-security/grid-mapfile
, '.' - root user.
 The user should be already configured with 
\shape italic
control
\shape default
 option (except root, who is always configured).
 
\shape italic
command
\shape default
 is an executable and 
\shape italic
argument
\shape default
s are passed as arguments to it.
\end_layout

\begin_layout Standard
Following are global commands supported only in new configuration file.
 Most of them are specific to underlying LRMS (PBS in this case) and are
 passed in environment variables if old configuration file is used.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
pbs_bin_path
\series default
=path
\shape default
 - path to directory which contains PBS commands.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
pbs_log_path
\series default
=path
\shape default
 - path to directory with PBS server's log files.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
gnu_time
\series default
=path
\shape default
 - path to 
\emph on
time
\emph default
 utility.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
tmpdir
\series default
=path
\shape default
 - path to directory for temporary files.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
runtimedir
\series default
=path
\shape default
 - path to directory which contains 
\emph on
runtimenvironment
\emph default
 scripts.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
shared_filesystem
\series default
=yes|no
\shape default
 - if compiting nodes have an access to session directory through a shared
 filesystem like NFS.
 Corresponds to an environement variable RUNTIME_NODE_SEES_FRONTEND.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
nodename
\series default
=command
\shape default
 - command to obtain hostname of computing node.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
scratchdir
\series default
=path
\shape default
 - path on computing node where to move session directory before execution.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
shared_scratch
\series default
=path
\shape default
 - path on frontend where 
\series bold
\shape italic
scratchdir
\series default
\shape default
 can be found.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
nodename
\series default
=command
\shape default
 - command to obtain hostname of computing node.
\end_layout

\begin_layout Standard
In the command arguments (paths, executables, ...) following substitutions
 can be used:
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
%R - session root - see command 
\emph on
session
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
%C - control dir - see command 
\emph on
control
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
%U - username
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
%u - userid - numerical
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
%g - groupid - numerical
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
%H - home dir - home specified in /etc/passwd
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
%Q - default queue - look command 'defaultlrms'
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
%L - default lrms - look command 'defaultlrms'
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
%W - installation path - ${NORDUGRID_LOCATION}
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
%G - globus path - ${GLOBUS_LOCATION}
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
%c - list of all control directories
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
%I - job's ID (for plugins only, substituted in runtime)
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
%S - job's state (for 
\emph on
authplugin
\emph default
 plugins only, substituted in runtime)
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
%O - reason (for 
\emph on
localcred
\emph default
 plugins only, substituted in runtime).
\newline
Possible reasons are:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000
new - new job, new credentials
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
renew - old job, new credentials
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
write - write/delete file, create/delete directory (through gridftp)
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
read - read file, directory, etc.
 (through gridftp)
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
extern - call external program (grid-manager)
\end_layout

\end_deeper
\begin_layout Standard
Some configuration parameters can be specified from command line while starting
 the GM:
\end_layout

\begin_layout Standard

\emph on
grid-manager [-h] [-C level] [-d level] [-c path] [-F] [-U uid[:gid]] [-L
 path] [-P path]
\emph default

\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{0.5cm}
\end_layout

\end_inset


\emph on
-h
\emph default
 - short help,
\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{0.5cm}
\end_layout

\end_inset


\emph on
-d
\emph default
 - debug level,
\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{0.5cm}
\end_layout

\end_inset


\emph on
-L
\emph default
 - name log file (overwrites value in configuration file),
\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{0.5cm}
\end_layout

\end_inset


\emph on
-P
\emph default
 - name for file containing process id (overwrites value in configuration
 file),
\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{0.5cm}
\end_layout

\end_inset


\emph on
-U
\emph default
 - user and gropu id to use for running daemon,
\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{0.5cm}
\end_layout

\end_inset


\emph on
-F
\emph default
 - do not make process daemon,
\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{0.5cm}
\end_layout

\end_inset


\emph on
-c
\emph default
 - name od configuration file,
\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{0.5cm}
\end_layout

\end_inset


\emph on
-C
\emph default
 - remove old information before starting: 1- remove finished jobs, 2 -
 remove active jobs too, 3- also remove everything that looks like junk.
\newline

\end_layout

\begin_layout Subsection
\begin_inset LatexCommand \label{subsec: configfile of the gfs}

\end_inset

Configuration of the GridFTP Server
\end_layout

\begin_layout Standard
Default location of the GFS configuration file is 
\shape italic
/etc/arc.conf
\shape default
 or 
\shape italic
$NORDUGRID_LOCATION/etc/gridftpd.conf
\shape default
.
 Format of these configuration files is similar to that of the GM.
 It also supports generic commands described at the beginning of previous
 section 
\begin_inset LatexCommand \ref{SubSection: ConfigFile}

\end_inset

.
 In the new format sections [common] and [gridftpd] are used.
 Commands specific to the GFS are described below.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
port
\series default
=number
\shape default
 - specifies TCP/IP port number.
 Default is 2811.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
include
\series default
=path
\shape default
 - include contents of another file.
 Generic commands can't be specified there.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
encryption
\series default
=yes|no
\shape default
 - specifies if server will allow data transfer to be encrypted.
 Default is yes.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
pluginpath
\series default
=path
\shape default
 - specifies the path where plugin libraries are installed
\end_layout

\begin_layout Itemize

\series bold
\shape italic
allowunknown
\series default
=yes|no
\shape default
 - if set to 
\emph on
yes
\emph default
 clients are not checked agains grid-mapfile.
 Hence only access rules specified in this configuration file will be applied.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
firewall
\series default
=hostname
\shape default
 - use IP address of the 
\shape italic
hostname
\shape default
 in response to PASV command instead of IP address of a network interface
 of computer.
 You can write IP address directly instead of 
\shape italic
hostname
\shape default
.
 This command may be if server is situated behind NAT.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
unixgroup
\series default
=group rule
\shape default
 - define local UNIX user and optionally UNIX group to which user belonging
 to specified authorization
\shape italic
 group
\shape default
 is mapped (see Section 
\begin_inset LatexCommand \ref{sub:Authorization}

\end_inset

 for definition of group).
 Local names are obtained from specified 
\shape italic
rule
\shape default
.
 If specified rule could not produce any mapping, next command is used.
 Mapping stops at first matched rule.
 Following rules are supported:
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
\shape italic
mapfile
\series default
 file
\shape default
 - user's subject is matched against list of subjects stored inspecified
 file, one per line followed by local UNIX name.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
simplepool
\series default
 directory
\shape default
 - user is assigned one of local UNIX names stored in a file 
\shape italic
directory/pool
\shape default
, one per line.
 Used names are stored in other files placed in the same 
\shape italic
directory
\shape default
.
 If UNIX name was not used for 10 days, it may be reassigned to another
 user.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
lcmaps
\series default
 library directory database
\shape default
 - call LCMAPS functions to do mapping.
 Here 
\shape italic
library
\shape default
 is path to shared library of LCMAPS, either absolute or relative to 
\shape italic
directory
\shape default
; 
\shape italic
directory
\shape default
 is path to LCMAPS installation directory, equivalent of LCMAPS_DIR variable;
 
\shape italic
database
\shape default
 is path to LCMAPS database, equivalent to LCMAPS_DB_FILE variable.
 Each arguments except 
\shape italic
library
\shape default
 is optional and may be either skiped or replaced with '*'.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
mapplugin
\series default
\shape default
 
\shape italic
timeout plugin
\shape default
 [
\shape italic
arg1
\shape default
 [
\shape italic
arg2
\shape default
 [...]]] - run external 
\emph on
plugin
\emph default
 executable with specified arguments.
 Execution of 
\emph on
plugin
\emph default
 may not last longer than 
\emph on
timeout
\emph default
 seconds.
 Rule matches if exit code is 0 and there is UNIX name printed on 
\emph on
stdout
\emph default
.
 Name may be optionaly followed by UNIX group separated by ':'.
 In arguments following substitions are applied before plugin is started:
\end_layout

\begin_deeper
\begin_layout Itemize
%D - subject of users's cerificate,
\end_layout

\begin_layout Itemize
%P - name of credentials' proxy file.
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize

\series bold
\shape italic
unixvo
\series default
=vo rule
\shape default
 - same as 
\series bold
\shape italic
unixgroup
\series default
\shape default
 for users belonging to Virtual Organization (VO) 
\shape italic
vo
\shape default
.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
unixmap
\series default
=[unixname][:unixgroup] rule
\shape default
 - define local UNIX user and optionally group used to represent connected
 client.
 
\shape italic
rule
\shape default
 is one of those allowed for 
\series bold
\shape italic
authorization groups
\series default
\shape default
 (see Section 
\begin_inset LatexCommand \ref{sub:Authorization}

\end_inset

) and for 
\series bold
\shape italic
unixgroup
\series default
\shape default
/
\series bold
\shape italic
unixvo
\series default
\shape default
.
 In case of mapping rule username is one, provided by rule.
 Otherwise specified 
\shape italic
unixname:unixgroup
\shape default
 is taken.
 Both 
\shape italic
unixname
\shape default
 and 
\shape italic
unixgroup
\shape default
 may be either omited or set to '*' to specify missing value.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
groupcfg
\series default
=name
\shape default
 - is put into subsections representnig plugin or [group] section and defines
 if that section is effective.
 In old format it selects the group to which all following lines apply.
 Only unaffected option is 
\series bold
\shape italic
groupcfg
\series default
\shape default
.
 If name is empty (or no groupcfg is used at all) following lines apply
 to all users.
\end_layout

\begin_layout Standard
Subsections of 
\emph on
gridftpd
\emph default
 section specifies plugins which serve virtual FTP path (similar to mount
 command of UNIX).
 Name of subsection is irrelevant.
 In old format this section starts with command 
\series bold
\shape italic
plugin
\series default
 path library_name
\shape default
 and ends with keyword 
\series bold
\shape italic
end
\series default
\shape default
.
 Inside subsection following commands are supported
\end_layout

\begin_layout Itemize

\series bold
\shape italic
plugin
\series default
=library_name
\shape default
 - use plugin 
\shape italic
library_name
\shape default
 to serve virtual path.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
path
\series default
=path
\shape default
 - virtual path to serve.
\end_layout

\begin_deeper
\begin_layout Standard
GFS comes with 3 plugins: 
\shape italic
filepligin.so, gaclplugin.so
\shape default
 and 
\shape italic
jobplugin.so
\shape default
.
\end_layout

\begin_layout Itemize

\shape italic
jobplugin.so
\shape default
 does not require any specific options in case of old configuration format.
 It reads the configuration file of the GM located at the standard place
 as specified in the section 
\begin_inset LatexCommand \ref{SubSection: ConfigFile}

\end_inset

.
 Following options are supported:
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
\shape italic
configfile
\series default
=path
\shape default
 - defines non-standard place for GM's configuration file,
\end_layout

\begin_layout Itemize

\series bold
\shape italic
allownew
\series default
=yes|no
\shape default
 - specifies if new jobs can be submitted.
 Default is 
\emph on
yes
\emph default
.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
unixgroup
\series default
\shape default
/
\series bold
\shape italic
unixvo
\series default
\shape default
/
\series bold
\shape italic
unixmap
\series default
\shape default
 - same options like in top-level GFS configuration.
 If mapping succeeds obtained local user will be used to run submitted job.
\end_layout

\end_deeper
\begin_layout Itemize

\shape italic
filepligin.so
\shape default
 supports following options:
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
\shape italic
mount
\series default
=path
\shape default
 - defines the place on local filesystem to which file access operations
 apply
\end_layout

\begin_layout Itemize

\series bold
\shape italic
dir
\series default
=path options
\shape default
 - specifies access rules for accessing files in 
\shape italic
path
\shape default
 (relative to virtual and real path) and all the files below.
 
\newline

\shape italic
options
\shape default
 is the list of the following keywords:
\end_layout

\begin_deeper
\begin_layout Itemize

\series bold
\shape italic
nouser
\series default
\shape default
 - do not use local file system rights, only use those specifies in this
 line
\end_layout

\begin_layout Itemize

\series bold
\shape italic
owner
\series default
\shape default
 - check only file owner access rights
\end_layout

\begin_layout Itemize

\series bold
\shape italic
group
\series default
\shape default
 - check only group access rights
\end_layout

\begin_layout Itemize

\series bold
\shape italic
other
\series default
\shape default
 - check only "others" access rights
\end_layout

\begin_layout Standard
The options above are exclusive.
 If none of the above specified usual Unix access rights are applied.
\end_layout

\begin_layout Itemize

\series bold
\shape italic
read
\series default
\shape default
 - allow reading files
\end_layout

\begin_layout Itemize

\series bold
\shape italic
delete
\series default
\shape default
 - allow deleting files
\end_layout

\begin_layout Itemize

\series bold
\shape italic
append
\series default
\shape default
 - allow appending files (does not allow creation)
\end_layout

\begin_layout Itemize

\series bold
\shape italic
overwrite
\series default
\shape default
 - allow overwriting already existing files (does not allow creation, file
 attributes are not changed)
\end_layout

\begin_layout Itemize

\series bold
\shape italic
dirlist
\series default
\shape default
 - allow obtaining list of the files
\end_layout

\begin_layout Itemize

\series bold
\shape italic
cd
\series default
\shape default
 - allow to make this directory current
\end_layout

\begin_layout Itemize

\series bold
\shape italic
create
\series default
 owner:group permissions_or:permissions_and
\shape default
 - allow creating new files.
 File will be owned by 
\shape italic
owner
\shape default
 and owning group will be 
\shape italic
group
\shape default
.
 If '*' is used, the user/group to which connected user is mapped will be
 used.
 The permissions will be set to 
\shape italic
permissions_or
\shape default
 & 
\shape italic
permissions_and
\shape default
 (second number is reserved for the future usage).
 
\end_layout

\begin_layout Itemize

\series bold
\shape italic
mkdir
\series default
 owner:group permissions_or:permissions_and
\shape default
 - allow creating new directories.
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize

\shape italic
gaclpligin.so
\shape default
 does not have options in case of the old configuration.
 First line of it's configuration contains local path (root directory) served
 by it.
 Rest till keyword 
\series bold
\shape italic
end
\series default
\shape default
 contains GACL 
\begin_inset LatexCommand \cite{gacl}

\end_inset

 XML used to setup initial access rules for every newly created file and
 directory.
 If GACL XML is empty then there will be no default ACLs created for new
 files and directories.
 That means ACL of parent directory will be used.
 
\newline
For the new configuration format following options are supported: 
\series bold
\shape italic
gacl=
\series default
gacl
\shape default
 - GACL XML, 
\series bold
\shape italic
mount
\series default
=path
\shape default
 - local path server by plugin.
 
\newline
XML may contain variables which are replaced with values taken from client's
 credentials.
 Following variables are supported:
\end_layout

\begin_deeper
\begin_layout List
\labelwidthstring 00.00.0000

\emph on
$subject
\emph default
 - subject of user's certificate (DN),
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
$voms
\emph default
 - subject of VOMS
\begin_inset LatexCommand \cite{voms}

\end_inset

 server (DN),
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
$vo
\emph default
 - name of VO (from VOMS certificate),
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
$role
\emph default
 - role (from VOMS certificate),
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
$capability
\emph default
 - capabilities (from VOMS certificate),
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
$group
\emph default
 - name of group (from VOMS certificate) .
\end_layout

\begin_layout Standard
Additionally root directory must contain 
\emph on
.gacl
\emph default
 file with initial ACL.
 Otherwise rule will be 
\begin_inset Quotes eld
\end_inset

deny all for everyone
\begin_inset Quotes erd
\end_inset

.
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
Some configuration parameters can be specified from command line while starting
 the GFS:
\end_layout

\begin_layout Standard

\emph on
gridftpd [-h] [-p number] [-n number] [-b number] [-B number] [-d level]
 [-c path] [-F] [-U uid[:gid]] [-L path] [-P path]
\emph default

\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{0.5cm}
\end_layout

\end_inset


\emph on
-h
\emph default
 - short help,
\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{0.5cm}
\end_layout

\end_inset


\emph on
-d
\emph default
 - debug level,
\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{0.5cm}
\end_layout

\end_inset


\emph on
-L
\emph default
 - name log file (overwrites value in configuration file),
\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{0.5cm}
\end_layout

\end_inset


\emph on
-P
\emph default
 - name for file containing process id (overwrites value in configuration
 file),
\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{0.5cm}
\end_layout

\end_inset


\emph on
-U
\emph default
 - user and gropu id to use for running daemon,
\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{0.5cm}
\end_layout

\end_inset


\emph on
-F
\emph default
 - do not make process daemon,
\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{0.5cm}
\end_layout

\end_inset


\emph on
-c
\emph default
 - name od configuration file,
\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{0.5cm}
\end_layout

\end_inset


\emph on
-p
\emph default
 - TCP/IP port number,
\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{0.5cm}
\end_layout

\end_inset


\emph on
-n
\emph default
 - maximal number of simultaneously served connection,
\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{0.5cm}
\end_layout

\end_inset


\emph on
-b
\emph default
 - default size of buffer used for data transfer (default is 64kB),
\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
hspace*{0.5cm}
\end_layout

\end_inset


\emph on
-B
\emph default
 - maximal size of buffer used for data transfer (default is 640kB).
\end_layout

\begin_layout Subsection
Authorization
\begin_inset LatexCommand \label{sub:Authorization}

\end_inset


\end_layout

\begin_layout Standard
Authorization is performed at GFS by applying set of rules.
 Each rule takes one line in the 
\emph on
group
\emph default
 section.
 For information about supported rules please read 
\begin_inset Quotes eld
\end_inset

Configuration and authorisation of ARC (NorduGrid) Services
\begin_inset Quotes erd
\end_inset

 
\begin_inset LatexCommand \cite{config}

\end_inset

.
\end_layout

\begin_layout Subsection
\begin_inset LatexCommand \label{sub:LRMS}

\end_inset

LRMS support
\end_layout

\begin_layout Standard
The GM comes with support for several LRMS.
 And this number is slowly growing.
 Features explained below are for 
\series bold
PBS
\series default
 backend.
 This support is provided through 
\shape italic
submit-pbs-job
\shape default
, 
\shape italic
cancel-pbs-job
\shape default
, 
\shape italic
scan-pbs-job
\shape default
 scripts.
 
\shape italic
submit-pbs-job
\shape default
 creates job's script and submits it to PBS.
 Created job's script is responsible for moving data between frontend machine
 and cluster node (if required) and execution of actual job.
 Alternatively it can download input files and upload output if 
\emph on

\begin_inset Quotes eld
\end_inset

localtransfer no
\begin_inset Quotes erd
\end_inset


\emph default
 is specified in the configuration file.
\end_layout

\begin_layout Standard
Behavior of submission script is mostly controlled using environment variables.
 Most of them can be specified on frontend in GM's environment and overwritten
 on cluster's node through PBS configuration.
 Some of them may be set in configuration file too.
\end_layout

\begin_layout Standard

\series bold
\shape italic
PBS_BIN_PATH
\series default
\shape default
 - path to PBS executables.
 Like 
\emph on
/usr/local/bin
\emph default
 for example.
 
\emph on
pbs_bin_path
\emph default
 configuration command.
\end_layout

\begin_layout Standard

\series bold
\shape italic
PBS_LOG_PATH
\series default
\shape default
 - path to PBS server logs.
 
\emph on
pbs_log_path
\emph default
 configuration command.
\end_layout

\begin_layout Standard

\series bold
\shape italic
TMP_DIR
\series default
\shape default
 - path to directory to store temporary files.
 Default value is 
\emph on
/tmp
\emph default
.
 
\emph on
tmpdir
\emph default
 configuration command.
\end_layout

\begin_layout Standard

\series bold
\shape italic
RUNTIME_CONFIG_DIR
\series default
\shape default
 - path where runtime setup scripts can be found.
 
\emph on
runtimedir
\emph default
 configuration command.
\end_layout

\begin_layout Standard

\series bold
\shape italic
GNU_TIME
\series default
\shape default
 - path to GNU time utility.
 It is important to path to utility compatible with GNU time.
 If such utility is not available, modify 
\shape italic
submit-pbs-job
\shape default
 to either reset this variable or change usage of available utility.
 
\emph on
gnu_time
\emph default
 configuration command.
\end_layout

\begin_layout Standard

\series bold
\shape italic
NODENAME
\series default
\shape default
 - command to obtain name of cluster's node.
 Default is 
\emph on
/bin/hostname -f
\emph default
.
 
\emph on
nodename
\emph default
 configuration command.
\end_layout

\begin_layout Standard

\series bold
\shape italic
RUNTIME_LOCAL_SCRATCH_DIR
\series default
\shape default
 - if defined should contain path to the directory on computing node, which
 can be used to store job's files during execution.
 
\emph on
scratchdir
\emph default
 configuration command.
\end_layout

\begin_layout Standard

\series bold
\shape italic
RUNTIME_FRONTEND_SEES_NODE
\series default
\shape default
 - if defined should contain path corresponding to 
\shape italic
RUNTIME_LOCAL_SCRATCH_DIR
\shape default
 as
\series bold
 
\series default
seen on 
\series bold
frontend
\series default
 machine.
 
\emph on
shared_scratch
\emph default
 configuration command.
\end_layout

\begin_layout Standard

\series bold
\shape italic
RUNTIME_NODE_SEES_FRONTEND
\series default
\shape default
 - if set to 
\begin_inset Quotes eld
\end_inset


\emph on
no
\emph default

\begin_inset Quotes erd
\end_inset

 means computing node does not share filesystem with frontend.
 In that case content of the SD is moved to computing node by using means
 provided by the LRMS.
 Results are moved back after job's execution in a same way.
 
\emph on
shared_filesystem
\emph default
 configuration command.
\end_layout

\begin_layout Standard
Figures 
\begin_inset LatexCommand \ref{fig:no node scratch}

\end_inset

,
\begin_inset LatexCommand \ref{fig:node scratch, not vis on front}

\end_inset

,
\begin_inset LatexCommand \ref{fig:node scratch, vis on front}

\end_inset

 present some possible combinations for RUNTIME_LOCAL_SCRATCH_DIR and RUNTIME_FR
ONTEND_SEES_NODE and explain how data movement is performed.
 Pictures a) correspond to situation right after all input files are gathered
 in session directory and actions taken right after job's script starts.
 Pictures b) show how it looks while job is running and actions which are
 taken right after it finished.
 Pictures c) stand for final situation, when job files are ready to be uploaded
 to external storage element or be downloaded by user.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement tbh
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
includegraphics{pic2}
\end_layout

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:no node scratch}

\end_inset

Both RUNTIME_LOCAL_SCRATCH_DIR and RUNTIME_FRONTEND_SEES_NODE undefined.
 Job is executed in session directory placed on frontend.
\end_layout

\end_inset


\begin_inset Float figure
placement htbp
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
includegraphics{pic3}
\end_layout

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:node scratch, not vis on front}

\end_inset

RUNTIME_LOCAL_SCRATCH_DIR is set to value representing sratch directory
 on computing node, RUNTIME_FRONTEND_SEES_NODE undefined.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
a) After job script starts all input files are moved to 'scratch directory'
 on computing node.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
b) Job runs in separate directory in 'scratch directory'.
 Only files representing job's 
\shape italic
stdout
\shape default
 and 
\shape italic
stderr
\shape default
 are placed in original 'session directory' and soft-linked in 'scratch'.
 After execution all files from 'scratch' are moved back to original 'session
 directory'.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
c) All output files are in 'session directory' and are ready to be uploaded/down
loaded.
\end_layout

\end_inset


\begin_inset Float figure
placement htbp
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
includegraphics{pic4}
\end_layout

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:node scratch, vis on front}

\end_inset

Both RUNTIME_LOCAL_SCRATCH_DIR and RUNTIME_FRONTEND_SEES_NODE are set to
 valuea representing sratch directory on computing node and way to access
 that scratch from frontend correspondingly.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
a) After job script starts all input files are moved to 'scratch directory'
 on computing node.
 Original 'session directory' is removed and replaced with soft-link to
 copy of session directory in 'scratch' as seen on frontend.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
b) Job runs in separate directory in 'scratch directory'.
 All files are also available on frontend through soft-link.
 After execution soft-link is replaced with directory and all files from
 'scratch' are moved back to original 'session directory'.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
c) All output files are in 'session directory' and are ready to be uploaded/down
loaded.
 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Runtime environment
\end_layout

\begin_layout Standard
The GM can run specially prepared 
\emph on
BASH
\emph default
 scripts prior creation of job's script, before and after executing job's
 main executable.
 Those scripts are requested by user through 
\emph on
runtimeenvironment
\emph default
 attribute in RSL and are run with only argument set equal to '0', '1' or
 '2' during creation of job's script, before execution of main executable
 and after main executable finished accordingly.
 They all are run through BASH's 'source' command, and hence can manipulate
 with shell variables.
 With argument '0' scripts are run by the GM on frontend.
 Some environment variables are defined in that case and can be changed
 to influence job's execution later:
\end_layout

\begin_layout Itemize
joboption_directory - session directory.
\end_layout

\begin_layout Itemize
joboption_args - command to be executed as specified in RSL.
\end_layout

\begin_layout Itemize
joboption_env_# - array of 'NAME=VALUE' environment variables (
\series bold
not
\series default
 bash array).
\end_layout

\begin_layout Itemize
joboption_runtime_# - array of requested 
\emph on
runtimeenvironment
\emph default
 names (
\series bold
not
\series default
 bash array).
\end_layout

\begin_layout Itemize
joboption_num - 
\emph on
runtimeenvironment
\emph default
 currently beeing processed (number starting from 0).
\end_layout

\begin_layout Itemize
joboption_stdin - name of file to be attached to stdin handle.
\end_layout

\begin_layout Itemize
joboption_stdout - same for stdout.
\end_layout

\begin_layout Itemize
joboption_stderr - same for stderr.
\end_layout

\begin_layout Itemize
joboption_maxcputime - amout of CPU time requested (minutes).
\end_layout

\begin_layout Itemize
joboption_maxmemory - amout of memory requested (megabytes).
\end_layout

\begin_layout Itemize
joboption_count - number of processors requested.
\end_layout

\begin_layout Itemize
joboption_lrms - LRMS to be used to run job.
\end_layout

\begin_layout Itemize
joboption_queue - name of a queue of LRMS to put job into.
\end_layout

\begin_layout Itemize
joboption_nodeproperty_# - array of properties of computing nodes (LRMS
 specific, 
\series bold
not
\series default
 bash array).
\end_layout

\begin_layout Itemize
joboption_jobname - name of the job as given by user.
\end_layout

\begin_layout Itemize
joboption_rsl - whole RSL for very clever submission scripts.
\end_layout

\begin_layout Itemize
joboption_rsl_
\emph on
name
\emph default
 - RSL attributes and values (like joboption_rsl_executable=
\begin_inset Quotes erd
\end_inset

/bin/echo
\begin_inset Quotes erd
\end_inset

)
\end_layout

\begin_layout Standard
For example 
\emph on
joboption_args
\emph default
 could be changed to wrap main executable.
 Or 
\emph on
joboption_runtime
\emph default
 could be expanded if current one depends on others.
\end_layout

\begin_layout Standard
With argument '1' scripts are run just before main executable is run.
 They are executed on computing node.
 Such script can prepare environment for some third-party software package.
 A current directory in that case is one which would be used for execution
 of job.
 Variable HOME also points to that directory.
\end_layout

\begin_layout Standard
With argument '2' scripts are executed after main executable finished.
 Main purpose is to clean possible changes done by scripts run with '1'
 (like removing temporary files).
 Execution of scripts at that stage also happens on computing node and is
 not reliable.
 If the job is killed by LRMS they most probably won't be executed.
\end_layout

\begin_layout Section
Installation
\begin_inset LatexCommand \label{sec:installation}

\end_inset


\end_layout

\begin_layout Standard
To install GM as part of ARC-enabled site please read 
\begin_inset Quotes eld
\end_inset

NorduGrid ARC server installation instructions
\begin_inset Quotes erd
\end_inset

 at 
\begin_inset LatexCommand \htmlurl{http://www.nordugrid.org/documents/ng-server-install.html}

\end_inset

.
\end_layout

\begin_layout Subsection
Requirements
\end_layout

\begin_layout Standard
The GM is mostly written using C++.
 It was tested and should compile on recent enough 
\emph on
Linux
\emph default
 systems using 
\emph on
gcc
\emph default
 compiler and 
\emph on
GNU make
\emph default
 (gcc versions 2.95, 2.96, 3.2, 3.4 were tested).
 You will also need 
\emph on
Globus Toolkit
\begin_inset ERT
status collapsed

\begin_layout Standard

$^{TM}$
\end_layout

\end_inset


\emph default
 of version higher than 2.2
\emph on
 
\emph default
installed 
\begin_inset LatexCommand \url{http://www-unix.globus.org/toolkit/}

\end_inset

.
\end_layout

\begin_layout Subsection
Setup of the Grid Manager
\end_layout

\begin_layout Standard
For in-depth information about how to properly setup the GM and related
 software please read 
\begin_inset Quotes eld
\end_inset

NorduGrid ARC server installation instructions
\begin_inset Quotes erd
\end_inset

 at 
\begin_inset LatexCommand \htmlurl{http://www.nordugrid.org/documents/ng-server-install.html}

\end_inset

.
 Follow that manual to install GM, configure and run it.
 Additional tips are described here.
\end_layout

\begin_layout Standard
The GM is designed to be able to run both as root and as ordinary user.
 You can chose the name of the user by using corresponding command in configurat
ion file.
 It is better run GM as root if You want to serve few users.
\end_layout

\begin_layout Standard
The GM writes debug information into a file /var/log/grid-manager.log by
 default.
 .
 Also file /var/log/gm-jobs.log (default path in configuration template,
 turned off by default) contains information about all started and finished
 jobs, 2 lines per job (1 when job is started and 1 after it finished).
 
\end_layout

\begin_layout Subsection
Setup of the GridFTP Server
\end_layout

\begin_layout Standard
For in-depth information about how to properly setup the GM and related
 software please read 
\begin_inset Quotes eld
\end_inset

NorduGrid ARC server installation instructions
\begin_inset Quotes erd
\end_inset

 at 
\begin_inset LatexCommand \htmlurl{http://www.nordugrid.org/documents/ng-server-install.html}

\end_inset

.
 Follow that manual to install GM, configure and run it.
 Additional tips are described here.
\end_layout

\begin_layout Standard
To make GFS to interoperate with other parts of the ARC only one 
\emph on
jobplugin.so
\emph default
 needs to be configured.
 It is advisable to use the template configuration file.
 You can leave only part which configures 
\shape italic
jobplugin.so
\shape default
 plugin.
\end_layout

\begin_layout Subsection
Usage
\end_layout

\begin_layout Standard
Refer to the description of the 
\emph on
User Interface
\emph default
 part 
\begin_inset LatexCommand \cite{ui}

\end_inset

 and extensions to RSL 
\begin_inset LatexCommand \cite{xrsl}

\end_inset

 for using the GM.
\end_layout

\begin_layout Subsection
Unix accounts
\end_layout

\begin_layout Standard
Bot GM and GFS are designed to be run by 
\emph on
root
\emph default
 UNIX account and serve multiple local UNIX and global Grid identities.
 Nevertheless it is possible to use 
\emph on
non-root
\emph default
 accounts to run those services.
 Although this means some functionality loss described below.
\end_layout

\begin_layout Standard
There are no implication on running GFS with 
\emph on
gaclplugin
\emph default
 or 
\emph on
fileplugin
\emph default
 under 
\emph on
non-root
\emph default
 account as long as only Grid identity of user is used and all served files
 and directories are owned by server's account.
 
\end_layout

\begin_layout Standard
For combination of GM and GFS with 
\emph on
jobplugin
\emph default
 both services must be run either by same account or one of services must
 be run under 
\emph on
root
\emph default
 account.
 That is needed because services communicate over local filesystem, hence
 must have 
\emph on
full
\emph default
 access to same set of files.
\end_layout

\begin_layout Standard
As long as GFS with 
\emph on
jobplugin
\emph default
 is run under non-root account there is no mapping from Grid identity to
 local UNIX account taking place.
 All alowed Grid users are assigned server's account and are then processes
 by GM using same account.
 Only way to overcome this limitation is to run one GFS per local account
 with proper access control configured.
\end_layout

\begin_layout Standard
Because GM has to represent user's local account while communication with
 LRMS, it can serve only account it is run under (unless it is run under
 
\emph on
root
\emph default
 account, of course).
 Like in case of GFS, multiple instances of GM may be run, one per local
 account.
 That solution causes another implications.
 The GM looses possibility to share cached files among serviced users.
 It is not also possible to control load on a frontend by limiting number
 of simultatenuosly running 
\emph on
downloader
\emph default
 and 
\emph on
uploader
\emph default
 modules.
\end_layout

\begin_layout Standard
One has also take into account that private part of GSI infrastructure (private
 key of a host at least) has to be duplicated for every account used to
 run GFS.
\end_layout

\begin_layout Section*
Appendix A.
 Job control over jobplugin.so
\end_layout

\begin_layout Subsection*
Virtual tree
\end_layout

\begin_layout Standard
Under mount point of jobplugin gridftp client can see directories representing
 job belonging to user, who started client.
 Directory per job.
 Directory names are same as jobs' identifiers.
 Those directories are directly connected to session directories of jobs
 and contain same files and subdirectories.
 Except if jobs session directory is moved to computing node.
 In that case directories only contain files with redirected stdout and
 strderr as specified in xRSL.
\end_layout

\begin_layout Standard
If job's xRSL has 
\emph on
gmlog
\emph default
 specified job's directory also contains virtual subdirectory with same
 name, which contains files with information about job as created by GM.
 The most important are 'errors' and 'status'.
 'errors' contains stderr of separate modules run by GM in order to process
 job (downloader, uploader, job's submission to LRMS).
 'status' contains one word representing state of job.
 
\end_layout

\begin_layout Standard
Also under mount point there is additional directory named "new" used to
 submit new jobs.
 And another directory 
\begin_inset Quotes eld
\end_inset

info
\begin_inset Quotes erd
\end_inset

 with subdirectories named after job ids.
 Those subdirectories contain files with information about job identical
 to those in subdirectory specified through 
\emph on
gmlog
\emph default
.
\end_layout

\begin_layout Subsection*
Submission
\end_layout

\begin_layout Standard
Each xRSL put into directory "new" is accepted as job's description.
 jobplugin parses it and client gets positive response if there are no errors
 in request.
\end_layout

\begin_layout Standard
Job gets identifier and directory with corresponding name appears.
 If job's description contains input files which should be delivered from
 client's machine, client must upload them to that directory under specified
 names.
\end_layout

\begin_layout Standard
Because each job gets identifier there should be a way for client to obtain
 it.
 For that prior to providing xRSL client sends command CWD to change current
 directory to "new".
 In this way job's identifier is reserved, new directory corresponding to
 that identifier is created and client is redirected to it (as specified
 in FTP protocol).
 Job's description put into "new" will get reserved identifier.
\end_layout

\begin_layout Subsection*
Actions
\end_layout

\begin_layout Standard
Various actions to affect processing of existing job are performed by uploading
 xRSL files into directory 
\begin_inset Quotes eld
\end_inset

new
\begin_inset Quotes erd
\end_inset

.
 Content of xRSL may consist of only 2 parameters - action for 
\emph on
action
\emph default
 to be performed, and 
\emph on
jobid
\emph default
 to identify job to be affected.
 Rest of parameters are ignored.
\end_layout

\begin_layout Standard
Currently supported actions are:
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
cancel
\emph default
 to cancel job
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
clean
\emph default
 to remove job from computing resource
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
renew
\emph default
 to renew credentials delegated to job
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000

\emph on
restart
\emph default
 to restart job after failure at some phases
\end_layout

\begin_layout Standard
It is also possible to perform some actions by using shortcut FTP operations
 described below.
\end_layout

\begin_layout Subsubsection*
Cancel
\end_layout

\begin_layout Standard
Job is canceled by performing DELE (delete file) command on directory representi
ng job.
 It can take some time (few minutes) before job is actually canceled.
 Nevertheless client gets response immediately.
\end_layout

\begin_layout Subsubsection*
Clean
\end_layout

\begin_layout Standard
Job's content is cleaned by performing RMD (remove directory) command on
 directory representing job.
 If job is in "FINISHED" state it will be cleaned immediately.
 Otherwise it will be cleaned after it reaches state "FINISHED".
\end_layout

\begin_layout Subsubsection*
Renew
\end_layout

\begin_layout Standard
If client requests CWD to session directory credentials passed during authentica
tion are compared to current credentials of the job.
 If validity time of the new credentials is longer job's credentials are
 replaced with new.
\end_layout

\begin_layout Section*
Appendix B.
 Library 
\shape italic
libarcdata
\end_layout

\begin_layout Standard

\emph on
libarcdata
\emph default
 is now part of 
\emph on
libngui
\emph default
 library.
 It's functions are declared in a header file 
\emph on
arcdata.h
\emph default
.
 They correspond to ng* utilities meant for data handling - 
\emph on
arcacl
\emph default
, 
\emph on
arccp
\emph default
, 
\emph on
arcls
\emph default
, 
\emph on
arcrm
\emph default
, 
\emph on
arctransfer
\emph default
.
 It consists of following functions:
\end_layout

\begin_layout LyX-Code
void arcacl(const std::string& file_url, const std::string& command, int
 timeout = 0);
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code
void arcregister (const std::string& source_url, const std::string& destination_
url, bool secure = false, bool passive = true, bool force_meta = false,
 int timeout = 0);
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code
void arccp (const std::string& source_url, const std::string& destination_url,
 bool secure = false, bool passive = true, bool force_meta = false, int
 recursion = 0, bool verbose = false, int timeout = 0);
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code
void arcls(const std::string& dir_url, bool show_details = false, bool show_urls
 = false, int recursion = 0, int timeout = 0);
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code
void arcrm(const std::string& file_url, bool errcont = false, int timeout
 = 0);
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code
void arctransfer(const std::string& destination, std::list<std::string>&
 sources, int timeout = 0);
\end_layout

\begin_layout Standard
Additionally this library contains C++ classes used by 
\emph on
ng*
\emph default
 data management utilities.
 Those are described in 
\begin_inset Quotes eld
\end_inset

ARC::DataMove Reference Manual
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Section*
Appendix C.
 Error messages of GM
\end_layout

\begin_layout Standard
If job has not finished successfully the GM put one or more lines into 
\shape italic
job.ID.failed
\shape default
.
 Possible valuesinclude those generated by the GM itself:
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="25" columns="2">
<features>
<column alignment="block" valignment="top" leftline="true" width="2.5in">
<column alignment="block" valignment="top" leftline="true" rightline="true" width="4in">
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\emph on
Error string
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\emph on
Reason/description
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Internal error
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Error in internal algorithm
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Internal error: can't read local file
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Error manipulating files in the control directory
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed reading local job information
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-//-
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed reading status of the job
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-//-
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed writing job status
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-//-
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed during processing failure
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-//-
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Serious troubles (problems during processing problems)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-//-
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed initiating job submission to LRMS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Could not run backend executable to pass job to LRMS
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Job submission to LRMS failed
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Backend executable supposed to pass job to LRMs returned non-zero exit code
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed extracting LRMS ID due to some internal error
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output of Backend executable supposed to contain local ID of passed job
 could not be parsed
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed in files upload (post-processing)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed to upload some or all output files
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed in files upload due to expired credentials - try to renew
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed to upload some or all output files most probably due to expired credentia
ls (proxy certificate)
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed to run uploader (post-processing)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Could not run 
\emph on
uploader
\emph default
 executable
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
uploader failed (postprocessing)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Generic error related to 
\emph on
uploader
\emph default
 component
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed in files download (pre-processing)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed to upload some or all input files
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed in files download due to expired credentials - try to renew
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed to download some or all input files most probably due to expired
 credentials (proxy certificate)
\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed to run downloader (pre-processing)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Could not run 
\emph on
downloader
\emph default
 executable
\end_layout

\end_inset
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
downloader failed (preprocessing)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Generic error related to 
\emph on
downloader
\emph default
 component
\end_layout

\end_inset
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
User requested to cancel the job
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
GM detected external request to cancel this job, most probably issued by
 user
\end_layout

\end_inset
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Could not process RSL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Job description could not be processed to syntax errors or missing elements
\end_layout

\end_inset
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
User requested dryrun.
 Job skiped.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Job description contains request not to process this job
\end_layout

\end_inset
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
LRMS error: (CODE) DESCRIPTION
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
LRMS returned error.
 CODE is replaced with numeric code of LRMS, and DESCRIPTION with textual
 description
\end_layout

\end_inset
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Plugin at state STATE failed: OUTPUT
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
External plugin specified in GM's configuration returned non-zero exit code.
 STATE is replcaced by name of state to which job was going to be passed,
 OUTPUT by textual output generated by plugin.
\end_layout

\end_inset
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Failed running plugin at state STATE
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
External plugin specified in GM's configuration could not be executed.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace medskip
\end_inset

Provided by downloader component (URL is replcaced by source of input file,
 FILE by name of file):
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="28" columns="2">
<features>
<column alignment="block" valignment="top" leftline="true" width="2.5in">
<column alignment="block" valignment="top" leftline="true" rightline="true" width="4in">
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\emph on
Error string
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\emph on
Reason/description
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Internal error in downloader
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Generic error 
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - unknown error
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Generic error 
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - unexpected error
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Generic error 
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - bad source URL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Source URL is either malformed or not supported
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - bad destination URL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Shouldn't happen
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - failed to resolve source locations
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
File either not registred or other problems related to Data Indexing service.
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - failed to resolve destination locations
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Shouldn't happen
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - failed to register new destination file
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Shouldn't happen
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - can't start reading from source
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Problems related to accessing instance of file at Data Storing service.
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - can't read from source
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-//-
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - can't start writing to destination
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Access problems in a session directory
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - can't write to destination
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-//-
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - data transfer was too slow
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Timeouted while trying to download file
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - failed while closing connection to source
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Shouldn't happen
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - failed while closing connection to destination
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Shouldn't happen
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - failed to register new location
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Shouldn't happen
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - can't use local cache
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Problems with GM cache 
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - system error
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Operating System returned error code where unexpected
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Input file: URL - delegated credentials expired
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Access to source requires credententials and they are either outdated or
 missing (not delegated).
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
User file: FILENAME - Bad information about file: checksum can't be parsed.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
In job description there is a checksum provided for file uploadable by user
 interface and this record can't be interpreted.
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
User file: FILENAME - Bad information about file: size can't be parsed.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
In job description there is a size provided for file uploadable by user
 interface and this record can't be interpreted.
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
User file: FILENAME - Expected file.
 Directory found.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Instead of file uploadable by user interface GM found directory with same
 name in a session directory.
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
User file: FILENAME - Expected ordinary file.
 Special object found.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Instead of file uploadable by user interface GM found special object with
 same name in a session directory.
\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
User file: FILENAME - Delivered file is bigger than specified.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
The size of file uploadable by user interface is bigger than specified in
 job description.
\end_layout

\end_inset
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
User file: FILENAME - Delivered file is unreadable.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
GM can't check user uploadable file due to some internal error.
 Most probably due to improperly configured local permissions.
\end_layout

\end_inset
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
User file: FILENAME - Could not read file to compute checksum.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
GM can't read user uploadable file due to some internal error.
 Most probably due to improperly configured local permissions.
\end_layout

\end_inset
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
User file: FILENAME - Timeout waiting
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
GM waited for user uploadable file too long.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace medskip
\end_inset

Provided by uploader component (URL is replcaced by destination of output
 file) :
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="23" columns="2">
<features>
<column alignment="block" valignment="top" leftline="true" width="2.5in">
<column alignment="block" valignment="top" leftline="true" rightline="true" width="4in">
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\emph on
Error string
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\emph on
Reason/description
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Internal error in uploader
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Generic error 
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - unknown error
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Generic error 
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - unexpected error
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Generic error 
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
User requested to store output locally URL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Destination is URL of type 
\emph on
file
\emph default
.
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - bad source URL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Shouldn't happen
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - bad destination URL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Destination URL is either malformed or not supported
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - failed to resolve source locations
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Shouldn't happen
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - failed to resolve destination locations
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Problems related to Data Indexing service.
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - failed to register new destination file
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
-//-
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - can't start reading from source
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
User request to store output file, but there is no such file or there are
 problems accessing session directory
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - can't start writing to destination
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Problems with Data Storing services
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - can't read from source
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Problems accessing session directory
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - can't write to destination
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Problems with Data Storing services
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - data transfer was too slow
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Timeout during transfer
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - failed while closing connection to source
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Shouldn't happen
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - failed while closing connection to destination
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Shouldn't happen
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - failed to register new location
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Problems related to Data Indexing service.
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - can't use local cache
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Shouldn't happen
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - system error
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Operating System returned error code where unexpected
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Output file: URL - delegated credentials expired
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Access to destination requires credententials and they are either outdated
 or missing (not delegated).
\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace medskip
\end_inset

Coming from LRMS (PBS) backend:
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="block" valignment="top" leftline="true" width="2.5in">
<column alignment="block" valignment="top" leftline="true" rightline="true" width="4in">
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\emph on
Error string
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\emph on
Reason/description
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Submission: Configuration error.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Submission: System error.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Submission: Job description error.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Submission: Local submission client behaved unexpectedly.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Submission: Local submission client failed.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout LyX-Code
 
\end_layout

\begin_layout Section*
Appendix D.
 A-Rex WSDL
\end_layout

\begin_layout LyX-Code
<?xml version="1.0" encoding="UTF-8"?>
\end_layout

\begin_layout LyX-Code
<wsdl:definitions targetNamespace="http://www.nordugrid.org/schemas/a-rex"
\end_layout

\begin_layout LyX-Code
 xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"
\end_layout

\begin_layout LyX-Code
 xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/"
\end_layout

\begin_layout LyX-Code
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
\end_layout

\begin_layout LyX-Code
 xmlns:xsd="http://www.w3.org/2001/XMLSchema"
\end_layout

\begin_layout LyX-Code
 xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
\end_layout

\begin_layout LyX-Code
 xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
\end_layout

\begin_layout LyX-Code
 xmlns:wsa="http://www.w3.org/2005/08/addressing"
\end_layout

\begin_layout LyX-Code
 xmlns:bes-factory="http://schemas.ggf.org/bes/2006/08/bes-factory"
\end_layout

\begin_layout LyX-Code
 xmlns:bes-mgmt="http://schemas.ggf.org/bes/2006/08/bes-management"
\end_layout

\begin_layout LyX-Code
 xmlns:deleg="http://www.nordugrid.org/schemas/delegation"
\end_layout

\begin_layout LyX-Code
 xmlns:wsrf-rpw="http://docs.oasis-open.org/wsrf/rpw-2"
\end_layout

\begin_layout LyX-Code
 xmlns:a-rex="http://www.nordugrid.org/schemas/a-rex">
\end_layout

\begin_layout LyX-Code
  <wsdl:import namespase="http://schemas.ggf.org/bes/2006/08/bes-factory"
 location="./bes-factory.wsdl"/>
\end_layout

\begin_layout LyX-Code
  <wsdl:import namespase="http://schemas.ggf.org/bes/2006/08/bes-management"
 location="./bes-management.wsdl"/>
\end_layout

\begin_layout LyX-Code
  <wsdl:import namespase="http://www.nordugrid.org/schemas/delegation" location="../
schemas/delegation.wsdl"/>
\end_layout

\begin_layout LyX-Code
  <wsdl:import namespase="http://docs.oasis-open.org/wsrf/rpw-2" location="http://
docs.oasis-open.org/wsrf/rpw-2.wsdl"/>
\end_layout

\begin_layout LyX-Code
  <wsdl:types>
\end_layout

\begin_layout LyX-Code
    <xsd:schema targetNamespace="http://www.nordugrid.org/schemas/a-rex">
\end_layout

\begin_layout LyX-Code
      <xsd:import namespace="http://www.w3.org/2005/08/addressing" schemaLocation=
"./ws-addr.xsd"/>
\end_layout

\begin_layout LyX-Code
      <xsd:simpleType name="ActivitySubStateType">
\end_layout

\begin_layout LyX-Code
        <xsd:restriction base="xsd:string">
\end_layout

\begin_layout LyX-Code
          <xsd:enumeration value="Accepting"/>
\end_layout

\begin_layout LyX-Code
          <xsd:enumeration value="Accepted"/>
\end_layout

\begin_layout LyX-Code
          <xsd:enumeration value="Preparing"/>
\end_layout

\begin_layout LyX-Code
          <xsd:enumeration value="Prepared"/>
\end_layout

\begin_layout LyX-Code
          <xsd:enumeration value="Submiting"/>
\end_layout

\begin_layout LyX-Code
          <xsd:enumeration value="Executing"/>
\end_layout

\begin_layout LyX-Code
          <xsd:enumeration value="Killing"/>
\end_layout

\begin_layout LyX-Code
          <xsd:enumeration value="Executed"/>
\end_layout

\begin_layout LyX-Code
          <xsd:enumeration value="Finishing"/>
\end_layout

\begin_layout LyX-Code
          <xsd:enumeration value="Finished"/>
\end_layout

\begin_layout LyX-Code
          <xsd:enumeration value="Failed"/>
\end_layout

\begin_layout LyX-Code
          <xsd:enumeration value="Deleted"/>
\end_layout

\begin_layout LyX-Code
          <xsd:enumeration value="Pending"/>
\end_layout

\begin_layout LyX-Code
          <xsd:enumeration value="Held"/>
\end_layout

\begin_layout LyX-Code
        </xsd:restriction>
\end_layout

\begin_layout LyX-Code
      </xsd:simpleType>
\end_layout

\begin_layout LyX-Code
      <xsd:element name="State" type="a-rex:ActivitySubStateType"/>
\end_layout

\begin_layout LyX-Code
      <xsd:complexType name="ResourceInformationDocumentType">
\end_layout

\begin_layout LyX-Code
        <xsd:sequence>
\end_layout

\begin_layout LyX-Code
           <xsd:element name="BESFactory" type="bes-factory:FactoryResourceAttri
butesDocumentType"/>
\end_layout

\begin_layout LyX-Code
          <xsd:complexType name="Glue2Resource" minOccurs='0'>
\end_layout

\begin_layout LyX-Code
            <xsd:sequence>
\end_layout

\begin_layout LyX-Code
              <xsd:any namespace="##other" processContents="lax" minOccurs="0"
 maxOccurs="unbounded"/>
\end_layout

\begin_layout LyX-Code
            </xsd:sequence>
\end_layout

\begin_layout LyX-Code
          </xsd:complexType>
\end_layout

\begin_layout LyX-Code
          <xsd:complexType name="Activities" minOccurs='0'>
\end_layout

\begin_layout LyX-Code
            <xsd:sequence>
\end_layout

\begin_layout LyX-Code
              <xsd:complexType name="Activity" minOccurs='0' maxOccurs='unbounde
d'>
\end_layout

\begin_layout LyX-Code
                <xsd:sequence>
\end_layout

\begin_layout LyX-Code
                  <xsd:element name="ActivityIdentifier" type="wsa:EndpointRefer
enceType"/>
\end_layout

\begin_layout LyX-Code
                  <xsd:element ref="bes-factory:ActivityDocument" minOccurs='0'/
>
\end_layout

\begin_layout LyX-Code
                  <xsd:complexType name="Glue2Job" minOccurs='0'>
\end_layout

\begin_layout LyX-Code
                    <xsd:sequence>
\end_layout

\begin_layout LyX-Code
                      <xsd:any namespace="##other" processContents="lax"
 minOccurs="0" maxOccurs="unbounded"/>
\end_layout

\begin_layout LyX-Code
                    </xsd:sequence>
\end_layout

\begin_layout LyX-Code
                  </xsd:complexType>
\end_layout

\begin_layout LyX-Code
                </xsd:sequence>
\end_layout

\begin_layout LyX-Code
              </xsd:complexType>
\end_layout

\begin_layout LyX-Code
            </xsd:sequence>
\end_layout

\begin_layout LyX-Code
          </xsd:complexType>
\end_layout

\begin_layout LyX-Code
        </xsd:sequence>
\end_layout

\begin_layout LyX-Code
      </xsd:complexType>
\end_layout

\begin_layout LyX-Code
      <xsd:complexType name="ChangeActivityStatusRequestType">
\end_layout

\begin_layout LyX-Code
        <xsd:sequence>
\end_layout

\begin_layout LyX-Code
          <xsd:element name="ActivityIdentifier" type="wsa:EndpointReferenceType
"/>
\end_layout

\begin_layout LyX-Code
          <xsd:element name="OldStatus" type="bes-factory:ActivityStatusType"
 minOccurs="0"/>
\end_layout

\begin_layout LyX-Code
          <xsd:element name="NewStatus" type="bes-factory:ActivityStatusType"/>
\end_layout

\begin_layout LyX-Code
        </xsd:sequence>
\end_layout

\begin_layout LyX-Code
      </xsd:complexType>
\end_layout

\begin_layout LyX-Code
      <xsd:element name="ChangeActivityStatus" type="a-rex:ChangeActivityStatusR
equestType"/>
\end_layout

\begin_layout LyX-Code
      <xsd:complexType name="ChangeActivityStatusResponseType">
\end_layout

\begin_layout LyX-Code
        <xsd:sequence>
\end_layout

\begin_layout LyX-Code
          <xsd:element name="NewStatus" type="bes-factory:ActivityStatusType"/>
\end_layout

\begin_layout LyX-Code
        </xsd:sequence>
\end_layout

\begin_layout LyX-Code
      </xsd:complexType>
\end_layout

\begin_layout LyX-Code
      <xsd:element name="ChangeActivityStatusResponse" type="a-rex:ChangeActivit
yStatusResponseType"/>
\end_layout

\begin_layout LyX-Code
    </xsd:schema>
\end_layout

\begin_layout LyX-Code
  </wsdl:types>
\end_layout

\begin_layout LyX-Code
  <wsdl:message name="ChangeActivityStatusRequest">
\end_layout

\begin_layout LyX-Code
    <wsdl:part name="ChangeActivityStatusRequest" element="a-rex:ChangeActivityS
tatus"/>
\end_layout

\begin_layout LyX-Code
  </wsdl:message>
\end_layout

\begin_layout LyX-Code
  <wsdl:message name="ChangeActivityStatusResponse">
\end_layout

\begin_layout LyX-Code
    <wsdl:part name="ChangeActivityStatusResponse" element="a-rex:ChangeActivity
StatusResponse"/>
\end_layout

\begin_layout LyX-Code
  </wsdl:message>
\end_layout

\begin_layout LyX-Code
  <wsdl:portType name="a-rex">
\end_layout

\begin_layout LyX-Code
    <wsdl:operation name="ChangeActivityStatus">
\end_layout

\begin_layout LyX-Code
      <wsdl:documentation>
\end_layout

\begin_layout LyX-Code
        This operation allows any simple status change request
\end_layout

\begin_layout LyX-Code
        which involves no additional parameters.
 It should be
\end_layout

\begin_layout LyX-Code
        used to modify job/activity execution flow:
\end_layout

\begin_layout LyX-Code
          - To put job on hold
\end_layout

\begin_layout LyX-Code
          - To rerun job in case of failure
\end_layout

\begin_layout LyX-Code
          - To cancel job (same as TerminateActivity of BESFActory)
\end_layout

\begin_layout LyX-Code
          - To remove/release job - as long as non-existence is a state
\end_layout

\begin_layout LyX-Code
          - Any other status change no supported by BES
\end_layout

\begin_layout LyX-Code
      </wsdl:documentation>
\end_layout

\begin_layout LyX-Code
      <wsdl:input name="ChangeActivityStatusRequest"
\end_layout

\begin_layout LyX-Code
        message="a-rex:ChangeActivityStatusRequest"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:output name="ChangeActivityStatusResponse"
\end_layout

\begin_layout LyX-Code
        message="a-rex:ChangeActivityStatusResponse"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="NotAuthorizedFault"
\end_layout

\begin_layout LyX-Code
        message="bes-factory:NotAuthorizedFault"
\end_layout

\begin_layout LyX-Code
        wsa:Action="http://schemas.ggf.org/bes/2006/08/bes-factory/BESFactoryPortT
ype/Fault"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="InvalidActivityIdentifierFault"
\end_layout

\begin_layout LyX-Code
        message="bes-factory:InvalidActivityIdentifierFault"
\end_layout

\begin_layout LyX-Code
        wsa:Action="http://schemas.ggf.org/bes/2006/08/bes-factory/BESFactoryPortT
ype/Fault"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="CantApplyOperationToCurrentStateFault"
\end_layout

\begin_layout LyX-Code
         message="bes-factory:CantApplyOperationToCurrentStateFault"
\end_layout

\begin_layout LyX-Code
         wsa:Action="http://schemas.ggf.org/bes/2006/08/bes-factory/BESFactoryPort
Type/Fault"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="OperationWillBeAppliedEventuallyFault"
\end_layout

\begin_layout LyX-Code
         message="bes-factory:OperationWillBeAppliedEventuallyFault"
\end_layout

\begin_layout LyX-Code
         wsa:Action="http://schemas.ggf.org/bes/2006/08/bes-factory/BESFactoryPort
Type/Fault"/>
\end_layout

\begin_layout LyX-Code
    </wsdl:operation>
\end_layout

\begin_layout LyX-Code
  </wsdl:portType>
\end_layout

\begin_layout LyX-Code
  <wsdl:binding name="a-rex" type="a-rex:a-rex">
\end_layout

\begin_layout LyX-Code
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http
"/>
\end_layout

\begin_layout LyX-Code
    <wsdl:operation name="ChangeActivityStatus">
\end_layout

\begin_layout LyX-Code
      <soap:operation soapAction="ChangeActivityStatus"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:input name="ChangeActivityStatusRequest">
\end_layout

\begin_layout LyX-Code
         <soap:body use="literal"/>
\end_layout

\begin_layout LyX-Code
      </wsdl:input>
\end_layout

\begin_layout LyX-Code
      <wsdl:output name="ChangeActivityStatusResponse">
\end_layout

\begin_layout LyX-Code
         <soap:body use="literal"/>
\end_layout

\begin_layout LyX-Code
      </wsdl:output>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="NotAuthorizedFault">
\end_layout

\begin_layout LyX-Code
        <soap:fault name="NotAuthorizedFault" use="literal" />
\end_layout

\begin_layout LyX-Code
      </wsdl:fault>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="InvalidActivityIdentifierFault">
\end_layout

\begin_layout LyX-Code
        <soap:fault name="InvalidActivityIdentifierFault" use="literal"
 />
\end_layout

\begin_layout LyX-Code
      </wsdl:fault>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="CantApplyOperationToCurrentStateFault">
\end_layout

\begin_layout LyX-Code
        <soap:fault name="CantApplyOperationToCurrentStateFault" use="literal"
 />
\end_layout

\begin_layout LyX-Code
      </wsdl:fault>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="OperationWillBeAppliedEventuallyFault">
\end_layout

\begin_layout LyX-Code
        <soap:fault name="OperationWillBeAppliedEventuallyFault" use="literal"
 />
\end_layout

\begin_layout LyX-Code
      </wsdl:fault>
\end_layout

\begin_layout LyX-Code
    </wsdl:operation>
\end_layout

\begin_layout LyX-Code
  </wsdl:binding>
\end_layout

\begin_layout LyX-Code
  <wsdl:binding name="GetResourcePropertyDocument" type="wsrf-rpw:GetResourcePro
pertyDocument">
\end_layout

\begin_layout LyX-Code
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http
"/>
\end_layout

\begin_layout LyX-Code
    <wsdl:operation name="GetResourcePropertyDocument">
\end_layout

\begin_layout LyX-Code
      <soap:operation soapAction="GetResourcePropertyDocument"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:input name="wsrf-rpw:GetResourcePropertyDocumentRequest">
\end_layout

\begin_layout LyX-Code
        <soap:body use="literal"/>
\end_layout

\begin_layout LyX-Code
      </wsdl:input>
\end_layout

\begin_layout LyX-Code
      <wsdl:output name="wsrf-rpw:GetResourcePropertyDocumentResponse">
\end_layout

\begin_layout LyX-Code
        <soap:body use="literal"/>
\end_layout

\begin_layout LyX-Code
      </wsdl:output>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="ResourceUnknownFault">
\end_layout

\begin_layout LyX-Code
        <soap:fault name="ResourceUnknownFault" use="literal" />
\end_layout

\begin_layout LyX-Code
      </wsdl:fault>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="ResourceUnavailableFault">
\end_layout

\begin_layout LyX-Code
        <soap:fault name="ResourceUnavailabbleFault" use="literal" />
\end_layout

\begin_layout LyX-Code
      </wsdl:fault>
\end_layout

\begin_layout LyX-Code
    </wsdl:operation>
\end_layout

\begin_layout LyX-Code
  </wsdl:binding>
\end_layout

\begin_layout LyX-Code
  <wsdl:binding name="GetResourceProperty" type="wsrf-rpw:GetResourceProperty">
\end_layout

\begin_layout LyX-Code
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http
"/>
\end_layout

\begin_layout LyX-Code
    <wsdl:operation name="GetResourceProperty">
\end_layout

\begin_layout LyX-Code
      <soap:operation soapAction="GetResourceProperty"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:input name="wsrf-rpw:GetResourcePropertyRequest">
\end_layout

\begin_layout LyX-Code
        <soap:body use="literal"/>
\end_layout

\begin_layout LyX-Code
      </wsdl:input>
\end_layout

\begin_layout LyX-Code
      <wsdl:output name="wsrf-rpw:GetResourcePropertyResponse">
\end_layout

\begin_layout LyX-Code
        <soap:body use="literal"/>
\end_layout

\begin_layout LyX-Code
      </wsdl:output>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="ResourceUnknownFault">
\end_layout

\begin_layout LyX-Code
        <soap:fault name="ResourceUnknownFault" use="literal" />
\end_layout

\begin_layout LyX-Code
      </wsdl:fault>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="ResourceUnavailableFault">
\end_layout

\begin_layout LyX-Code
        <soap:fault name="ResourceUnavailabbleFault" use="literal" />
\end_layout

\begin_layout LyX-Code
      </wsdl:fault>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="InvalidResourcePropertyQNameFault">
\end_layout

\begin_layout LyX-Code
        <soap:fault name="InvalidResourcePropertyQNameFault" use="literal"
 />
\end_layout

\begin_layout LyX-Code
      </wsdl:fault>
\end_layout

\begin_layout LyX-Code
    </wsdl:operation>
\end_layout

\begin_layout LyX-Code
  </wsdl:binding>
\end_layout

\begin_layout LyX-Code
  <wsdl:binding name="QueryResourceProperties" type="wsrf:QueryResourcePropertie
s">
\end_layout

\begin_layout LyX-Code
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http
"/>
\end_layout

\begin_layout LyX-Code
    <wsdl:operation name="QueryResourceProperties">
\end_layout

\begin_layout LyX-Code
      <soap:operation soapAction="QueryResourceProperties"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:input name="wsrf-rpw:QueryResourcePropertiesRequest">
\end_layout

\begin_layout LyX-Code
        <soap:body use="literal"/>
\end_layout

\begin_layout LyX-Code
      </wsdl:input>
\end_layout

\begin_layout LyX-Code
      <wsdl:output name="wsrf-rpw:QueryResourcePropertiesResponse">
\end_layout

\begin_layout LyX-Code
        <soap:body use="literal"/>
\end_layout

\begin_layout LyX-Code
      </wsdl:output>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="ResourceUnknownFault">
\end_layout

\begin_layout LyX-Code
        <soap:fault name="ResourceUnknownFault" use="literal" />
\end_layout

\begin_layout LyX-Code
      </wsdl:fault>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="ResourceUnavailableFault">
\end_layout

\begin_layout LyX-Code
        <soap:fault name="ResourceUnavailabbleFault" use="literal" />
\end_layout

\begin_layout LyX-Code
      </wsdl:fault>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="InvalidResourcePropertyQNameFault">
\end_layout

\begin_layout LyX-Code
        <soap:fault name="InvalidResourcePropertyQNameFault" use="literal"
 />
\end_layout

\begin_layout LyX-Code
      </wsdl:fault>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="UnknownQueryExpressionDialectFault">
\end_layout

\begin_layout LyX-Code
        <soap:fault name="UnknownQueryExpressionDialectFault" use="literal"
 />
\end_layout

\begin_layout LyX-Code
      </wsdl:fault>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="InvalidQueryExpressionFault">
\end_layout

\begin_layout LyX-Code
        <soap:fault name="InvalidQueryExpressionFault" use="literal" />
\end_layout

\begin_layout LyX-Code
      </wsdl:fault>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="QueryEvaluationErrorFault">
\end_layout

\begin_layout LyX-Code
        <soap:fault name="QueryEvaluationErrorFault" use="literal" />
\end_layout

\begin_layout LyX-Code
      </wsdl:fault>
\end_layout

\begin_layout LyX-Code
    </wsdl:operation>
\end_layout

\begin_layout LyX-Code
  </wsdl:binding>
\end_layout

\begin_layout LyX-Code
  <wsdl:service name="a-rex">
\end_layout

\begin_layout LyX-Code
    <wsdl:port name="delegation" binding="deleg:DelegationBinding">
\end_layout

\begin_layout LyX-Code
    </wsdl:port>
\end_layout

\begin_layout LyX-Code
    <wsdl:port name="bes-factory" binding="bes-factory:BESFactoryBinding">
\end_layout

\begin_layout LyX-Code
    </wsdl:port>
\end_layout

\begin_layout LyX-Code
    <wsdl:port name="bes-mgmt" binding="bes-mgmt:BESManagementBinding">
\end_layout

\begin_layout LyX-Code
    </wsdl:port>
\end_layout

\begin_layout LyX-Code
    <wsdl:port name="GetResourcePropertyDocument" binding="a-rex:GetResourceProp
ertyDocument">
\end_layout

\begin_layout LyX-Code
    </wsdl:port>
\end_layout

\begin_layout LyX-Code
    <wsdl:port name="GetResourceProperty" binding="a-rex:GetResourceProperty">
\end_layout

\begin_layout LyX-Code
    </wsdl:port>
\end_layout

\begin_layout LyX-Code
    <wsdl:port name="QueryResourceProperties" binding="a-rex:QueryResourceProper
ties">
\end_layout

\begin_layout LyX-Code
    </wsdl:port>
\end_layout

\begin_layout LyX-Code
    <wsdl:port name="a-rex" binding="a-rex:a-rex">
\end_layout

\begin_layout LyX-Code
    </wsdl:port>
\end_layout

\begin_layout LyX-Code
  </wsdl:service>
\end_layout

\begin_layout LyX-Code
</wsdl:definitions>
\end_layout

\begin_layout Section*
Appendix E.
 Delegation WSDL
\end_layout

\begin_layout LyX-Code
<?xml version="1.0" encoding="UTF-8"?>
\end_layout

\begin_layout LyX-Code
<wsdl:definitions targetNamespace="http://www.nordugrid.org/schemas/delegation"
\end_layout

\begin_layout LyX-Code
 xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"
\end_layout

\begin_layout LyX-Code
 xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/"
\end_layout

\begin_layout LyX-Code
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
\end_layout

\begin_layout LyX-Code
 xmlns:xsd="http://www.w3.org/2001/XMLSchema"
\end_layout

\begin_layout LyX-Code
 xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
\end_layout

\begin_layout LyX-Code
 xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
\end_layout

\begin_layout LyX-Code
 xmlns:wsa="http://www.w3.org/2005/08/addressing"
\end_layout

\begin_layout LyX-Code
 xmlns:deleg="http://www.nordugrid.org/schemas/delegation">
\end_layout

\begin_layout LyX-Code
  <wsdl:types>
\end_layout

\begin_layout LyX-Code
    <xsd:schema targetNamespace="http://www.nordugrid.org/schemas/delegation">
\end_layout

\begin_layout LyX-Code
      <!-- Common types -->
\end_layout

\begin_layout LyX-Code
      <xsd:simpleType name="TokenFormatType">
\end_layout

\begin_layout LyX-Code
        <xsd:restriction base="xsd:string">
\end_layout

\begin_layout LyX-Code
          <xsd:enumeration value="x509"/>
\end_layout

\begin_layout LyX-Code
        </xsd:restriction>
\end_layout

\begin_layout LyX-Code
      </xsd:simpleType>
\end_layout

\begin_layout LyX-Code
      <xsd:complexType name="ReferenceType">
\end_layout

\begin_layout LyX-Code
        <xsd:sequence>
\end_layout

\begin_layout LyX-Code
          <xsd:any namespace="##other" processContents="lax" minOccurs="0"
 maxOccurs="unbounded"/>
\end_layout

\begin_layout LyX-Code
        </xsd:sequence>
\end_layout

\begin_layout LyX-Code
      </xsd:complexType>
\end_layout

\begin_layout LyX-Code
      <xsd:complexType name="DelegatedTokenType">
\end_layout

\begin_layout LyX-Code
        <xsd:sequence>
\end_layout

\begin_layout LyX-Code
          <xsd:element name="Id" type="xsd:string"/>
\end_layout

\begin_layout LyX-Code
          <xsd:element name="Value" type="xsd:string"/>
\end_layout

\begin_layout LyX-Code
          <xsd:element name="Reference" type="deleg:ReferenceType" minOccurs="0"
 maxOccurs="unbounded"/>
\end_layout

\begin_layout LyX-Code
        </xsd:sequence>
\end_layout

\begin_layout LyX-Code
        <xsd:attribute name="Format" type="deleg:TokenFormatType" use="required"
/>
\end_layout

\begin_layout LyX-Code
      </xsd:complexType>
\end_layout

\begin_layout LyX-Code
      <xsd:element name="DelegatedToken" type="deleg:DelegatedTokenType"/>
\end_layout

\begin_layout LyX-Code
      <xsd:complexType name="TokenRequestType">
\end_layout

\begin_layout LyX-Code
        <xsd:sequence>
\end_layout

\begin_layout LyX-Code
          <xsd:element name="Id" type="xsd:string"/>
\end_layout

\begin_layout LyX-Code
          <xsd:element name="Value" type="xsd:string"/>
\end_layout

\begin_layout LyX-Code
        </xsd:sequence>
\end_layout

\begin_layout LyX-Code
        <xsd:attribute name="Format" type="deleg:TokenFormatType" use="required"
/>
\end_layout

\begin_layout LyX-Code
      </xsd:complexType>
\end_layout

\begin_layout LyX-Code
      <xsd:element name="TokenRequest" type="deleg:TokenRequestType"/>
\end_layout

\begin_layout LyX-Code
      <!-- Types for messages -->
\end_layout

\begin_layout LyX-Code
      <xsd:complexType name="DelegateCredentialsInitRequestType">
\end_layout

\begin_layout LyX-Code
        <xsd:sequence>
\end_layout

\begin_layout LyX-Code
        </xsd:sequence>
\end_layout

\begin_layout LyX-Code
      </xsd:complexType>
\end_layout

\begin_layout LyX-Code
      <xsd:element name="DelegateCredentialsInit" type="deleg:DelegateCredential
sInitRequestType"/>
\end_layout

\begin_layout LyX-Code
      <xsd:complexType name="DelegateCredentialsInitResponseType">
\end_layout

\begin_layout LyX-Code
        <xsd:sequence>
\end_layout

\begin_layout LyX-Code
          <xsd:element name="TokenRequest" type="deleg:TokenRequestType"/>
\end_layout

\begin_layout LyX-Code
        </xsd:sequence>
\end_layout

\begin_layout LyX-Code
      </xsd:complexType>
\end_layout

\begin_layout LyX-Code
      <xsd:element name="DelegateCredentialsInitResponse" type="deleg:DelegateCr
edentialsInitResponseType"/>
\end_layout

\begin_layout LyX-Code
      <xsd:complexType name="UpdateCredentialsRequestType">
\end_layout

\begin_layout LyX-Code
        <xsd:sequence>
\end_layout

\begin_layout LyX-Code
          <xsd:element name="DelegatedToken" type="deleg:DelegatedTokenType"/>
\end_layout

\begin_layout LyX-Code
        </xsd:sequence>
\end_layout

\begin_layout LyX-Code
      </xsd:complexType>
\end_layout

\begin_layout LyX-Code
      <xsd:element name="UpdateCredentials" type="deleg:UpdateCredentialsRequest
Type"/>
\end_layout

\begin_layout LyX-Code
      <xsd:complexType name="UpdateCredentialsResponseType">
\end_layout

\begin_layout LyX-Code
        <xsd:sequence>
\end_layout

\begin_layout LyX-Code
        </xsd:sequence>
\end_layout

\begin_layout LyX-Code
      </xsd:complexType>
\end_layout

\begin_layout LyX-Code
      <xsd:element name="UpdateCredentialsResponse" type="deleg:UpdateCredential
sResponseType"/>
\end_layout

\begin_layout LyX-Code
      <!-- Faults -->
\end_layout

\begin_layout LyX-Code
      <xsd:complexType name="UnsupportedFaultType">
\end_layout

\begin_layout LyX-Code
        <xsd:sequence>
\end_layout

\begin_layout LyX-Code
          <xsd:element name="Description" type="xsd:string" minOccurs="0"/>
\end_layout

\begin_layout LyX-Code
        </xsd:sequence>
\end_layout

\begin_layout LyX-Code
      </xsd:complexType>
\end_layout

\begin_layout LyX-Code
      <xsd:element name="UnsupportedFault" type="deleg:UnsupportedFaultType"/>
\end_layout

\begin_layout LyX-Code
      <xsd:complexType name="ProcessingFaultType">
\end_layout

\begin_layout LyX-Code
        <xsd:sequence>
\end_layout

\begin_layout LyX-Code
          <xsd:element name="Description" type="xsd:string" minOccurs="0"/>
\end_layout

\begin_layout LyX-Code
        </xsd:sequence>
\end_layout

\begin_layout LyX-Code
      </xsd:complexType>
\end_layout

\begin_layout LyX-Code
      <xsd:element name="ProcessingFault" type="deleg:ProcessingFaultType"/>
\end_layout

\begin_layout LyX-Code
      <xsd:complexType name="WrongReferenceFaultType">
\end_layout

\begin_layout LyX-Code
        <xsd:sequence>
\end_layout

\begin_layout LyX-Code
          <xsd:element name="Description" type="xsd:string" minOccurs="0"/>
\end_layout

\begin_layout LyX-Code
        </xsd:sequence>
\end_layout

\begin_layout LyX-Code
      </xsd:complexType>
\end_layout

\begin_layout LyX-Code
      <xsd:element name="WrongReferenceFault" type="deleg:WrongReferenceFaultTyp
e"/>
\end_layout

\begin_layout LyX-Code
    </xsd:schema>
\end_layout

\begin_layout LyX-Code
  </wsdl:types>
\end_layout

\begin_layout LyX-Code
  <wsdl:message name="DelegateCredentialsInitRequest">
\end_layout

\begin_layout LyX-Code
    <wsdl:part name="DelegateCredentialsInitRequest" element="deleg:DelegateCred
entialsInit"/>
\end_layout

\begin_layout LyX-Code
  </wsdl:message>
\end_layout

\begin_layout LyX-Code
  <wsdl:message name="DelegateCredentialsInitResponse">
\end_layout

\begin_layout LyX-Code
    <wsdl:part name="DelegateCredentialsInitResponse" element="deleg:DelegateCre
dentialsInitResponse"/>
\end_layout

\begin_layout LyX-Code
  </wsdl:message>
\end_layout

\begin_layout LyX-Code
  <wsdl:message name="UpdateCredentialsRequest">
\end_layout

\begin_layout LyX-Code
    <wsdl:part name="UpdateCredentialsRequest" element="deleg:UpdateCredentials"
/>
\end_layout

\begin_layout LyX-Code
  </wsdl:message>
\end_layout

\begin_layout LyX-Code
  <wsdl:message name="UpdateCredentialsResponse">
\end_layout

\begin_layout LyX-Code
    <wsdl:part name="UpdateCredentialsResponse" element="deleg:UpdateCredentials
Response"/>
\end_layout

\begin_layout LyX-Code
  </wsdl:message>
\end_layout

\begin_layout LyX-Code
  <wsdl:message name="UnsupportedFault">
\end_layout

\begin_layout LyX-Code
    <wsdl:part name="Detail" element="deleg:UnsupportedFault"/>
\end_layout

\begin_layout LyX-Code
  </wsdl:message>
\end_layout

\begin_layout LyX-Code
  <wsdl:message name="ProcessingFault">
\end_layout

\begin_layout LyX-Code
    <wsdl:part name="Detail" element="deleg:ProcessingFault"/>
\end_layout

\begin_layout LyX-Code
  </wsdl:message>
\end_layout

\begin_layout LyX-Code
  <wsdl:message name="WrongReferenceFault">
\end_layout

\begin_layout LyX-Code
    <wsdl:part name="Detail" element="deleg:WrongReferenceFault"/>
\end_layout

\begin_layout LyX-Code
  </wsdl:message>
\end_layout

\begin_layout LyX-Code
  <wsdl:portType name="DelegationPortType">
\end_layout

\begin_layout LyX-Code
   <wsdl:operation name="DelegateCredentialsInit">
\end_layout

\begin_layout LyX-Code
      <wsdl:documentation>
\end_layout

\begin_layout LyX-Code
      </wsdl:documentation>
\end_layout

\begin_layout LyX-Code
      <wsdl:input name="DelegateCredentialsInitRequest"
\end_layout

\begin_layout LyX-Code
        message="deleg:DelegateCredentialsInitRequest"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:output name="DelegateCredentialsInitResponse"
\end_layout

\begin_layout LyX-Code
        message="deleg:DelegateCredentialsInitResponse"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="UnsupportedFault"
\end_layout

\begin_layout LyX-Code
        message="deleg:UnsupportedFault"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="ProcessingFault"
\end_layout

\begin_layout LyX-Code
        message="deleg:ProcessingFault"/>
\end_layout

\begin_layout LyX-Code
    </wsdl:operation>
\end_layout

\begin_layout LyX-Code
   <wsdl:operation name="UpdateCredentials">
\end_layout

\begin_layout LyX-Code
      <wsdl:documentation>
\end_layout

\begin_layout LyX-Code
      </wsdl:documentation>
\end_layout

\begin_layout LyX-Code
      <wsdl:input name="UpdateCredentialsRequest"
\end_layout

\begin_layout LyX-Code
        message="deleg:UpdateCredentialsRequest"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:output name="UpdateCredentialsResponse"
\end_layout

\begin_layout LyX-Code
        message="deleg:UpdateCredentialsResponse"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="UnsupportedFault"
\end_layout

\begin_layout LyX-Code
        message="deleg:UnsupportedFault"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="ProcessingFault"
\end_layout

\begin_layout LyX-Code
        message="deleg:ProcessingFault"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:fault name="WrongReferenceFault"
\end_layout

\begin_layout LyX-Code
        message="deleg:WrongReferenceFault"/>
\end_layout

\begin_layout LyX-Code
    </wsdl:operation>
\end_layout

\begin_layout LyX-Code
  </wsdl:portType>
\end_layout

\begin_layout LyX-Code
  <wsdl:binding name="DelegationBinding" type="deleg:DelegationPortType">
\end_layout

\begin_layout LyX-Code
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http
"/>
\end_layout

\begin_layout LyX-Code
    <wsdl:operation name="DelegateCredentialsInit">
\end_layout

\begin_layout LyX-Code
      <soap:operation soapAction="DelegateCredentialsInit"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:input name="DelegateCredentialsInitRequest">
\end_layout

\begin_layout LyX-Code
         <soap:body use="literal"/>
\end_layout

\begin_layout LyX-Code
      </wsdl:input>
\end_layout

\begin_layout LyX-Code
      <wsdl:output name="DelegateCredentialsInitResponse">
\end_layout

\begin_layout LyX-Code
         <soap:body use="literal"/>
\end_layout

\begin_layout LyX-Code
      </wsdl:output>
\end_layout

\begin_layout LyX-Code
    </wsdl:operation>
\end_layout

\begin_layout LyX-Code
    <wsdl:operation name="UpdateCredentials">
\end_layout

\begin_layout LyX-Code
      <soap:operation soapAction="UpdateCredentials"/>
\end_layout

\begin_layout LyX-Code
      <wsdl:input name="UpdateCredentialsRequest">
\end_layout

\begin_layout LyX-Code
        <soap:body use="literal"/>
\end_layout

\begin_layout LyX-Code
      </wsdl:input>
\end_layout

\begin_layout LyX-Code
      <wsdl:output name="UpdateCredentialsResponse">
\end_layout

\begin_layout LyX-Code
        <soap:body use="literal"/>
\end_layout

\begin_layout LyX-Code
      </wsdl:output>
\end_layout

\begin_layout LyX-Code
    </wsdl:operation>
\end_layout

\begin_layout LyX-Code
  </wsdl:binding>
\end_layout

\begin_layout LyX-Code
</wsdl:definitions>
\end_layout

\begin_layout Section*
Appendix F.
 ARC extensions for JSDL schema
\end_layout

\begin_layout LyX-Code
<?xml version="1.0" encoding="UTF-8"?>
\end_layout

\begin_layout LyX-Code
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
\end_layout

\begin_layout LyX-Code
            xmlns="http://www.nordugrid.org/ws/schemas/jsdl-arc"
\end_layout

\begin_layout LyX-Code
            xmlns:jsdl-arc="http://www.nordugrid.org/ws/schemas/jsdl-arc"
\end_layout

\begin_layout LyX-Code
            targetNamespace="http://www.nordugrid.org/ws/schemas/jsdl-arc">
\end_layout

\begin_layout LyX-Code
 <xsd:simpleType name="GMState_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:restriction base="xsd:string">
\end_layout

\begin_layout LyX-Code
   <xsd:enumeration value="ACCEPTED"/>
\end_layout

\begin_layout LyX-Code
   <xsd:enumeration value="PREPARING"/>
\end_layout

\begin_layout LyX-Code
   <xsd:enumeration value="SUBMIT"/>
\end_layout

\begin_layout LyX-Code
   <xsd:enumeration value="INLRMS"/>
\end_layout

\begin_layout LyX-Code
   <xsd:enumeration value="FINISHING"/>
\end_layout

\begin_layout LyX-Code
   <xsd:enumeration value="FINISHED"/>
\end_layout

\begin_layout LyX-Code
   <xsd:enumeration value="DELETED"/>
\end_layout

\begin_layout LyX-Code
   <xsd:enumeration value="CANCELING"/>
\end_layout

\begin_layout LyX-Code
  </xsd:restriction>
\end_layout

\begin_layout LyX-Code
 </xsd:simpleType>
\end_layout

\begin_layout LyX-Code
 <xsd:complexType name="Version_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:sequence>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="UpperExclusive" type="xsd:string" minOccurs="0"/>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="LowerExclusive" type="xsd:string" minOccurs="0"/>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="Exact" type="xsd:string" minOccurs="0" maxOccurs="unbounde
d"/>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="Exclusive" type="xsd:boolean" minOccurs="0"/>
\end_layout

\begin_layout LyX-Code
  </xsd:sequence>
\end_layout

\begin_layout LyX-Code
 </xsd:complexType>
\end_layout

\begin_layout LyX-Code
 <xsd:simpleType name="SessionType_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:documentation> For jsdl:Resources_Type </xsd:documentation>
\end_layout

\begin_layout LyX-Code
  <!-- xsd:element ref="SessionType" minOccurs="0"/ -->
\end_layout

\begin_layout LyX-Code
  <xsd:restriction base="xsd:string">
\end_layout

\begin_layout LyX-Code
   <xsd:enumeration value="INTERNAL"/>
\end_layout

\begin_layout LyX-Code
   <xsd:enumeration value="LIMITED"/>
\end_layout

\begin_layout LyX-Code
   <xsd:enumeration value="READONLY"/>
\end_layout

\begin_layout LyX-Code
   <xsd:enumeration value="FULL"/>
\end_layout

\begin_layout LyX-Code
  </xsd:restriction>
\end_layout

\begin_layout LyX-Code
 </xsd:simpleType>
\end_layout

\begin_layout LyX-Code
 <xsd:simpleType name="IsExecutable_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:documentation> For jsdl:DataStaging_Type (default: false) </xsd:documenta
tion>
\end_layout

\begin_layout LyX-Code
  <!-- xsd:element ref="IsExecutable" minOccurs="0"/ -->
\end_layout

\begin_layout LyX-Code
  <xsd:restriction base="xsd:boolean"/>
\end_layout

\begin_layout LyX-Code
 </xsd:simpleType>
\end_layout

\begin_layout LyX-Code
 <xsd:simpleType name="FileParameters_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:documentation> For jsdl:DataStaging_Type </xsd:documentation>
\end_layout

\begin_layout LyX-Code
  <!-- xsd:element ref="IsExecutable" minOccurs="0"/ -->
\end_layout

\begin_layout LyX-Code
  <xsd:restriction base="xsd:string"/>
\end_layout

\begin_layout LyX-Code
 </xsd:simpleType>
\end_layout

\begin_layout LyX-Code
 <xsd:simpleType name="JoinOutputs_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:documentation> For jsdl:JobDescription_Type (default: false) </xsd:docume
ntation>
\end_layout

\begin_layout LyX-Code
  <!-- xsd:element ref="JoinOutputs" minOccurs="0"/ -->
\end_layout

\begin_layout LyX-Code
  <xsd:restriction base="xsd:boolean"/>
\end_layout

\begin_layout LyX-Code
 </xsd:simpleType>
\end_layout

\begin_layout LyX-Code
 <xsd:simpleType name="Reruns_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:documentation> For jsdl:JobDescription_Type (default: false) </xsd:docume
ntation>
\end_layout

\begin_layout LyX-Code
  <!-- xsd:element ref="Reruns" minOccurs="0"// -->
\end_layout

\begin_layout LyX-Code
  <xsd:restriction base="xsd:integer"/>
\end_layout

\begin_layout LyX-Code
 </xsd:simpleType>
\end_layout

\begin_layout LyX-Code
 <xsd:complexType name="RunTimeEnvironment_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:documentation> For jsdl:Resources_Type </xsd:documentation>
\end_layout

\begin_layout LyX-Code
  <!-- xsd:element ref="RunTimeEnvironment" minOccurs="0" maxOccurs="unbounded"/
 -->
\end_layout

\begin_layout LyX-Code
  <xsd:sequence>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="Name" type="xsd:string"/>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="Version" type="Version_Type" minOccurs="0"/>
\end_layout

\begin_layout LyX-Code
  </xsd:sequence>
\end_layout

\begin_layout LyX-Code
 </xsd:complexType>
\end_layout

\begin_layout LyX-Code
 <xsd:complexType name="Middleware_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:documentation> For jsdl:Resources_Type </xsd:documentation>
\end_layout

\begin_layout LyX-Code
  <!-- xsd:element ref="Middleware" minOccurs="0" maxOccurs="unbounded"/
 -->
\end_layout

\begin_layout LyX-Code
  <xsd:sequence>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="Name" type="xsd:string"/>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="Version" type="Version_Type" minOccurs="0"/>
\end_layout

\begin_layout LyX-Code
  </xsd:sequence>
\end_layout

\begin_layout LyX-Code
 </xsd:complexType>
\end_layout

\begin_layout LyX-Code
 <xsd:complexType name="RemoteLogging_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:documentation> For jsdl:JobDescription_Type </xsd:documentation>
\end_layout

\begin_layout LyX-Code
  <!-- xsd:element ref="RemoteLogging" minOccurs="0" maxOccurs="3"/ -->
\end_layout

\begin_layout LyX-Code
  <xsd:sequence>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="URL" minOccurs="1" maxOccurs="1" type="xsd:anyURI"/>
\end_layout

\begin_layout LyX-Code
  </xsd:sequence>
\end_layout

\begin_layout LyX-Code
 </xsd:complexType>
\end_layout

\begin_layout LyX-Code
 <xsd:complexType name="CredentialServer_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:documentation> For jsdl:JobDescription_Type </xsd:documentation>
\end_layout

\begin_layout LyX-Code
  <!-- xsd:element ref="CredentialServer" minOccurs="0"/ -->
\end_layout

\begin_layout LyX-Code
  <xsd:sequence>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="URL" minOccurs="1" maxOccurs="1" type="xsd:anyURI"/>
\end_layout

\begin_layout LyX-Code
  </xsd:sequence>
\end_layout

\begin_layout LyX-Code
 </xsd:complexType>
\end_layout

\begin_layout LyX-Code
 <xsd:complexType name="LocalLogging_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:documentation> For jsdl:JobDescription_Type </xsd:documentation>
\end_layout

\begin_layout LyX-Code
  <!-- xsd:element ref="LocalLogging" minOccurs="0" maxOccurs="1"/ -->
\end_layout

\begin_layout LyX-Code
  <xsd:sequence>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="Directory" minOccurs="1" maxOccurs="1" type="xsd:string"/>
\end_layout

\begin_layout LyX-Code
  </xsd:sequence>
\end_layout

\begin_layout LyX-Code
 </xsd:complexType>
\end_layout

\begin_layout LyX-Code
 <xsd:simpleType name="AccessControlType_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:restriction base="xsd:string">
\end_layout

\begin_layout LyX-Code
   <xsd:enumeration value="GACL"/>
\end_layout

\begin_layout LyX-Code
  </xsd:restriction>
\end_layout

\begin_layout LyX-Code
 </xsd:simpleType>
\end_layout

\begin_layout LyX-Code
 <xsd:complexType name="AccessControl_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:documentation> For jsdl:JobDescription_Type </xsd:documentation>
\end_layout

\begin_layout LyX-Code
  <!-- xsd:element ref="AccessControl" minOccurs="0"/ -->
\end_layout

\begin_layout LyX-Code
  <xsd:sequence>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="OwnerAlwaysAllowed" type="xsd:boolean" minOccurs="0"/>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="Type" type="AccessControlType_Type" minOccurs="0"/>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="Content" minOccurs="0" type="xsd:string"/>
\end_layout

\begin_layout LyX-Code
  </xsd:sequence>
\end_layout

\begin_layout LyX-Code
 </xsd:complexType>
\end_layout

\begin_layout LyX-Code
 <xsd:simpleType name="NotificationType_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:restriction base="xsd:string">
\end_layout

\begin_layout LyX-Code
   <xsd:enumeration value="Email"/>
\end_layout

\begin_layout LyX-Code
  </xsd:restriction>
\end_layout

\begin_layout LyX-Code
 </xsd:simpleType>
\end_layout

\begin_layout LyX-Code
 <xsd:complexType name="Notify_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:documentation> For jsdl:JobDescription_Type </xsd:documentation>
\end_layout

\begin_layout LyX-Code
  <!-- xsd:element ref="Notify" minOccurs="0" maxOccurs="3"/ -->
\end_layout

\begin_layout LyX-Code
  <xsd:sequence>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="Type" type="NotificationType_Type" minOccurs="0"/>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="Endpoint" minOccurs="0" type="xsd:string"/>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="State" minOccurs="1" maxOccurs="unbounded" type="GMState_T
ype"/>
\end_layout

\begin_layout LyX-Code
  </xsd:sequence>
\end_layout

\begin_layout LyX-Code
 </xsd:complexType>
\end_layout

\begin_layout LyX-Code
 <xsd:simpleType name="SessionLifeTime_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:documentation> For jsdl:Resources_Type </xsd:documentation>
\end_layout

\begin_layout LyX-Code
  <!-- xsd:element ref="SessionLifeTime" minOccurs="0" maxOccurs="1"/ -->
\end_layout

\begin_layout LyX-Code
  <xsd:restriction base="xsd:long"/>
\end_layout

\begin_layout LyX-Code
 </xsd:simpleType>
\end_layout

\begin_layout LyX-Code
 <xsd:simpleType name="GridTimeLimit_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:documentation> For jsdl:Resources_Type </xsd:documentation>
\end_layout

\begin_layout LyX-Code
  <!-- xsd:element ref="GridTimeLimit" minOccurs="0" maxOccurs="1"/ -->
\end_layout

\begin_layout LyX-Code
  <xsd:restriction base="xsd:positiveInteger"/>
\end_layout

\begin_layout LyX-Code
 </xsd:simpleType>
\end_layout

\begin_layout LyX-Code
 <xsd:complexType name="CandidateTarget_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:documentation> For jsdl:Resources_Type </xsd:documentation>
\end_layout

\begin_layout LyX-Code
  <!-- xsd:element ref="jsdl-arc:CandidateTarget" minOccurs="0" maxOccurs="1"/
 -->
\end_layout

\begin_layout LyX-Code
  <xsd:sequence>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="HostName" minOccurs="0" type="xsd:string"/>
\end_layout

\begin_layout LyX-Code
   <xsd:element name="QueueName" minOccurs="0" type="xsd:string"/>
\end_layout

\begin_layout LyX-Code
  </xsd:sequence>
\end_layout

\begin_layout LyX-Code
 </xsd:complexType>
\end_layout

\begin_layout LyX-Code
 <xsd:simpleType name="Time_Type">
\end_layout

\begin_layout LyX-Code
  <xsd:documentation> For jsdl:JobDescription_Type </xsd:documentation>
\end_layout

\begin_layout LyX-Code
  <!-- xsd:element ref="ProcessingStartTime" minOccurs="0" maxOccurs="1"/
 -->
\end_layout

\begin_layout LyX-Code
  <xsd:restriction base="xsd:dateTime"/>
\end_layout

\begin_layout LyX-Code
 </xsd:simpleType>
\end_layout

\begin_layout LyX-Code
 <!--=========================================================-->
\end_layout

\begin_layout LyX-Code
 <xsd:element name="IsExecutable" type="IsExecutable_Type"/>
\end_layout

\begin_layout LyX-Code
 <xsd:element name="FileParameters" type="FileParameters_Type"/>
\end_layout

\begin_layout LyX-Code
 <xsd:element name="RunTimeEnvironment" type="RunTimeEnvironment_Type"/>
\end_layout

\begin_layout LyX-Code
 <xsd:element name="Middleware" type="Middleware_Type"/>
\end_layout

\begin_layout LyX-Code
 <xsd:element name="RemoteLogging" type="RemoteLogging_Type"/>
\end_layout

\begin_layout LyX-Code
 <xsd:element name="LocalLogging" type="LocalLogging_Type"/>
\end_layout

\begin_layout LyX-Code
 <xsd:element name="AccessControl" type="AccessControl_Type"/>
\end_layout

\begin_layout LyX-Code
 <xsd:element name="Notify" type="Notify_Type"/>
\end_layout

\begin_layout LyX-Code
 <xsd:element name="SessionLifeTime" type="SessionLifeTime_Type"/>
\end_layout

\begin_layout LyX-Code
 <xsd:element name="SessionType" type="SessionType_Type"/>
\end_layout

\begin_layout LyX-Code
 <xsd:element name="JoinOutputs" type="JoinOutputs_Type"/>
\end_layout

\begin_layout LyX-Code
 <xsd:element name="Reruns" type="Reruns_Type"/>
\end_layout

\begin_layout LyX-Code
 <xsd:element name="CredentialServer" type="CredentialServer_Type"/>
\end_layout

\begin_layout LyX-Code
 <xsd:element name="GridTimeLimit" type="GridTimeLimit_Type"/>
\end_layout

\begin_layout LyX-Code
 <xsd:element name="CandidateTarget" type="CandidateTarget_Type"/>
\end_layout

\begin_layout LyX-Code
 <xsd:element name="ProcessingStartTime" type="Time_Type"/>
\end_layout

\begin_layout LyX-Code
</xsd:schema>
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
bibliography{grid}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
