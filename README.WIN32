Building ARC on Windows system using MinGW
-------------------------------------------

- Install Automated MingW Installer - http://www.mingw.org
(http://sourceforge.net/project/showfiles.php?group_id=2435)
	- During installtion make sure You have "g++" and "mingw make" selected
  From MinGW also install
  - MSYS - http://www.mingw.org/wiki/msys
    From MSYS additionally install
    - msysDTK - MSYS Developer Tool Kit
  MSYS will create You msys shell start icon on your desktop. All operations 
  below should be done from that shell.
  - From contribution package mingwPORT - http://sourceforge.net/project/showfiles.php?group_id=2435&package_id=233332
    HINT: mingwPORT packages are installed in following way:
      * Note: If installing on Windows Vista, please download and install install.exe.manifest and
        install-info.exe.manifest and patch.exe.manifest into c:\msys\1.0\bin (the last one can be obtained by copying one
        of the first ones and rename it to patch.exe.maifest). The files can be downloaded from
        http://sourceforge.net/tracker/index.php?func=detail&aid=1711379&group_id=2435&atid=102435
        Otherwise Vista will think it needs administrative privileges to run these files and the installation of packages
        will fail.
      * Download corresponding package
      * Unpack is (tar -zxvf package.tar.gz  or  bzip2 -cd package.tar.bz2 | tar -xvf -)
      * cd inside package - cd package/mingwPORT
      * Run installation script - ./mingwPORT.sh
      * Answer all question by pressing Enter/Return key of your keyboard. Trying to enter
        any values different from default may cause You a lot of headache.
    - Install wget - it will be used by other packages during installation. 
      HINT: wget package contains precompiled wget.exe which is needed for downloading 
      wget source code. You have to put it into /tmp directry - or same place that is 
      used for downloding source tarballs by mingwPORT.sh - otherwise that executable
      may refuse to work. Do not ask me why because I do not know. (Alternative solution: export PATH=<path>/wget-1.9.1/mingwPORT:$PATH)
    - Install libiconv (if you run into problems, please refer to the installation guide here: http://www.gnu.org/software/libiconv/)
    - Install zlib
  - Install extra contribution package regex  - https://sourceforge.net/project/showfiles.php?group_id=2435&package_id=73286
  - Install package mingw autoconf-2.61 update http://sourceforge.net/project/showfiles.php?group_id=2435&package_id=67879
  - Install package gettext - http://sourceforge.net/project/showfiles.php?group_id=2435&package_id=67879  (gettext-0.16.1-1-src.tar.bz2)
  - Install package automake version 1.10 (http://sourceforge.net/project/showfiles.php?group_id=2435&package_id=67879)
  - Install libtool1.5-1.5.25a-1-src.tar.bz2
  
- If you run into this errormessage: "Couldn't reserve space for cygwin's heap (0x715B0000 <0x2600000>) in child, Win32 error 0", you should
	either try to rebase msys-1.0.dll or download the rebased dll found here: http://www.madwizard.org/electronics/articles/winavrvista

- Install gtkmm devel package. It includes glibmm. 
  (http://ftp.gnome.org/pub/gnome/binaries/win32/gtkmm/2.10/)
  TODO: We probably need to provide either mingwPORT or some other port which 
  includes only glibmm.
  - Add mktime.m4 and functions.m4 to C:\GTK\2.0\share\alocal
  	(https://svn.habolinux.de/filedetails.php?repname=tar&path=%2Fm4%2Fmktime.m4&rev=0&sc=0)
  	(http://cvs.savannah.gnu.org/viewvc/*checkout*/autoconf/autoconf/lib/autoconf/functions.m4?revision=1.119)

- Install OpenSSL. 
  (http://www.slproweb.com/products/Win32OpenSSL.html)
  - export OPENSSL_BIN=/bin/openssl

- After all installs are completed reopen MSYS shell to make it 
  acquire new environment variables.
  
- Set the following PATH variable to point to where the libraries for regular expressions have been installed; e.g.:
  - export ARC_WIN_REGEX_LIBS_PATH=/usr/local/lib

- If You have other GNU/POSIX-like environments it could be a good idea to adjust PATH 
  variable to make sure there are no conflicting utilities picked.

- Checkout code from subversion repository and build it using following steps
  HINT: For nice subversion client for windows take a look at http://tortoisesvn.tigris.org
  TODO: We have to make as little custom steps as possible
  * Checkout code usng any tool You like
  * Reopen MSYS
  * Make aclocal see m4 macros which come with GTK. If your GTK is installed in C:\GTK\2.0
    export ACLOCAL="aclocal -I /c/GTK/2.0/share/aclocal"
    Adjust path in command according to installation location of GTK.
  * You may also check if pkg-config sees GTK. echo $PKG_CONFIG_PATH should print something
    like /C/GTK/2.0/lib/pkgconfig. If there is no GTK in path You may need to add it.
  * Prepare source tree for configuration by running
    autoreconf --verbose --force --install
      * Configure source tree with something like
    ./configure CXXFLAGS="-g" OPENSSL_CFLAGS=-I/c/OpenSSL/include OPENSSL_LIBS="-L/c/OpenSSL -lssl32 -leay32" --prefix=/c/arc
    If You have installed OpenSSL at different location You may need to adjust paths.
    During configuration stage You will see that most or all services are disabled. You may
    enable them with --enable-servicename option. But take into account that building of services
    in MinGW environment was not tested yet.
    TODO: Expand ways OpenSSL is detected. This should also help in case of OpenBSD which 
    has OpenSSL as part of system and not reflected in pkg-config.
   * Build code with make
   * Install it with make install

- TODO: Explain how to make it work.
