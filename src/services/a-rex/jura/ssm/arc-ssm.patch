diff -ur 2.2.1/crypto.py 2.2.1-orig/crypto.py
--- 2.2.1/crypto.py	2018-07-16 13:48:10.704855593 +0200
+++ 2.2.1-orig/crypto.py	2018-05-14 15:00:55.000000000 +0200
@@ -289,7 +289,7 @@
     '''
     Return the certificate subject's DN, in legacy openssl format.
     '''
-    p1 = Popen(['openssl', 'x509', '-noout', '-subject', '-nameopt', 'oneline'],
+    p1 = Popen(['openssl', 'x509', '-noout', '-subject'],
                stdin=PIPE, stdout=PIPE, stderr=PIPE)
     
     subject, error = p1.communicate(certstring)
@@ -298,18 +298,7 @@
         log.error(error)
         raise CryptoException('Failed to get subject: %s' % error)
     
-    subject = subject.strip()[8:] # remove 'subject=' from the front
-    subject = subject.lstrip() # even if there is space after subject=
-    subject = subject.split(', ')
-    
-    for idx in range(len(subject)):
-        el = subject[idx].split(' = ')
-        el = '='.join(el)
-        subject.pop(idx)
-        subject.insert(idx,el)
-    
-    subject = '/' + '/'.join(subject)
-    
+    subject = subject.strip()[9:] # remove 'subject= ' from the front
     return subject
 
 
diff -ur 2.2.1/sender.cfg 2.2.1-orig/sender.cfg
--- 2.2.1/sender.cfg	2018-07-16 13:50:54.944139981 +0200
+++ 2.2.1-orig/sender.cfg	2018-05-14 15:00:55.000000000 +0200
@@ -6,15 +6,15 @@
 
 # The SSM will query a BDII to find brokers available.  These details are for the 
 # EGI production broker network
-#bdii: ldap://lcg-bdii.cern.ch:2170
-#network: PROD
+bdii: ldap://lcg-bdii.cern.ch:2170
+network: PROD
 # OR (these details will only be used if the broker network settings aren't used)
-#host: test-msg02.afroditi.hellasgrid.gr
+#host: test-msg01.afroditi.hellasgrid.gr
 #port: 6163
 
 # broker authentication.  If use_ssl is set, the certificates configured
 # in the mandatory [certificates] section will be used. 
-use_ssl: false
+use_ssl: true
 
 
 ################################################################################
@@ -36,13 +36,13 @@
 [messaging]
 
 # Queue to which SSM will send messages
-destination: /queue/global.accounting.cputest.CENTRAL
+destination: 
 
 # Outgoing messages will be read and removed from this directory.
 path: /var/spool/apel/outgoing
 
 [logging]
-logfile: /var/spool/arc/ssm/ssmsend.log
+logfile: /var/log/apel/ssmsend.log
 # Available logging levels:
 # DEBUG, INFO, WARN, ERROR, CRITICAL
 level: INFO
diff -ur 2.2.1/ssm2.py 2.2.1-orig/ssm2.py
--- 2.2.1/ssm2.py	2018-07-16 13:48:10.706855548 +0200
+++ 2.2.1-orig/ssm2.py	2018-05-14 15:00:55.000000000 +0200
@@ -24,7 +24,7 @@
     # ImportError is raised later on if SSL is actually requested.
     ssl = None
 
-import crypto
+from ssm import crypto
 from dirq.QueueSimple import QueueSimple
 from dirq.queue import Queue
 
diff -ur 2.2.1/ssmsend 2.2.1-orig/ssmsend
--- 2.2.1/ssmsend	2018-07-16 13:48:10.706855548 +0200
+++ 2.2.1-orig/ssmsend	2018-05-14 15:00:55.000000000 +0200
@@ -19,31 +19,27 @@
 @author: Will Rogers
 '''
 
-import sys
-
-# Prepend module path
-sys.path.insert(0,SSMDIR)
-
-from __init__ import __version__, set_up_logging, LOG_BREAK
-from ssm2 import Ssm2, Ssm2Exception
-from crypto import CryptoException
-from brokers import StompBrokerGetter, STOMP_SERVICE, STOMP_SSL_SERVICE
+from ssm import __version__, set_up_logging, LOG_BREAK
+from ssm.ssm2 import Ssm2, Ssm2Exception
+from ssm.crypto import CryptoException
+from ssm.brokers import StompBrokerGetter, STOMP_SERVICE, STOMP_SSL_SERVICE
 
 import logging.config
 import ldap
+import sys
 import os
 from optparse import OptionParser
 import ConfigParser
 
 
-def main(_host, _port, _topic, _key, _cert, _cadir, _message_path, _use_ssl):
+def main():
     '''
     Set up connection, send all messages and quit.
     '''
     ver = "SSM %s.%s.%s" % __version__
     op = OptionParser(description=__doc__, version=ver)
     op.add_option('-c', '--config', help='location of config file', 
-                          default="%s/sender.cfg" % SSMDIR)
+                          default='/etc/apel/sender.cfg')
     op.add_option('-l', '--log_config', 
                         help='location of logging config file (optional)', 
                         default='/etc/apel/logging.cfg')
@@ -74,7 +70,7 @@
         bdii_url = cp.get('broker','bdii')
         log.info('Retrieving broker details from %s ...', bdii_url)
         bg = StompBrokerGetter(bdii_url)
-        use_ssl = _use_ssl
+        use_ssl = cp.getboolean('broker', 'use_ssl')
         if use_ssl:
             service = STOMP_SSL_SERVICE
         else:
@@ -83,8 +79,8 @@
         log.info('Found %s brokers.', len(brokers))
     except ConfigParser.NoOptionError, e:
         try:
-            host = _host
-            port = _port
+            host = cp.get('broker', 'host')
+            port = cp.get('broker', 'port')
             brokers = [(host, int(port))]
         except ConfigParser.NoOptionError:
             log.error('Options incorrectly supplied for either single broker or \
@@ -126,12 +122,12 @@
             raise Ssm2Exception(e)
     
         sender = Ssm2(brokers, 
-                   _message_path,
-                   cert=_cert,
-                   key=_key,
-                   dest=_topic,
-                   use_ssl=_use_ssl,
-                   capath=_cadir,
+                   cp.get('messaging','path'),
+                   cert=cp.get('certificates','certificate'),
+                   key=cp.get('certificates','key'),
+                   dest=cp.get('messaging','destination'),
+                   use_ssl=cp.getboolean('broker','use_ssl'),
+                   capath=cp.get('certificates', 'capath'),
                    enc_cert=server_cert,
                    verify_enc_cert=verify_server_cert)
         
@@ -161,9 +157,4 @@
         
     
 if __name__ == '__main__':
-    if (len(sys.argv) != 9):
-        print "Usage: python ssmsend <hostname> <port> <topic> <key-path> <cert-path> <cadir-path> <path-to-messages-files> <use_ssl>"
-        sys.exit(1)
-
-    main(sys.argv[1], sys.argv[2], sys.argv[3], sys.argv[4], sys.argv[5], sys.argv[6], sys.argv[7], sys.argv[8])
-    sys.exit(0)
+    main()
