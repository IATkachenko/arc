#!@posix_shell@
# set -x
# 
#  Cancel job running in FORK.
# 

set -e

echo "----- starting cancel_fork_job -----" 1>&2

joboption_lrms=fork

# ARC1 passes first the config file.
if [ "$1" = "--config" ]; then shift; ARC_CONFIG=$1; shift; fi

basedir=`dirname $0`
basedir=`cd $basedir > /dev/null && pwd` || exit $?

pkglibdir="$basedir/@pkglibdir_rel_to_pkglibexecdir@"
pkglibdir=`cd $pkglibdir > /dev/null && pwd` || exit $?

. ${pkglibdir}/cancel_common.sh $1 || exit $?

if [ -z "$joboption_controldir" ] ; then
  joboption_controldir=`dirname "$arg_file"`
  if [ "$joboption_controldir" = '.' ] ; then
    joboption_controldir="$PWD"
  fi
fi

job_control_dir="$joboption_controldir"
if [ -z "$joboption_gridid" ] ; then
  joboption_gridid=`basename "$arg_file" | sed 's/^job\.\(.*\)\.grami$/\1/'`
fi

echo "Deleting job $joboption_gridid, local id $joboption_jobid" 1>&2

if [ ! -r "$job_control_dir/job.${joboption_gridid}.local" ]; then
  echo "Local description of job ${joboption_gridid} not found at '$job_control_dir/job.${joboption_gridid}.local'. Job was not killed, if running at all." 1>&2
  exit 1
fi

if [ -z "$joboption_jobid" ] ; then
  joboption_jobid=`cat "$job_control_dir/job.${joboption_gridid}.local" | grep '^localid=' | sed 's/^localid=//'`
fi

if [ ! -r "$job_control_dir/job.${joboption_gridid}.status" ]; then
  echo "Status file of job ${joboption_gridid} not found at '$job_control_dir/job.${joboption_gridid}.status'. Job was not killed, if running at all." 1>&2
  exit 1
fi

case X`cat "$job_control_dir/job.${joboption_gridid}.status"` in
    XINLRMS)
        if [ -z "$joboption_jobid" ] ; then
            echo "Can't find local id of job"
            exit 1
        fi
        kill -TERM $joboption_jobid
	sleep 5
	kill -KILL $joboption_jobid
        ;;

    XFINISHED | XDELETED)
        echo "Job already died, won't do anything" 1>&2
        ;;
    *)
        echo "Job is at unkillable state" 1>&2
        ;;
esac

echo "----- exiting cancel_fork_job -----" 1>&2
echo "" 1>&2
exit 0

