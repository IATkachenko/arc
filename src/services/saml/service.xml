<?xml version="1.0"?>
<ArcConfig 
  xmlns="http://www.nordugrid.org/schemas/ArcConfig/2007"
  xmlns:tcp="http://www.nordugrid.org/schemas/ArcMCCTCP/2007"
  xmlns:aa="http://www.nordugrid.org/schemas/aa/Config"
>
    <ModuleManager>
        <Path>.libs/</Path>
        <Path>../../hed/mcc/http/.libs/</Path>
        <Path>../../hed/mcc/tls/.libs/</Path>
        <Path>../../hed/mcc/soap/.libs/</Path>
        <Path>../../hed/mcc/tcp/.libs/</Path>
        <Path>../../hed/shc/.libs/</Path>
	<Path>./.libs/</Path>
    </ModuleManager>
    <Plugins><Name>mcctcp</Name></Plugins>
    <Plugins><Name>mcctls</Name></Plugins>
    <Plugins><Name>mcchttp</Name></Plugins>
    <Plugins><Name>mccsoap</Name></Plugins>
    <Plugins><Name>arcshc</Name></Plugins>
    <Plugins><Name>aa</Name></Plugins>

    <Chain>
        <Component name="tcp.service" id="tcp">
            <next id="tls"/>
            <tcp:Listen><tcp:Port>60001</tcp:Port></tcp:Listen>
        </Component>
	<Component name="tls.service" id="tls">
            <next id="http"/>
	    <KeyPath>../../tests/echo/testkey-nopass.pem</KeyPath>
	    <CertificatePath>../../tests/echo/testcert.pem</CertificatePath>
            <CACertificatesDir>../../tests/echo/certificates</CACertificatesDir>
            <CACertificatePath>../../tests/echo/testcacert.pem</CACertificatePath>
	</Component>
        <Component name="http.service" id="http">
            <next id="soap">POST</next>
        </Component>
        <Component name="soap.service" id="soap">
	    <next id="aa_service"/>
        </Component>
        <Service name="aa.service" id="aa_service">
            <aa:KeyPath>../../tests/echo/testkey-nopass.pem</aa:KeyPath>
            <aa:CertificatePath>../../tests/echo/testcert.pem</aa:CertificatePath>
            <aa:CACertificatesDir>../../tests/echo/certificates</aa:CACertificatesDir>
            <aa:CACertificatePath>../../tests/echo/testcacert.pem</aa:CACertificatePath>

            <aa:Database type="mysql" ip="localhost" port="3305" dbname="voms_knowarc" user="root" password="123456">
              <!--The sql following sentences and their combination are introduced
              according to the code of voms' mysql plugin. 
              The intention is that if some other database schema is used, you can 
              simply change the sql sentences here, without changing the code. But still,
              the input argument to these queries should be with the same meaning,
              and the same sequence as the following; also the output of these queries 
              should also be with the same meaning and the same sequence as the following-->
              <aa:SQLSet name="UID">
                <aa:SQL name="GetUID">SELECT userid FROM usr WHERE usr.dn = ?</aa:SQL>
              </aa:SQLSet>

              <aa:SQLSet name="Role">
                <aa:SQL name="GetRole">SELECT groups.dn, role FROM groups, m LEFT JOIN roles ON roles.rid = m.rid WHERE groups.gid = m.gid AND m.userid = ? AND roles.role = ?</aa:SQL>
                <aa:SQL name="GetGroup">SELECT groups.dn, NULL FROM groups, m WHERE groups.gid = m.gid AND m.userid = ?</aa:SQL>
              </aa:SQLSet>

              <aa:SQLSet name="Group">
                <aa:SQL name="GetGroup">SELECT groups.dn, NULL FROM groups, m WHERE groups.gid = m.gid AND m.userid = ?</aa:SQL>
              </aa:SQLSet>

              <aa:SQLSet name="GroupAndRole">
                <aa:SQL name="GetGroup">SELECT groups.dn, NULL FROM groups, m WHERE groups.gid = m.gid AND m.userid = ?</aa:SQL>
                <aa:SQL name="GetGroupAndRole">SELECT groups.dn, role FROM groups, m LEFT JOIN roles ON roles.rid = m.rid WHERE groups.gid = m.gid AND m.userid = ? AND roles.role = ? AND groups.dn = ?</aa:SQL>
              </aa:SQLSet>

              <aa:SQLSet name="All">
                <aa:SQL name="GetAll">SELECT groups.dn, role FROM groups, m LEFT JOIN roles ON roles.rid = m.rid WHERE groups.gid = m.gid AND m.userid = ?</aa:SQL>
              </aa:SQLSet>

              <aa:SQLSet name="GroupAndRoleAttribute">
                <aa:SQL name="GetUserAttribute">SELECT attributes.a_name, usr_attrs.a_value, NULL, NULL FROM attributes, usr_attrs WHERE attributes.a_id = usr_attrs.a_id AND usr_attrs.u_id = ?
                </aa:SQL>
                <aa:SQL name="GetGroupAttribute">SELECT attributes.a_name, group_attrs.a_value, groups.dn, NULL FROM attributes, group_attrs, groups, m WHERE attributes.a_id = group_attrs.a_id AND groups.gid = m.gid AND m.userid = ? AND m.rid is NULL AND group_attrs.g_id = m.gid
                </aa:SQL>
                <aa:SQL name="GetGroupAndRoleAttribute">SELECT attributes.a_name, role_attrs.a_value, groups.dn, roles.role FROM attributes, role_attrs, groups, roles, m WHERE attributes.a_id = role_attrs.a_id AND groups.gid = m.gid AND m.userid = ? AND m.rid = roles.rid AND roles.role = ? AND groups.dn = ? AND role_attrs.g_id = m.gid AND role_attrs.r_id = m.rid
                </aa:SQL>
              </aa:SQLSet>

              <aa:SQLSet name="GroupAttribute">
                <aa:SQL name="GetUserAttribute">SELECT attributes.a_name, usr_attrs.a_value, NULL, NULL FROM attributes, usr_attrs WHERE attributes.a_id = usr_attrs.a_id AND usr_attrs.u_id = ?
                </aa:SQL>
                <aa:SQL name="GetGroupAttribute">SELECT attributes.a_name, group_attrs.a_value, groups.dn, NULL FROM attributes, group_attrs, groups, m WHERE attributes.a_id = group_attrs.a_id AND groups.gid = m.gid AND m.userid = ? AND m.rid is NULL AND group_attrs.g_id = m.gid
                </aa:SQL>
              </aa:SQLSet>

              <aa:SQLSet name="RoleAttribute">
                <aa:SQL name="GetUserAttribute">SELECT attributes.a_name, usr_attrs.a_value, NULL, NULL FROM attributes, usr_attrs WHERE attributes.a_id = usr_attrs.a_id AND usr_attrs.u_id = ?
                </aa:SQL>
                <aa:SQL name="GetRoleAttribute">SELECT attributes.a_name, role_attrs.a_value, groups.dn, roles.role FROM m INNER JOIN groups ON m.gid = groups.gid LEFT JOIN roles ON roles.rid = m.rid INNER JOIN role_attrs on groups.gid = role_attrs.g_id INNER JOIN attributes on attributes.a_id = role_attrs.a_id WHERE role_attrs.r_id = roles.rid AND m.userid = ? AND roles.role = ?
                </aa:SQL>
              </aa:SQLSet>

              <aa:SQLSet name="AllAttribute">
                <aa:SQL name="GetUserAttribute">SELECT attributes.a_name, usr_attrs.a_value, NULL, NULL FROM attributes, usr_attrs WHERE attributes.a_id = usr_attrs.a_id AND usr_attrs.u_id = ?
                </aa:SQL>
                <aa:SQL name="GetGroupAttribute">SELECT attributes.a_name, group_attrs.a_value, groups.dn, NULL FROM attributes, group_attrs, groups, m WHERE attributes.a_id = group_attrs.a_id AND groups.gid = m.gid AND m.userid = ? AND m.rid is NULL AND group_attrs.g_id = m.gid
                </aa:SQL>
                <aa:SQL name="GetGroupAndRoleAttributeAll">SELECT attributes.a_name, role_attrs.a_value, groups.dn, roles.role FROM attributes, role_attrs, groups, roles, m WHERE attributes.a_id = role_attrs.a_id AND groups.gid = m.gid AND m.userid = ? AND m.rid = roles.rid AND role_attrs.g_id = m.gid AND role_attrs.r_id = m.rid
                </aa:SQL>
              </aa:SQLSet>

              <!--Other SQLSet-->

              <aa:SQLSet name="Default">
                <aa:SQL name="Default">SELECT groups.dn, role FROM groups, m LEFT JOIN roles ON roles.rid = m.rid WHERE groups.gid = m.gid AND m.userid = ?</aa:SQL>
              </aa:SQLSet>

            </aa:Database>
        </Service>
    </Chain>
</ArcConfig>
