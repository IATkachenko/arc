#!/bin/bash
#
# Init file for the NorduGrid/ARC LDAP based local resource information system
#
# chkconfig: 2345 76 24
# description: NorduGrid/ARC local resource information system
#
# config: /etc/sysconfig/nordugrid
# config: /etc/sysconfig/nordugrid-arc-bdii
# config: /etc/arc.conf
#
######################################################################

### BEGIN INIT INFO
# Provides:          nordugrid-arc-bdii
# Required-Start:    $remote_fs $syslog nordugrid-arc-slapd
# Required-Stop:     $remote_fs $syslog nordugrid-arc-slapd
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: NorduGrid/ARC local resource information system
# Description:       NorduGrid/ARC LDAP based local resource information system
### END INIT INFO

# Helper functions
if [ -r /etc/init.d/functions ]; then
    . /etc/init.d/functions
    log_success_msg() {
	echo -n "$@"
	success "$@"
	echo
    }
    log_warning_msg() {
	echo -n "$@"
	warning "$@"
	echo
    }
    log_failure_msg() {
	echo -n "$@"
	failure "$@"
	echo
    }
elif [ -r /lib/lsb/init-functions ]; then
    . /lib/lsb/init-functions
else
    echo "Error: Cannot source neither init.d nor lsb functions"
    exit 1
fi

RETVAL=0
prog=nordugrid-arc-bdii
RUN=yes

# sysconfig files
if [ -r /etc/sysconfig/nordugrid ]; then
    . /etc/sysconfig/nordugrid
elif [ -r /etc/default/nordugrid ]; then
    . /etc/default/nordugrid
fi
if [ -r /etc/sysconfig/$prog ]; then
    . /etc/sysconfig/$prog
elif [ -r /etc/default/$prog ]; then
    . /etc/default/$prog
fi

if [ "x$RUN" != "xyes" ]; then
    log_warning_msg "$prog disabled, please adjust the configuration to your"
    log_warning_msg "needs and then set RUN to 'yes' in /etc/default/$prog to enable it."
    exit 0
fi

[ -n "$ARC_LOCATION" ] && export ARC_LOCATION
[ -n "$ARC_CONFIG" ]   && export ARC_CONFIG

ARC_LOCATION=${ARC_LOCATION:-@prefix@}
if [ ! -d "$ARC_LOCATION" ]; then
    log_failure_msg "ARC_LOCATION ($ARC_LOCATION) not found"
    exit 1
fi

arcconfig_parser=${ARC_LOCATION}/@pkglibexecsubdir@/arcconfig-parser

ARC_CONFIG=${ARC_CONFIG:-/etc/arc.conf}
if [ ! -r "$ARC_CONFIG" ]; then
    log_failure_msg "ARC configuration file ($ARC_CONFIG) not found"
    log_failure_msg "If this file is in a non-standard place it can be set"
    log_failure_msg "  with the ARC_CONFIG environment variable"
    exit 1
fi

# Check for infosys block
if ! ${arcconfig_parser} -c ${ARC_CONFIG} -b infosys; then
    log_failure_msg "Missing [infosys] configuration block"
    exit 1
fi

# Check for infosys/ldap block
if ! ${arcconfig_parser} -c ${ARC_CONFIG} -b infosys/ldap; then
    log_failure_msg "Missing [infosys/ldap] configuration block"
    exit 1
fi

# Check for infosys/ldap/bdii block
if ! ${arcconfig_parser} -c ${ARC_CONFIG} -b infosys/ldap/bdii; then
    log_failure_msg "Missing [infosys/ldap/bdii] configuration block"
    exit 1
fi

eval $(${arcconfig_parser} -c ${ARC_CONFIG} -b common -e bash)

# These options need to come from the infosys block, not from common
unset CONFIG_logfile
unset CONFIG_user
unset CONFIG_port

eval $(${arcconfig_parser} -c ${ARC_CONFIG} -b infosys -e bash)
eval $(${arcconfig_parser} -c ${ARC_CONFIG} -b infosys/ldap -e bash)
eval $(${arcconfig_parser} -c ${ARC_CONFIG} -b infosys/ldap/bdii -e bash)

bdii_user=$CONFIG_user
if [ -z "$bdii_user" ]; then
    # Get ldap user from passwd
    bdii_user=`getent passwd ldap openldap | sed 's/:.*//;q'`
    if [ -z "$bdii_user" ]; then
	log_warning_msg "Warning, could not find ldap or openldap user"
	log_warning_msg "resorting to using the root user"
	bdii_user=root
    fi
fi

# Use this command to change user
if [ -x /sbin/runuser ]; then
    RUNUSER=runuser
else
    RUNUSER=su
fi

# If missing, we have a problem
USERSHELL=${USERSHELL:-"/bin/sh"}
if [ ! -x ${USERSHELL} ]; then
    log_failure_msg "Could not find ${USERSHELL}"
    exit 1
fi

bdii_location=${CONFIG_bdii_location:-/usr}
bdii_update_cmd=${CONFIG_bdii_update_cmd:-${bdii_location}/sbin/bdii-update}
if [ ! -x $bdii_update_cmd ]; then
    log_failure_msg "Can not find bdii-update command at: $bdii_update_cmd."
    log_failure_msg "Please set bdii_update_cmd in arc.conf"
    exit 1
fi

bdii_run_dir=${CONFIG_bdii_run_dir:-/var/run/arc/bdii}
update_pid_file=${CONFIG_bdii_update_pid_file:-$bdii_run_dir/bdii-update.pid}

if [ `id -u` = 0 ]; then
    # Debian does not have /var/lock/subsys
    if [ -d /var/lock/subsys ]; then
	update_lock_file=${update_lock_file:-/var/lock/subsys/$prog}
    else
	update_lock_file=${update_lock_file:-/var/lock/$prog}
    fi
else
    update_lock_file=$HOME/$prog
fi

infosys_ldap_run_dir=${CONFIG_infosys_ldap_run_dir:-/var/run/arc/infosys}
BDII_CONF=${CONFIG_bdii_conf:-${infosys_ldap_run_dir}/bdii.conf}

start () {
    if [ -r "${update_lock_file}" ]; then
	log_success_msg "$prog already started"
	RETVAL=0
	return ${RETVAL}
    fi

    ${ARC_LOCATION}/@pkgdatasubdir@/create-bdii-config
    if [ ! $? = 0 ]; then
	log_failure_msg "Failed to create configuration for $prog"
	exit 1
    fi

    if [ `id -u` = 0 ]; then
	$RUNUSER -s "$USERSHELL" -c "${bdii_update_cmd} -c ${BDII_CONF} -d" ${bdii_user}
    else
	${bdii_update_cmd} -c ${BDII_CONF} -d
    fi
    touch ${update_lock_file}

    iterlimit=30
    while [ $iterlimit -ge 0 ] && ! [ -r ${update_pid_file} ]; do
	sleep 1
	iterlimit=$(expr $iterlimit - 1)
    done

    if [ ! -r ${update_pid_file} ]; then
	log_failure_msg "$prog failed to start"
	rm -f ${update_lock_file}
	RETVAL=1
	return ${RETVAL}
    fi

    log_success_msg "$prog started"
}

stop () {
    if [ ! -r "${update_lock_file}" ]; then
	log_success_msg "$prog already stopped"
	RETVAL=0
	return ${RETVAL}
    fi

    if [ -r "${update_pid_file}" ]; then
	update_pid=$(cat ${update_pid_file})
	ps ${update_pid} >/dev/null 2>&1
	if [ ! $? = 0 ]; then
	    log_failure_msg "$prog pid file exists but the process died"
	    RETVAL=1
	    return ${RETVAL}
	fi
    else
	log_failure_msg "$prog process has no pid file"
	RETVAL=1
	return ${RETVAL}
    fi

    killall -u ${bdii_user} -15 arc-nordugrid-bdii-ldif 2>/dev/null

    if [ -n "${update_pid}" ]; then
	kill -15 ${update_pid} 2>/dev/null
	ps ${update_pid} >/dev/null 2>&1
	if [ $? = 0 ]; then
	    sleep 2
	    ps ${update_pid} >/dev/null 2>&1
	    if [ $? = 0 ]; then
		kill -9 ${update_pid} 2>/dev/null
		sleep 2
		ps ${update_pid} >/dev/null 2>&1
		if [ $? = 0 ]; then
		    RETVAL=1
		fi
	    fi
	fi
    fi

    # Clean up
    rm -f ${infosys_ldap_run_dir}/arc-glue-bdii-ldif

    if [ ${RETVAL} = 0 ];  then
	rm -f ${update_pid_file}
	rm -f ${update_lock_file}
	log_success_msg "$prog stopped"
    else
	log_failure_msg "Could not kill $prog with pid ${update_pid}"
    fi

    return ${RETVAL}
}

status ()  {
    if [ ! -f "${update_lock_file}" ]; then
	log_success_msg "$prog is stopped"
	RETVAL=3
	return ${RETVAL}
    fi

    if [ -r ${update_pid_file} ]; then
	ps $(cat ${update_pid_file}) >/dev/null 2>&1
	if [ ! $? = 0 ]; then
	    log_failure_msg "$prog pid file exists but the process died"
	    RETVAL=1
	    return ${RETVAL}
	fi
    else
	log_failure_msg "$prog process has no pid file"
	RETVAL=2
	return ${RETVAL}
    fi

    log_success_msg "$prog is running"

    RETVAL=0
    return ${RETVAL}
}

case "$1" in
    start)
	start
	;;
    stop)
	stop
	;;
    restart | force-reload)
	stop
	# avoid race
	sleep 3
	start
	;;
    reload)
	;;
    status)
	status
	;;
    condrestart | try-restart)
	if [ -r ${update_lock_file} ]; then
	    stop
	    # avoid race
	    sleep 3
	    start
	fi
	;;
    *)
	echo "Usage: $0 {start|stop|restart|force-reload|reload|condrestart|try-restart|status}"
	exit 1
	;;
esac

exit $RETVAL
