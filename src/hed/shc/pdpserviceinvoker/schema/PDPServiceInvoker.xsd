<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema
  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns="http://www.nordugrid.org/schemas/PDPServiceInvoker"
  xmlns:ini="http://www.nordugrid.org/schemas/ini/2009/08"
  targetNamespace="http://www.nordugrid.org/schemas/PDPServiceInvoker"
  elementFormDefault="qualified">
 
    <!-- Imports -->
    <xsd:import namespace="http://www.nordugrid.org/schemas/ini/2009/08" schemaLocation="../../../daemon/schema/ini.xsd"/>

    <xsd:element name="Filter" type="FilterType"/>
    <xsd:complexType name="FilterType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
              This element defines Security Attributes to select and reject.
              If there are no Select elements all Attributes are used except
              those listed in Reject elements.
            </xsd:documentation>
            <xsd:appinfo>
                <ini:tag>filtertype</ini:tag>
            </xsd:appinfo>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="Select" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="Reject" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:element name="ServiceEndpoint" type="xsd:string">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
              This element is to specify endpoint about remote pdpservice.
              It will be configured under the <PDP name="pdpservice.invoker"/>
            </xsd:documentation>
            <xsd:appinfo>
                <ini:tag>serviceendpoint</ini:tag>
            </xsd:appinfo>
        </xsd:annotation>
    </xsd:element>

    <xsd:element name="RequestFormat" type="xsd:string", default="arc">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
             This element is to specified the format of request. Two options
             are recognized: xacml, arc.
             Default is "arc".
            </xsd:documentation>
            <xsd:appinfo>
                <ini:tag>requestformat</ini:tag>
            </xsd:appinfo>
        </xsd:annotation> 
    </xsd:element>

    <xsd:element name="TransferProtocol" type="xsd:string" default="arc">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
              This element is to specified the protocol for transfering request.
              Default is the arc specific protocol; if "SAML" is specified, then
              the "SAML2.0 profile of the XACML v2.0" will be used for carrying
              request.
              If RequestFormat is specified to XACML, and Transfer is specified to SAML,
              then this pdpservice invoker is able to interact with third-party pdp
              service, such as the GLite authorization service.
              Two options are recognized: saml, arc.
             Default is "arc".
            </xsd:documentation>
            <xsd:appinfo>
                <ini:tag>transferprotocol</ini:tag>
            </xsd:appinfo>
        </xsd:annotation>
    </xsd:element>

    <!--The following information is about credential. Since the pdpserviceinvoker is 
    actually a client which will invoke the remote pdpservice, it should has its credential
    configuration, but it could also use the credential of the MCCTLS which is in the same 
    chain as this uplevel service (which is using the pdpserviceinvoker) configuration. 
    If the latter situation applies, the following element don't not need to be configured 
    under the <PDP name="pdpservice.invoker"/>.
    However, the credential of the MCCTLS in the main chain and the credential of the
    pdpservice.invoker should not be coupled, since pdpservice could use tls, but this normal
    service (which configures the pdpservice.invoker inside) could not use tls, and vice versa.-->


    <xsd:element name="KeyPath" type="xsd:string" default="$HOME/.globus/userkey.pem">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
               Location of private key.
               Default is $HOME/.globus/userkey.pem.
            </xsd:documentation>
            <xsd:appinfo>
                <ini:tag>keypath</ini:tag>
            </xsd:appinfo>
        </xsd:annotation>
    </xsd:element>

    <xsd:element name="CertificatePath" type="xsd:string" default="$HOME/.globus/usercert.pem">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
             Location of public certificate.
             Default is $HOME/.globus/usercert.pem.
            </xsd:documentation>
            <xsd:appinfo>
                <ini:tag>certificatepath</ini:tag>
            </xsd:appinfo>
        </xsd:annotation>
    </xsd:element>

    <xsd:element name="ProxyPath" type="xsd:string" default="/tmp/hash{userid}.0">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
             Location of proxy credentials - includes certificates,
             key and chain of involved certificates. Overwrites
             elements KeyPath and CertificatePath. Default is /tmp/hash{userid}.0
            </xsd:documentation>
            <xsd:appinfo>
                <ini:tag>proxypath</ini:tag>
            </xsd:appinfo>
        </xsd:annotation>
    </xsd:element>

    <xsd:element name="CACertificatePath" type="xsd:string"/>
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
             Location of certificate of CA. Default is none.
            </xsd:documentation>
            <xsd:appinfo>
                <ini:tag>cafile</ini:tag>
            </xsd:appinfo>
        </xsd:annotation>
    </xsd:element>

    <xsd:element name="CACertificatesDir" default="/etc/grid-security/certificates">
        <xsd:complexType>
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
                 Directory containing certificates of accepted CAs.
                 Default is /etc/grid-security/certificates
                </xsd:documentation>
                <xsd:appinfo>
                    <ini:tag>cadir</ini:tag>
                </xsd:appinfo>
            </xsd:annotation>
        </xsd:complexType>
    </xsd:element>

</xsd:schema>
